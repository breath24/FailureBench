{
  "task_id": "abc393_e",
  "task_description": "You are given a sequence A = (A_1, A_2, \\dots, A_N) of length N and a positive integer K (at most N).\r\nFor each i = 1, 2, \\dots, N, solve the following problem:\n\n- When you choose K elements from A that include A_i, find the maximum possible GCD (greatest common divisor) of those chosen elements.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\r\nA_1 A_2 \\dots A_N\n\nOutput\n\nPrint N lines. The j-th line should contain the answer for i=j.\n\nConstraints\n\n\n- 1 \\leq K \\leq N \\leq 1.2 \\times 10^6\n- 1 \\leq A_i \\leq 10^6\n- All input values are integers.\n\nSample Input 1\n\n5 2\r\n3 4 6 7 12\n\nSample Output 1\n\n3\r\n4\r\n6\r\n1\r\n6\r\n\nFor i=1, choosing A_1 and A_3 yields \\gcd(\\lbrace 3,6 \\rbrace) = 3, which is the maximum.\r\nFor i=2, choosing A_2 and A_5 yields \\gcd(\\lbrace 4,12 \\rbrace) = 4, which is the maximum.\r\nFor i=3, choosing A_3 and A_5 yields \\gcd(\\lbrace 6,12 \\rbrace) = 6, which is the maximum.\r\nFor i=4, choosing A_4 and A_2 yields \\gcd(\\lbrace 7,4 \\rbrace) = 1, which is the maximum.\r\nFor i=5, choosing A_5 and A_3 yields \\gcd(\\lbrace 12,6 \\rbrace) = 6, which is the maximum.\n\nSample Input 2\n\n3 3\r\n6 10 15\n\nSample Output 2\n\n1\r\n1\r\n1\n\nSample Input 3\n\n10 3\r\n414003 854320 485570 52740 833292 625990 909680 885153 435420 221663\n\nSample Output 3\n\n59\r\n590\r\n590\r\n879\r\n879\r\n590\r\n20\r\n879\r\n590\r\n59",
  "llm_response": "import sys\nimport math\nfrom collections import defaultdict\n\ndef candidate_func(input_str):\n    lines = input_str.split('\\n')\n    first_line = lines[0].split()\n    N, K = int(first_line[0]), int(first_line[1])\n    A = list(map(int, lines[1].split()))\n    \n    max_A = max(A)\n    freq = defaultdict(int)\n    for num in A:\n        freq[num] += 1\n    \n    divisors = defaultdict(int)\n    for d in range(1, max_A + 1):\n        for multiple in range(d, max_A + 1, d):\n            divisors[d] += freq.get(multiple, 0)\n    \n    result = []\n    for num in A:\n        max_gcd = 1\n        for d in sorted(divisors.keys(), reverse=True):\n            if divisors[d] >= K:\n                if math.gcd(num, d) >= max_gcd:\n                    max_gcd = math.gcd(num, d)\n                    if max_gcd == d:\n                        break\n        result.append(str(max_gcd))\n    \n    return '\\n'.join(result)",
  "model": "deepseek-chat-v3-0324"
}