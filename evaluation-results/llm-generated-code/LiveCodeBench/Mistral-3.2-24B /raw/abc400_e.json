{
  "task_id": "abc400_e",
  "task_description": "A positive integer N is a 400 number if and only if it satisfies both of the following two conditions:\n\n- N has exactly 2 distinct prime factors.\n- For each prime factor p of N, p divides N an even number of times. More formally, the maximum non-negative integer k such that p^k divides N is even.\n\nProcess Q queries. Each query gives you an integer A, so find the largest 400 number not exceeding A. Under the constraints of this problem, a 400 number not exceeding A always exists.\n\nInput\n\nThe input is given from Standard Input in the following format:\nQ\r\n\\text{query}_1\r\n\\text{query}_2\r\n\\vdots\r\n\\text{query}_Q\r\n\nHere, \\text{query}_i is the i-th query, given in the following format:\nA\n\nOutput\n\nPrint Q lines. The i-th line should contain the answer to the i-th query.\n\nConstraints\n\n\n- 1 \\leq Q \\leq 2 \\times 10^5\n- For each query, 36 \\leq A \\leq 10^{12}.\n- All input values are integers.\n\nSample Input 1\n\n5\r\n404\r\n36\r\n60\r\n1000000000000\r\n123456789\n\nSample Output 1\n\n400\r\n36\r\n36\r\n1000000000000\r\n123454321\r\n\nLet us explain the first query.\nThere are exactly 2 prime factors of 400: 2 and 5. Also, 2 divides 400 four times and 5 divides it twice, so 400 is a 400 number. None of 401, 402, 403, and 404 is a 400 number, so the answer is 400.",
  "llm_response": "import sys\nimport math\n\ndef candidate_func(s):\n    lines = s.split('\\n')\n    Q = int(lines[0])\n    queries = list(map(int, lines[1:Q+1]))\n    max_prime = 10**6\n    sieve = [True] * (max_prime + 1)\n    sieve[0] = sieve[1] = False\n    for i in range(2, int(math.sqrt(max_prime)) + 1):\n        if sieve[i]:\n            for j in range(i*i, max_prime + 1, i):\n                sieve[j] = False\n    primes = [i for i, is_prime in enumerate(sieve) if is_prime]\n    prime_set = set(primes)\n    result = []\n    for A in queries:\n        if A <= 36:\n            result.append(str(A))\n            continue\n        for i in range(2, 100000):\n            if i * i > A:\n                break\n            if A % i == 0:\n                a, b = i, A // i\n                if a in prime_set and b in prime_set:\n                    if a == b:\n                        if (A // (a * a)) % a == 0:\n                            result.append(str(A))\n                            break\n                    else:\n                        if (A // (a * b)) % a == 0 and (A // (a * b)) % b == 0:\n                            result.append(str(A))\n                            break\n        else:\n            result.append(str(A))\n    return '\\n'.join(result)",
  "model": "mistral-3.2-24b"
}