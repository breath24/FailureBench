{
  "task_id": "abc392_a",
  "task_description": "You are given a sequence of integers A = (A_1, A_2, A_3).\r\nLet B = (B_1, B_2, B_3) be any permutation of A.\r\nDetermine whether it is possible that B_1 \\times B_2 = B_3.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA_1 A_2 A_3\n\nOutput\n\nIf it is possible that B_1 \\times B_2 = B_3, print Yes; otherwise, print No.\n\nConstraints\n\n\n- All input values are integers.\n- 1 \\le A_1, A_2, A_3 \\le 100\n\nSample Input 1\n\n3 15 5\n\nSample Output 1\n\nYes\r\n\nHere, A=(3,15,5).\r\nBy rearranging it as B=(3,5,15), we can satisfy B_1 \\times B_2 = B_3.\n\nSample Input 2\n\n5 3 2\n\nSample Output 2\n\nNo\r\n\nNo permutation of B satisfies B_1 \\times B_2 = B_3.",
  "llm_response": "def candidate_func(s):\n    a = list(map(int, s.split()))\n    for i in range(3):\n        for j in range(3):\n            if i != j:\n                for k in range(3):\n                    if k != i and k != j:\n                        if a[i] * a[j] == a[k]:\n                            return \"Yes\"\n    return \"No\"",
  "model": "mistral-3.2-24b"
}