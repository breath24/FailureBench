{
  "task_id": "BigCodeBench/287",
  "instruct_prompt": "Count the number of words in .txt files within a specified directory, export the counts to a JSON file, and then return the total number of words.\nThe function should output with:\n    int: total number of words in .txt files\nYou should write self-contained code starting with:\n```\nfrom collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n```",
  "llm_response": "from collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n    \"\"\"\n    Count the number of words in all .txt files within the specified directory,\n    save the word counts to a JSON file, and return the total word count.\n\n    Parameters:\n    - filename (str): The name of the JSON file to save the word counts.\n    - directory (str): The directory path to search for .txt files.\n\n    Returns:\n    - int: The total number of words in all .txt files.\n\n    The JSON file will have filenames as keys and their respective word counts as values.\n    \"\"\"\n    word_counts = {}\n    total_words = 0\n    \n    # Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"The directory {directory} does not exist.\")\n    \n    # Iterate over all files in the directory\n    for file in os.listdir(directory):\n        if file.endswith('.txt'):\n            file_path = os.path.join(directory, file)\n            try:\n                with open(file_path, 'r', encoding='utf-8') as f:\n                    content = f.read()\n                    words = content.split()\n                    word_count = len(words)\n                    word_counts[file] = word_count\n                    total_words += word_count\n            except Exception as e:\n                print(f\"Error processing file {file}: {e}\")\n    \n    # Write the word counts to the JSON file\n    with open(filename, 'w', encoding='utf-8') as json_file:\n        json.dump(word_counts, json_file, indent=4)\n    \n    return total_words",
  "model": "deepseek-chat-v3-0324"
}