{
  "task_id": "BigCodeBench/1013",
  "instruct_prompt": "This function scrapes a webpage for all hyperlinks and saves them as absolute URLs to a CSV file.\nThe function should output with:\n    int: The number of unique absolute links scraped from the webpage.\nYou should write self-contained code starting with:\n```\nimport requests\nfrom urllib.parse import urljoin\nfrom bs4 import BeautifulSoup\nimport csv\ndef task_func(\n    url: str,\n    base_url: str = \"https://www.example.com\",\n    csv_file: str = \"scraped_data.csv\",\n) -> int:\n```",
  "llm_response": "import requests\nfrom urllib.parse import urljoin\nfrom bs4 import BeautifulSoup\nimport csv\ndef task_func(\n    url: str,\n    base_url: str = \"https://www.example.com\",\n    csv_file: str = \"scraped_data.csv\",\n) -> int:\n    \"\"\"\n    Scrapes a webpage for all hyperlinks and saves them as absolute URLs to a CSV file.\n    \n    Args:\n        url (str): The URL of the webpage to scrape.\n        base_url (str, optional): The base URL used to resolve relative URLs. Defaults to \"https://www.example.com\".\n        csv_file (str, optional): The name of the CSV file to save the links. Defaults to \"scraped_data.csv\".\n    \n    Returns:\n        int: The number of unique absolute links scraped from the webpage.\n    \"\"\"\n    try:\n        response = requests.get(url)\n        response.raise_for_status()\n    except requests.RequestException as e:\n        print(f\"Error fetching the URL: {e}\")\n        return 0\n    \n    soup = BeautifulSoup(response.text, 'html.parser')\n    links = set()\n    \n    for link in soup.find_all('a', href=True):\n        href = link['href']\n        if href.startswith('http'):\n            absolute_url = href\n        else:\n            absolute_url = urljoin(base_url, href)\n        links.add(absolute_url)\n    \n    with open(csv_file, 'w', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow(['URL'])\n        for link in links:\n            writer.writerow([link])\n    \n    return len(links)",
  "model": "deepseek-chat-v3-0324"
}