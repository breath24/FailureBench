{
  "task_id": "BigCodeBench/326",
  "instruct_prompt": "Find and run all .bat files in a given directory, returning their file names and exit codes.\nThe function should output with:\n    list of tuples: A list where each tuple contains the file name and its exit code.\n    The exit code is None if the file could not be executed.\nYou should write self-contained code starting with:\n```\nimport subprocess\nimport os\nimport sys\nimport glob\ndef task_func(directory_path):\n```",
  "llm_response": "import subprocess\nimport os\nimport sys\nimport glob\ndef task_func(directory_path):\n    # Ensure the directory path is valid\n    if not os.path.isdir(directory_path):\n        raise ValueError(f\"The provided path '{directory_path}' is not a valid directory.\")\n\n    # Find all .bat files in the given directory\n    bat_files = glob.glob(os.path.join(directory_path, '*.bat'))\n    \n    # List to store the results\n    results = []\n\n    # Iterate over each .bat file and attempt to execute it\n    for bat_file in bat_files:\n        try:\n            # Run the .bat file and capture the exit code\n            completed_process = subprocess.run(bat_file, shell=True, check=False)\n            exit_code = completed_process.returncode\n        except Exception as e:\n            # If an error occurs, set the exit code to None\n            exit_code = None\n\n        # Append the result as a tuple (file name, exit code)\n        results.append((os.path.basename(bat_file), exit_code))\n\n    return results",
  "model": "gpt-4o"
}