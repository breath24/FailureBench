{
  "task_id": "BigCodeBench/313",
  "instruct_prompt": "Organize files in a directory based on the first text that is not enclosed in square brackets. Move the files to subdirectories named after this text. If no matching text is found, the file is not moved.\nThe function should output with:\n    tuple:\n    str: The directory path with organized files.\n    dict: A dictionary where keys are the created subdirectories and values are lists of files moved to them.\nYou should write self-contained code starting with:\n```\nimport re\nimport os\nimport shutil\nfrom datetime import datetime\ndef task_func(directory):\n```",
  "llm_response": "import re\nimport os\nimport shutil\nfrom datetime import datetime\ndef task_func(directory):\n    \"\"\"\n    Organize files in a directory based on the first text that is not enclosed in square brackets.\n    \n    Args:\n    directory (str): The path to the directory containing files to be organized.\n    \n    Returns:\n    tuple: A tuple containing the directory path with organized files and a dictionary where keys are the created subdirectories and values are lists of files moved to them.\n    \"\"\"\n    \n    # Initialize an empty dictionary to store the subdirectories and their corresponding files\n    organized_files = {}\n    \n    # Iterate over each file in the directory\n    for filename in os.listdir(directory):\n        # Construct the full path to the file\n        filepath = os.path.join(directory, filename)\n        \n        # Check if the file is a regular file (not a directory)\n        if os.path.isfile(filepath):\n            # Use regular expression to find the first text not enclosed in square brackets\n            match = re.search(r'\\[.*?\\](.*?)\\[|$|(.*?)\\(', filename)\n            \n            # If a match is found, extract the text\n            if match:\n                text = match.group(1) or match.group(2)\n                \n                # Remove leading and trailing whitespace from the text\n                text = text.strip()\n                \n                # If the text is not empty, use it as the subdirectory name\n                if text:\n                    # Create the subdirectory if it does not exist\n                    subdirectory = os.path.join(directory, text)\n                    os.makedirs(subdirectory, exist_ok=True)\n                    \n                    # Move the file to the subdirectory\n                    shutil.move(filepath, subdirectory)\n                    \n                    # Update the dictionary of organized files\n                    if text not in organized_files:\n                        organized_files[text] = []\n                    organized_files[text].append(filename)\n    \n    # Return the directory path and the dictionary of organized files\n    return directory, organized_files\ndirectory = '/path/to/your/directory'",
  "model": "llama-3.3-70b"
}