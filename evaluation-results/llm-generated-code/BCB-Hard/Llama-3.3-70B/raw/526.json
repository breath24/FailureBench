{
  "task_id": "BigCodeBench/526",
  "instruct_prompt": "Read a list of dictionaries from a JSON file, calculate the mean and median for each key (ignoring non-numeric or missing values), and convert the results into a Pandas DataFrame.\nThe function should output with:\n    df (pd.DataFrame): A DataFrame indexed and sorted by the variable names (keys) from the\n    input data, containing columns 'mean' and 'median'.\nYou should write self-contained code starting with:\n```\nimport json\nimport pandas as pd\nimport numpy as np\nfrom collections import defaultdict\ndef task_func(input_file=\"data.json\"):\n```",
  "llm_response": "import json\nimport pandas as pd\nimport numpy as np\nfrom collections import defaultdict\ndef task_func(input_file=\"data.json\"):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key \n    (ignoring non-numeric or missing values), and convert the results into a Pandas DataFrame.\n\n    Args:\n        input_file (str): Path to the JSON file.\n\n    Returns:\n        pd.DataFrame: A DataFrame indexed and sorted by the variable names (keys) from the \n        input data, containing columns 'mean' and 'median'.\n    \"\"\"\n\n    # Load the JSON data\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n\n    # Initialize a dictionary to store the values for each key\n    values_dict = defaultdict(list)\n\n    # Iterate over the list of dictionaries\n    for item in data:\n        # Iterate over the key-value pairs in the dictionary\n        for key, value in item.items():\n            # Check if the value is numeric\n            if isinstance(value, (int, float)):\n                # Append the value to the list in the dictionary\n                values_dict[key].append(value)\n\n    # Initialize a dictionary to store the mean and median for each key\n    results_dict = {}\n\n    # Iterate over the key-value pairs in the dictionary\n    for key, values in values_dict.items():\n        # Calculate the mean and median\n        mean = np.mean(values)\n        median = np.median(values)\n        # Store the results in the dictionary\n        results_dict[key] = {'mean': mean, 'median': median}\n\n    # Convert the dictionary to a Pandas DataFrame\n    df = pd.DataFrame(results_dict).T\n\n    # Sort the DataFrame by index\n    df = df.sort_index()\n\n    return df",
  "model": "llama-3.3-70b"
}