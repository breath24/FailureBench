{
  "task_id": "BigCodeBench/582",
  "instruct_prompt": "Create a list of normally distributed random numbers and plot their histogram and probability density function (PDF).\nThe function should output with:\n    matplotlib.figure.Figure: A figure object containing the histogram and PDF plot.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\ndef task_func(size=1000):\n```",
  "llm_response": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\ndef task_func(size=1000):\n    \"\"\"\n    Generate a list of normally distributed random numbers and plot their histogram and probability density function (PDF).\n\n    Args:\n        size (int, optional): The number of random numbers to generate. Defaults to 1000.\n\n    Returns:\n        matplotlib.figure.Figure: A figure object containing the histogram and PDF plot.\n    \"\"\"\n    # Generate normally distributed random numbers\n    np.random.seed(0)  # For reproducibility\n    random_numbers = np.random.normal(loc=0, scale=1, size=size)\n\n    # Create a figure and axis object\n    fig, ax = plt.subplots()\n\n    # Plot the histogram of the random numbers\n    ax.hist(random_numbers, bins=30, density=True, alpha=0.5, label='Histogram')\n\n    # Plot the probability density function (PDF) of the normal distribution\n    x = np.linspace(-3, 3, 100)\n    ax.plot(x, stats.norm.pdf(x, loc=0, scale=1), 'r-', label='PDF')\n\n    # Set title and labels\n    ax.set_title('Histogram and PDF of Normally Distributed Random Numbers')\n    ax.set_xlabel('Value')\n    ax.set_ylabel('Probability Density')\n    ax.legend()\n\n    # Return the figure object\n    return fig",
  "model": "llama-3.3-70b"
}