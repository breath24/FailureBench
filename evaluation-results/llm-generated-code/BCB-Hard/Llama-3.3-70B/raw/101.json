{
  "task_id": "BigCodeBench/101",
  "instruct_prompt": "Draw the correlation heatmap of the Boston Housing dataset using Seaborn, with an option to save it to a specified file.\nThe function should raise the exception for: ValueError: If an error occurs in generating or saving the plot.\nThe function should output with:\n    matplotlib.axes.Axes: The Axes object containing the heatmap plot.\nYou should write self-contained code starting with:\n```\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\ndef task_func(data_url=\"http://lib.stat.cmu.edu/datasets/boston\", seed=42):\n```",
  "llm_response": "import matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\ndef task_func(data_url=\"http://lib.stat.cmu.edu/datasets/boston\", seed=42):\n    \"\"\"\n    Draw the correlation heatmap of the Boston Housing dataset using Seaborn, \n    with an option to save it to a specified file.\n\n    Args:\n    - data_url (str): The URL of the Boston Housing dataset.\n    - seed (int): The random seed for reproducibility.\n\n    Returns:\n    - matplotlib.axes.Axes: The Axes object containing the heatmap plot.\n\n    Raises:\n    - ValueError: If an error occurs in generating or saving the plot.\n    \"\"\"\n    try:\n        # Load the Boston Housing dataset\n        from sklearn.datasets import load_boston\n        boston = load_boston()\n        df = pd.DataFrame(boston.data, columns=boston.feature_names)\n        df['PRICE'] = boston.target\n\n        # Set the random seed for reproducibility\n        np.random.seed(seed)\n\n        # Calculate the correlation matrix\n        corr_matrix = df.corr()\n\n        # Create a figure and axis object\n        fig, ax = plt.subplots(figsize=(10, 8))\n\n        # Draw the correlation heatmap\n        sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', square=True, ax=ax)\n\n        # Return the Axes object\n        return ax\n\n    except Exception as e:\n        # Raise a ValueError if an error occurs\n        raise ValueError(\"An error occurred in generating or saving the plot: {}\".format(str(e)))",
  "model": "llama-3.3-70b"
}