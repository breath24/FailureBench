{
  "task_id": "BigCodeBench/582",
  "instruct_prompt": "Create a list of normally distributed random numbers and plot their histogram and probability density function (PDF).\nThe function should output with:\n    matplotlib.figure.Figure: A figure object containing the histogram and PDF plot.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\ndef task_func(size=1000):\n```",
  "llm_response": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\ndef task_func(size=1000):\n    \"\"\"\n    Generate normally distributed random numbers and plot their histogram with PDF.\n\n    Parameters:\n    size (int): Number of random samples to generate (default: 1000)\n\n    Returns:\n    matplotlib.figure.Figure: A figure object containing the histogram and PDF plot\n    \"\"\"\n    # Generate normally distributed random numbers\n    np.random.seed(42)  # for reproducibility\n    data = np.random.normal(loc=0, scale=1, size=size)\n\n    # Create figure and axis\n    fig, ax = plt.subplots(figsize=(10, 6))\n\n    # Plot histogram\n    n, bins, patches = ax.hist(data, bins=30, density=True, alpha=0.6, color='g',\n                              edgecolor='black', label='Histogram')\n\n    # Plot PDF\n    x = np.linspace(min(data), max(data), 100)\n    pdf = stats.norm.pdf(x, loc=0, scale=1)\n    ax.plot(x, pdf, 'r-', linewidth=2, label='PDF')\n\n    # Add labels and title\n    ax.set_xlabel('Value', fontsize=12)\n    ax.set_ylabel('Density', fontsize=12)\n    ax.set_title(f'Histogram and PDF of {size} Normally Distributed Random Numbers', fontsize=14)\n    ax.legend(fontsize=12)\n\n    # Adjust layout\n    plt.tight_layout()\n\n    return fig",
  "model": "mistral-3.2-24b"
}