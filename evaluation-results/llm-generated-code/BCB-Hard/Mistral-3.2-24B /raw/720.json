{
  "task_id": "BigCodeBench/720",
  "instruct_prompt": "Create and delete a CSV file \"task_func_data/Output.txt\" with sensor data for temperature and humidity. The data is generated randomly, written in append mode, and the file is deleted after use.\nThe function should output with:\n    Returns the path to the CSV file \"task_func_data/Output.txt\" before deletion.\nYou should write self-contained code starting with:\n```\nimport os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n```",
  "llm_response": "import os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n    # Create the directory if it doesn't exist\n    os.makedirs(\"task_func_data\", exist_ok=True)\n\n    # Define the file path\n    file_path = os.path.join(\"task_func_data\", \"Output.txt\")\n\n    # Generate and write random sensor data\n    with open(file_path, 'a', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n\n        # Write header if file is empty\n        if os.path.getsize(file_path) == 0:\n            writer.writerow([\"Timestamp\", \"Temperature (\u00b0C)\", \"Humidity (%)\"])\n\n        # Generate and write 5 random data points\n        for _ in range(5):\n            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n            temperature = round(random.uniform(15.0, 35.0), 2)\n            humidity = round(random.uniform(30.0, 80.0), 2)\n            writer.writerow([timestamp, temperature, humidity])\n\n    # Return the file path before deletion\n    result_path = file_path\n\n    # Delete the file\n    os.remove(file_path)\n\n    return result_path",
  "model": "mistral-3.2-24b"
}