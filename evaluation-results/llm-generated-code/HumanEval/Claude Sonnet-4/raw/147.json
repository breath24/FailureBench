{
  "task_id": "HumanEval/147",
  "task_description": "\ndef get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n",
  "llm_response": "def get_max_triples(n):\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n    \n    mod_counts = [0, 0, 0]\n    for val in a:\n        mod_counts[val % 3] += 1\n    \n    count = 0\n    \n    # Case 1: All three numbers have remainder 0\n    count += mod_counts[0] * (mod_counts[0] - 1) * (mod_counts[0] - 2) // 6\n    \n    # Case 2: One number each with remainder 0, 1, 2\n    count += mod_counts[0] * mod_counts[1] * mod_counts[2]\n    \n    # Case 3: All three numbers have remainder 1\n    count += mod_counts[1] * (mod_counts[1] - 1) * (mod_counts[1] - 2) // 6\n    \n    # Case 4: All three numbers have remainder 2\n    count += mod_counts[2] * (mod_counts[2] - 1) * (mod_counts[2] - 2) // 6\n    \n    return count",
  "model": "claude-sonnet-4"
}