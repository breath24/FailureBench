{
  "task_id": "HumanEval/20",
  "task_description": "from typing import List, Tuple\n\n\ndef find_closest_elements(numbers: List[float]) -> Tuple[float, float]:\n    \"\"\" From a supplied list of numbers (of length at least two) select and return two that are the closest to each\n    other and return them in order (smaller number, larger number).\n    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n    (2.0, 2.2)\n    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n    (2.0, 2.0)\n    \"\"\"\n",
  "llm_response": "from typing import List, Tuple\n\ndef find_closest_elements(numbers: List[float]) -> Tuple[float, float]:\n    if len(numbers) < 2:\n        raise ValueError(\"List must contain at least two numbers\")\n\n    numbers_sorted = sorted(numbers)\n    min_diff = float('inf')\n    closest_pair = (numbers_sorted[0], numbers_sorted[1])\n\n    for i in range(len(numbers_sorted) - 1):\n        current_diff = abs(numbers_sorted[i+1] - numbers_sorted[i])\n        if current_diff < min_diff:\n            min_diff = current_diff\n            closest_pair = (numbers_sorted[i], numbers_sorted[i+1])\n\n    return closest_pair",
  "model": "mistral-3.2-24b"
}