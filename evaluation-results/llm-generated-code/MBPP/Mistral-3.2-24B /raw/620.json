{
  "task_id": "Mbpp/620",
  "task_description": "Write a function to find the largest subset where each pair is divisible.",
  "llm_response": "import math\n\ndef largest_subset(nums):\n    if not nums:\n        return 0\n\n    nums.sort()\n    n = len(nums)\n    dp = [1] * n\n    parent = [-1] * n\n\n    for i in range(1, n):\n        for j in range(i):\n            if nums[i] % nums[j] == 0:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    parent[i] = j\n\n    max_length = max(dp)\n    max_index = dp.index(max_length)\n\n    subset = []\n    while max_index != -1:\n        subset.append(nums[max_index])\n        max_index = parent[max_index]\n\n    return len(subset)",
  "model": "mistral-3.2-24b"
}