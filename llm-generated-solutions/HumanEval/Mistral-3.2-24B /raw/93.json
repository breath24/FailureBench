{
  "task_id": "HumanEval/93",
  "task_description": "\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n",
  "llm_response": "import re\n\ndef encode(message):\n    vowel_map = {'a': 'c', 'e': 'g', 'i': 'k', 'o': 'q', 'u': 'w',\n                 'A': 'C', 'E': 'G', 'I': 'K', 'O': 'Q', 'U': 'W'}\n    encoded_message = []\n    for char in message:\n        if char in vowel_map:\n            encoded_message.append(vowel_map[char])\n        else:\n            encoded_message.append(char.swapcase())\n    return ''.join(encoded_message)",
  "model": "mistral-3.2-24b"
}