{
  "task_id": "BigCodeBench/720",
  "instruct_prompt": "Create and delete a CSV file \"task_func_data/Output.txt\" with sensor data for temperature and humidity. The data is generated randomly, written in append mode, and the file is deleted after use.\nThe function should output with:\n    Returns the path to the CSV file \"task_func_data/Output.txt\" before deletion.\nYou should write self-contained code starting with:\n```\nimport os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n```",
  "llm_response": "import os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n    \"\"\"\n    Creates a CSV file with sensor data for temperature and humidity, \n    generates random data, writes it in append mode, and then deletes the file.\n\n    Returns:\n        str: The path to the CSV file before deletion.\n    \"\"\"\n    # Define the path to the CSV file\n    csv_file_path = \"task_func_data/Output.txt\"\n\n    # Create the directory if it doesn't exist\n    csv_dir_path = os.path.dirname(csv_file_path)\n    if not os.path.exists(csv_dir_path):\n        os.makedirs(csv_dir_path)\n\n    # Generate random sensor data\n    temperature = round(random.uniform(20, 30), 2)\n    humidity = round(random.uniform(40, 60), 2)\n\n    # Write the data to the CSV file in append mode\n    with open(csv_file_path, 'a', newline='') as csvfile:\n        fieldnames = ['timestamp', 'temperature', 'humidity']\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n\n        # Write the header if the file is new\n        if csvfile.tell() == 0:\n            writer.writeheader()\n\n        # Write the data\n        writer.writerow({\n            'timestamp': datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\"),\n            'temperature': temperature,\n            'humidity': humidity\n        })\n\n    # Store the path to the CSV file before deletion\n    file_path_before_deletion = csv_file_path\n\n    # Delete the CSV file\n    os.remove(csv_file_path)\n\n    # Return the path to the CSV file before deletion\n    return file_path_before_deletion",
  "model": "llama-3.3-70b"
}