{
  "task_id": "BigCodeBench/399",
  "instruct_prompt": "Create a diagram of a sine wave and cosine wave with a given frequency and return the plot.\nThe function should raise the exception for: ValueError: If the frequency is negative. ValueError: If the sample size is non-positive.\nThe function should output with:\n    matplotlib.figure.Figure: The figure object containing the plot.\n    matplotlib.axes.Axes: The axes object of the plot.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport math\ndef task_func(frequency, sample_size=10000):\n```",
  "llm_response": "import numpy as np\nimport matplotlib.pyplot as plt\nimport math\ndef task_func(frequency, sample_size=10000):\n    \"\"\"\n    Create a plot of sine and cosine waves with given frequency and sample size.\n\n    Args:\n        frequency (float): Frequency of the waves (must be positive)\n        sample_size (int): Number of samples (must be positive)\n\n    Returns:\n        tuple: (matplotlib.figure.Figure, matplotlib.axes.Axes)\n\n    Raises:\n        ValueError: If frequency is negative\n        ValueError: If sample size is non-positive\n    \"\"\"\n    # Validate inputs\n    if frequency < 0:\n        raise ValueError(\"Frequency must be positive\")\n    if sample_size <= 0:\n        raise ValueError(\"Sample size must be positive\")\n\n    # Create time values\n    t = np.linspace(0, 2 * np.pi, sample_size)\n\n    # Calculate sine and cosine values\n    sine_wave = np.sin(frequency * t)\n    cosine_wave = np.cos(frequency * t)\n\n    # Create the figure and axes\n    fig, ax = plt.subplots(figsize=(10, 6))\n\n    # Plot the waves\n    ax.plot(t, sine_wave, label=f'Sine wave (f={frequency})', color='blue')\n    ax.plot(t, cosine_wave, label=f'Cosine wave (f={frequency})', color='red')\n\n    # Add labels and title\n    ax.set_xlabel('Time (radians)')\n    ax.set_ylabel('Amplitude')\n    ax.set_title(f'Sine and Cosine Waves (Frequency = {frequency})')\n    ax.legend()\n    ax.grid(True)\n\n    return fig, ax",
  "model": "mistral-3.2-24b"
}