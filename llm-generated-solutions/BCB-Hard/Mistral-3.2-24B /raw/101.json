{
  "task_id": "BigCodeBench/101",
  "instruct_prompt": "Draw the correlation heatmap of the Boston Housing dataset using Seaborn, with an option to save it to a specified file.\nThe function should raise the exception for: ValueError: If an error occurs in generating or saving the plot.\nThe function should output with:\n    matplotlib.axes.Axes: The Axes object containing the heatmap plot.\nYou should write self-contained code starting with:\n```\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\ndef task_func(data_url=\"http://lib.stat.cmu.edu/datasets/boston\", seed=42):\n```",
  "llm_response": "import matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\ndef task_func(data_url=\"http://lib.stat.cmu.edu/datasets/boston\", seed=42):\n    \"\"\"\n    Draw the correlation heatmap of the Boston Housing dataset using Seaborn,\n    with an option to save it to a specified file.\n\n    Parameters:\n    data_url (str): URL to fetch the Boston Housing dataset\n    seed (int): Random seed for reproducibility\n\n    Returns:\n    matplotlib.axes.Axes: The Axes object containing the heatmap plot\n\n    Raises:\n    ValueError: If an error occurs in generating or saving the plot\n    \"\"\"\n    try:\n        # Load the dataset\n        df = pd.read_csv(data_url, sep=\"\\s+\", skiprows=22, header=None)\n        df.columns = [\n            'CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE',\n            'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV'\n        ]\n\n        # Calculate correlations\n        corr = df.corr()\n\n        # Create the heatmap\n        plt.figure(figsize=(10, 8))\n        ax = sns.heatmap(corr, annot=True, cmap='coolwarm', center=0, square=True)\n        plt.title('Boston Housing Dataset Correlation Heatmap')\n\n        return ax\n\n    except Exception as e:\n        raise ValueError(f\"Error occurred in generating or saving the plot: {str(e)}\")",
  "model": "mistral-3.2-24b"
}