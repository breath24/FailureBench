{
  "task_id": "BigCodeBench/574",
  "instruct_prompt": "Create a noisy sine wave of a specified length and adjusts a curve using curve_fit from scipy.optimize to the data.\nThe function should output with:\n    Axes object: A plot showing the noisy sine wave and its adjusted curve.\nYou should write self-contained code starting with:\n```\nfrom scipy.optimize import curve_fit\nimport matplotlib.pyplot as plt\nimport numpy as np\ndef task_func(array_length=100, noise_level=0.2):\n```",
  "llm_response": "from scipy.optimize import curve_fit\nimport matplotlib.pyplot as plt\nimport numpy as np\ndef task_func(array_length=100, noise_level=0.2):\n    \"\"\"\n    Creates a noisy sine wave of a specified length and fits a sine curve to the data using curve_fit.\n    \n    Parameters:\n    - array_length (int): The length of the array to generate the sine wave. Default is 100.\n    - noise_level (float): The amplitude of noise added to the sine wave. Default is 0.2.\n    \n    Returns:\n    - matplotlib.axes.Axes: An Axes object displaying the noisy sine wave and the fitted curve.\n    \n    Requirements:\n    - numpy\n    - matplotlib.pyplot\n    - scipy.optimize.curve_fit\n    \n    Example:\n    >>> ax = task_func(100, 0.2)\n    >>> ax.get_title()\n    'Noisy Sine Wave and Fitted Curve'\n    \"\"\"\n    # Generate the x values\n    x = np.linspace(0, 4 * np.pi, array_length)\n    # Generate the true sine wave values\n    y_true = np.sin(x)\n    # Add noise to the sine wave\n    y_noise = y_true + noise_level * np.random.normal(size=array_length)\n    \n    # Define the sine function to fit\n    def sine_func(x, a, b, c, d):\n        return a * np.sin(b * x + c) + d\n    \n    # Perform the curve fitting\n    params, _ = curve_fit(sine_func, x, y_noise, p0=[1.0, 1.0, 0.0, 0.0])\n    # Generate the fitted curve\n    y_fit = sine_func(x, *params)\n    \n    # Plot the results\n    fig, ax = plt.subplots()\n    ax.plot(x, y_noise, 'b.', label='Noisy data')\n    ax.plot(x, y_fit, 'r-', label='Fitted curve')\n    ax.set_title('Noisy Sine Wave and Fitted Curve')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.legend()\n    \n    return ax",
  "model": "deepseek-chat-v3-0324"
}