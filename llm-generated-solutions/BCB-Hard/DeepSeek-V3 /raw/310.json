{
  "task_id": "BigCodeBench/310",
  "instruct_prompt": "Generates a CSV file containing simulated data for 100 people, including name, age, height, and weight. It also calculates and appends the average age, height, and weight at the end of the file.\nThe function should output with:\n    str: The path of the created CSV file.\nYou should write self-contained code starting with:\n```\nimport os\nimport csv\nimport random\nfrom statistics import mean\n# Constants\nCOLUMNS = ['Name', 'Age', 'Height', 'Weight']\nPEOPLE_COUNT = 100\ndef task_func(filename):\n```",
  "llm_response": "import os\nimport csv\nimport random\nfrom statistics import mean\nCOLUMNS = ['Name', 'Age', 'Height', 'Weight']\nPEOPLE_COUNT = 100\ndef task_func(filename):\n    \"\"\"\n    Generates a CSV file with simulated data for 100 people, including name, age, height, and weight.\n    The average values for age, height, and weight are appended at the end of the file.\n    \n    Parameters:\n    filename (str): The name of the CSV file to be created.\n    \n    Returns:\n    str: The path of the created CSV file.\n    \"\"\"\n    # Generate random data for each person\n    data = []\n    for i in range(PEOPLE_COUNT):\n        name = f'Person_{i+1}'\n        age = random.randint(18, 80)\n        height = round(random.uniform(150.0, 200.0), 1)  # in cm\n        weight = round(random.uniform(50.0, 100.0), 1)   # in kg\n        data.append([name, age, height, weight])\n    # Calculate averages\n    ages = [person[1] for person in data]\n    heights = [person[2] for person in data]\n    weights = [person[3] for person in data]\n    avg_age = round(mean(ages), 1)\n    avg_height = round(mean(heights), 1)\n    avg_weight = round(mean(weights), 1)\n    # Append averages as a new row\n    data.append(['Average', avg_age, avg_height, avg_weight])\n    # Write to CSV file\n    with open(filename, mode='w', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow(COLUMNS)\n        writer.writerows(data)\n    return os.path.abspath(filename)",
  "model": "deepseek-chat-v3-0324"
}