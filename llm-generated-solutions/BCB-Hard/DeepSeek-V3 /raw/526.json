{
  "task_id": "BigCodeBench/526",
  "instruct_prompt": "Read a list of dictionaries from a JSON file, calculate the mean and median for each key (ignoring non-numeric or missing values), and convert the results into a Pandas DataFrame.\nThe function should output with:\n    df (pd.DataFrame): A DataFrame indexed and sorted by the variable names (keys) from the\n    input data, containing columns 'mean' and 'median'.\nYou should write self-contained code starting with:\n```\nimport json\nimport pandas as pd\nimport numpy as np\nfrom collections import defaultdict\ndef task_func(input_file=\"data.json\"):\n```",
  "llm_response": "import json\nimport pandas as pd\nimport numpy as np\nfrom collections import defaultdict\ndef task_func(input_file=\"data.json\"):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key \n    (ignoring non-numeric or missing values), and convert the results into a Pandas DataFrame.\n    \n    Parameters:\n    - input_file (str): Path to the JSON file. Default is \"data.json\".\n    \n    Returns:\n    - pd.DataFrame: A DataFrame indexed and sorted by the variable names (keys) from the\n      input data, containing columns 'mean' and 'median'.\n    \n    Example:\n    >>> df = task_func(\"data.json\")\n    >>> print(df)\n                mean  median\n    height    170.0   170.0\n    weight     65.0    65.0\n    \"\"\"\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    \n    # Initialize defaultdict to store numeric values for each key\n    key_values = defaultdict(list)\n    \n    for item in data:\n        for key, value in item.items():\n            if isinstance(value, (int, float)):\n                key_values[key].append(value)\n    \n    # Calculate mean and median for each key\n    results = {}\n    for key in key_values:\n        values = key_values[key]\n        if values:  # Ensure there are numeric values\n            mean = np.mean(values)\n            median = np.median(values)\n            results[key] = {'mean': mean, 'median': median}\n    \n    # Convert to DataFrame, sort and index by keys\n    df = pd.DataFrame.from_dict(results, orient='index')\n    df = df.sort_index()\n    \n    return df",
  "model": "deepseek-chat-v3-0324"
}