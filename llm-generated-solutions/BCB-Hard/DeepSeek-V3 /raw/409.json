{
  "task_id": "BigCodeBench/409",
  "instruct_prompt": "Calculate the mean, median, and standard deviation of the data from a specific column in an Excel file.\nThe function should raise the exception for: FileNotFoundError: If the Excel file does not exist at the specified path. ValueError: If the specified column is not found in the Excel file.\nThe function should output with:\n    dict: A dictionary with the mean, median, and standard deviation.\nYou should write self-contained code starting with:\n```\nimport os\nimport pandas as pd\nimport numpy as np\ndef task_func(excel_file_path, file_name, column_name):\n```",
  "llm_response": "import os\nimport pandas as pd\nimport numpy as np\ndef task_func(excel_file_path, file_name, column_name):\n    \"\"\"\n    Calculate the mean, median, and standard deviation of the data from a specific column in an Excel file.\n\n    Parameters:\n    - excel_file_path (str): The path to the directory containing the Excel file.\n    - file_name (str): The name of the Excel file.\n    - column_name (str): The name of the column to analyze.\n\n    Returns:\n    - dict: A dictionary with keys 'mean', 'median', and 'std' representing the calculated statistics.\n\n    Raises:\n    - FileNotFoundError: If the Excel file does not exist at the specified path.\n    - ValueError: If the specified column is not found in the Excel file.\n    \"\"\"\n    full_path = os.path.join(excel_file_path, file_name)\n    if not os.path.exists(full_path):\n        raise FileNotFoundError(f\"The file {full_path} does not exist.\")\n    try:\n        df = pd.read_excel(full_path)\n    except Exception as e:\n        raise ValueError(f\"Error reading the Excel file: {e}\")\n    if column_name not in df.columns:\n        raise ValueError(f\"Column '{column_name}' not found in the Excel file.\")\n    data = df[column_name].dropna()\n    if data.empty:\n        return {'mean': np.nan, 'median': np.nan, 'std': np.nan}\n    mean = np.mean(data)\n    median = np.median(data)\n    std = np.std(data, ddof=1)  # Using sample standard deviation\n    return {'mean': mean, 'median': median, 'std': std}",
  "model": "deepseek-chat-v3-0324"
}