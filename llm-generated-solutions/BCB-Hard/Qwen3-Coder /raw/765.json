{
  "task_id": "BigCodeBench/765",
  "instruct_prompt": "Process files from a dictionary by checking if the file exists, and if it has content, then copies it to a target directory.\nThe function should output with:\n    copied_files (list): A list of full file paths that were copied.\nYou should write self-contained code starting with:\n```\nimport os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n```",
  "llm_response": "import os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n    \"\"\"\n    Process files from a dictionary by checking if the file exists, \n    and if it has content, then copies it to a target directory.\n    \n    Args:\n        kwargs (dict): A dictionary where keys are identifiers and values are file paths\n        target_dir (str): Target directory to copy files to\n        \n    Returns:\n        copied_files (list): A list of full file paths that were copied\n    \"\"\"\n    # Create target directory if it doesn't exist\n    Path(target_dir).mkdir(parents=True, exist_ok=True)\n    \n    copied_files = []\n    \n    # Process each file in the dictionary\n    for key, file_path in kwargs.items():\n        file_path = Path(file_path)\n        \n        # Check if file exists\n        if file_path.exists() and file_path.is_file():\n            # Check if file has content (size > 0)\n            if file_path.stat().st_size > 0:\n                # Define target file path\n                target_file_path = Path(target_dir) / file_path.name\n                \n                # Copy file to target directory\n                shutil.copy2(file_path, target_file_path)\n                \n                # Add the original file path to the copied files list\n                copied_files.append(str(file_path.resolve()))\n    \n    return copied_files",
  "model": "qwen3-coder"
}