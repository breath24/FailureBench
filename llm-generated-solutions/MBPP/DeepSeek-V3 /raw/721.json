{
  "task_id": "Mbpp/721",
  "task_description": "Write a function to find a path with the maximum average over all existing paths for the given square matrix of size n*n.",
  "llm_response": "def maxAverageOfPath(matrix):\n    n = len(matrix)\n    dp = [[0.0 for _ in range(n)] for _ in range(n)]\n    dp[0][0] = matrix[0][0]\n    \n    for i in range(1, n):\n        dp[i][0] = dp[i-1][0] + matrix[i][0]\n    \n    for j in range(1, n):\n        dp[0][j] = dp[0][j-1] + matrix[0][j]\n    \n    for i in range(1, n):\n        for j in range(1, n):\n            dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + matrix[i][j]\n    \n    max_total = dp[n-1][n-1]\n    path_length = 2 * n - 1\n    return max_total / path_length",
  "model": "deepseek-chat-v3-0324"
}