{
  "task_id": "Mbpp/468",
  "task_description": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.",
  "llm_response": "def max_product(arr):\n    if not arr:\n        return 0\n    \n    n = len(arr)\n    max_product = [0] * n\n    min_product = [0] * n\n    \n    for i in range(n):\n        max_product[i] = arr[i]\n        min_product[i] = arr[i]\n    \n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j]:\n                max_product[i] = max(max_product[i], max_product[j] * arr[i])\n                min_product[i] = min(min_product[i], min_product[j] * arr[i])\n    \n    return max(max_product)",
  "model": "qwen3-coder"
}