{
  "task_id": "3753",
  "task_description": "You are given a string s consisting of lowercase English letters. Your task is to find the maximum difference between the frequency of two characters in the string such that:\n\nOne of the characters has an even frequency in the string.\nThe other character has an odd frequency in the string.\n\nReturn the maximum difference, calculated as the frequency of the character with an odd frequency minus the frequency of the character with an even frequency.\n \nExample 1:\n\nInput: s = \"aaaaabbc\"\nOutput: 3\nExplanation:\n\nThe character 'a' has an odd frequency of 5, and 'b' has an even frequency of 2.\nThe maximum difference is 5 - 2 = 3.\n\n\nExample 2:\n\nInput: s = \"abcabcab\"\nOutput: 1\nExplanation:\n\nThe character 'a' has an odd frequency of 3, and 'c' has an even frequency of 2.\nThe maximum difference is 3 - 2 = 1.\n\n\n \nConstraints:\n\n3 <= s.length <= 100\ns consists only of lowercase English letters.\ns contains at least one character with an odd frequency and one with an even frequency.",
  "llm_response": "def maxDifference(s):\n    from collections import Counter\n    \n    freq = Counter(s)\n    \n    odd_freqs = [count for count in freq.values() if count % 2 == 1]\n    even_freqs = [count for count in freq.values() if count % 2 == 0]\n    \n    max_odd = max(odd_freqs)\n    min_even = min(even_freqs)\n    \n    return max_odd - min_even",
  "model": "qwen3-coder"
}