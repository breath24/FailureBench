{
  "task_id": "abc390_a",
  "task_description": "You are given an integer sequence A=(A_1,A_2,A_3,A_4,A_5) obtained by permuting (1,2,3,4,5).\nDetermine whether A can be sorted in ascending order by performing exactly one operation of swapping two adjacent elements in A.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA_1 A_2 A_3 A_4 A_5\n\nOutput\n\nIf A can be sorted in ascending order by exactly one operation, print Yes; otherwise, print No.\n\nConstraints\n\n\n- A is an integer sequence of length 5 obtained by permuting (1,2,3,4,5).\n\nSample Input 1\n\n1 2 4 3 5\n\nSample Output 1\n\nYes\r\n\nBy swapping A_3 and A_4, A becomes (1,2,3,4,5), so it can be sorted in ascending order. Therefore, print Yes.\n\nSample Input 2\n\n5 3 2 4 1\n\nSample Output 2\n\nNo\r\n\nNo matter what operation is performed, it is impossible to sort A in ascending order.\n\nSample Input 3\n\n1 2 3 4 5\n\nSample Output 3\n\nNo\r\n\nYou must perform exactly one operation.\n\nSample Input 4\n\n2 1 3 4 5\n\nSample Output 4\n\nYes",
  "llm_response": "def candidate_func(input_str):\n    A = list(map(int, input_str.strip().split()))\n    target = [1, 2, 3, 4, 5]\n    \n    if A == target:\n        return \"No\"\n    \n    for i in range(4):\n        A_copy = A[:]\n        A_copy[i], A_copy[i+1] = A_copy[i+1], A_copy[i]\n        if A_copy == target:\n            return \"Yes\"\n    \n    return \"No\"",
  "model": "claude-sonnet-4"
}