{
  "task_id": "abc389_e",
  "task_description": "There are N types of products, each having 10^{100} units in stock.\nYou can buy any non-negative number of units of each product. To buy k units of the i-th product, it costs k^2 P_i yen.\nIf your total purchase cost is at most M yen, what is the maximum number of units you can buy in total?\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nP_1 \\ldots P_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^{5}\n- 1 \\leq M \\leq 10^{18}\n- 1 \\leq P_i \\leq 2 \\times 10^{9}\n- All input values are integers.\n\nSample Input 1\n\n3 9\r\n4 1 9\n\nSample Output 1\n\n3\r\n\nIf you buy one unit of the 1st product and two units of the 2nd product, the total purchase cost is 1^2 \\times 4 + 2^2 \\times 1 = 8. It is impossible to buy four or more units in total with a total cost of at most 9 yen, so the answer is 3.\n\nSample Input 2\n\n10 1000\r\n2 15 6 5 12 1 7 9 17 2\n\nSample Output 2\n\n53",
  "llm_response": "import math\n\ndef candidate_func(s):\n    lines = s.split('\\n')\n    N, M = map(int, lines[0].split())\n    P = list(map(int, lines[1].split()))\n    left, right = 0, M\n    answer = 0\n    while left <= right:\n        mid = (left + right) // 2\n        total = 0\n        for p in P:\n            k = int(math.isqrt(mid // p))\n            total += k\n            if total > mid:\n                break\n        if total <= mid:\n            answer = max(answer, total)\n            left = mid + 1\n        else:\n            right = mid - 1\n    return str(answer)",
  "model": "mistral-3.2-24b"
}