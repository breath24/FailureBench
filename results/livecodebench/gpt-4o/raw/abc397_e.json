{
  "task_id": "abc397_e",
  "llm_response": "from collections import defaultdict, deque\n\ndef candidate_func(input_str):\n    data = input_str.splitlines()\n    N, K = map(int, data[0].split())\n    edges = [tuple(map(int, line.split())) for line in data[1:]]\n    \n    if N * K != len(edges) + 1:\n        return \"No\"\n    \n    graph = defaultdict(list)\n    for u, v in edges:\n        graph[u].append(v)\n        graph[v].append(u)\n    \n    degree_count = defaultdict(int)\n    for node in graph:\n        degree_count[len(graph[node])] += 1\n    \n    if degree_count[1] != 2 * N:\n        return \"No\"\n    \n    if K == 1:\n        return \"Yes\" if degree_count[1] == 2 * N and len(degree_count) == 1 else \"No\"\n    \n    if degree_count[K] != N:\n        return \"No\"\n    \n    for d in range(2, K):\n        if degree_count[d] > 0:\n            return \"No\"\n    \n    return \"Yes\"",
  "model": "gpt-4o",
  "task_description": "You are given a tree with NK vertices. The vertices are numbered 1,2,\\dots,NK, and the i-th edge (i=1,2,\\dots,NK-1) connects vertices u_i and v_i bidirectionally.\nDetermine whether this tree can be decomposed into N paths, each of length K. More precisely, determine whether there exists an N \\times K matrix P satisfying the following:\n\n- P_{1,1}, \\dots, P_{1,K}, P_{2,1}, \\dots, P_{N,K} is a permutation of 1,2,\\dots,NK.\n- For each i=1,2,\\dots,N and j=1,2,\\dots,K-1, there is an edge connecting vertices P_{i,j} and P_{i,j+1}.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\r\nu_1 v_1\r\nu_2 v_2\r\n\\vdots\r\nu_{NK-1} v_{NK-1}\n\nOutput\n\nIf it is possible to decompose the tree into N paths each of length K, print Yes. Otherwise, print No.\n\nConstraints\n\n\n- 1 \\leq N\n- 1 \\leq K\n- NK \\leq 2 \\times 10^5\n- 1 \\leq u_i < v_i \\leq NK\n- The given graph is a tree.\n- All input values are integers.\n\nSample Input 1\n\n3 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n5 6\n\nSample Output 1\n\nYes\r\n\nIt can be decomposed into a path with vertices 1,2, a path with vertices 3,4, and a path with vertices 5,6.\n\nSample Input 2\n\n3 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n3 6\n\nSample Output 2\n\nNo"
}