{
  "task_id": "abc392_g",
  "llm_response": "def candidate_func(input_str):\n    from bisect import bisect_left, bisect_right\n    \n    data = input_str.split()\n    N = int(data[0])\n    S = sorted(int(x) for x in data[1:])\n    \n    count = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            A = S[i]\n            B = S[j]\n            C = 2 * B - A\n            if C > B and bisect_left(S, C, j + 1) < N and S[bisect_left(S, C, j + 1)] == C:\n                count += 1\n    \n    return str(count)",
  "model": "gpt-4o",
  "task_description": "For integers A, B, C ( A < B < C ), if they satisfy B-A = C-B, then (A, B, C) is called a fine triplet.\nYou are given a set of N distinct positive integers S = \\{ S_1, S_2, \\dots, S_N \\}. Find the number of fine triplets (A, B, C) with A, B, C \\in S.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nS_1 S_2 \\dots S_N\n\nOutput\n\nPrint the number of fine triplets as an integer.\n\nConstraints\n\n\n- All input values are integers.\n- 1 \\le N \\le 10^6\n- 1 \\le S_i \\le 10^6\n- The elements of S are distinct.\n\nSample Input 1\n\n5\n8 3 1 5 2\n\nSample Output 1\n\n3\n\nHere, S = \\{8,3,1,5,2\\}.\nThe fine triplets to be counted are the following three:\n\n- (1,2,3)\n- (1,3,5)\n- (2,5,8)\n\nSample Input 2\n\n7\n300000 100000 499998 499999 200000 400000 500000\n\nSample Output 2\n\n5\n\nSample Input 3\n\n10\n13 1 16 15 12 4 7 10 2 19\n\nSample Output 3\n\n10"
}