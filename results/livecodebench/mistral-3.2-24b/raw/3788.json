{
  "task_id": "3788",
  "llm_response": "def maxSum(nums):\n    max_sum = 0\n    current_sum = 0\n    seen = set()\n    for num in nums:\n        if num in seen:\n            current_sum = 0\n            seen = set()\n        else:\n            seen.add(num)\n            current_sum += num\n            if current_sum > max_sum:\n                max_sum = current_sum\n    return max_sum",
  "model": "mistral-3.2-24b",
  "task_description": "You are given an integer array nums.\nYou are allowed to delete any number of elements from nums without making it empty. After performing the deletions, select a subarray of nums such that:\n\nAll elements in the subarray are unique.\nThe sum of the elements in the subarray is maximized.\n\nReturn the maximum sum of such a subarray.\n \nExample 1:\n\nInput: nums = [1,2,3,4,5]\nOutput: 15\nExplanation:\nSelect the entire array without deleting any element to obtain the maximum sum.\n\nExample 2:\n\nInput: nums = [1,1,0,1,1]\nOutput: 1\nExplanation:\nDelete the element nums[0] == 1, nums[1] == 1, nums[2] == 0, and nums[3] == 1. Select the entire array [1] to obtain the maximum sum.\n\nExample 3:\n\nInput: nums = [1,2,-1,-2,1,0,-1]\nOutput: 3\nExplanation:\nDelete the elements nums[2] == -1 and nums[3] == -2, and select the subarray [2, 1] from [1, 2, 1, 0, -1] to obtain the maximum sum.\n\n \nConstraints:\n\n1 <= nums.length <= 100\n-100 <= nums[i] <= 100"
}