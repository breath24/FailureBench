{
  "task_id": "abc397_e",
  "llm_response": "import sys\nfrom collections import deque\n\ndef candidate_func(s):\n    lines = s.split('\\n')\n    N, K = map(int, lines[0].split())\n    edges = [tuple(map(int, line.split())) for line in lines[1:]]\n    if N * K != 1:\n        return \"No\"\n    adj = [[] for _ in range(N * K + 1)]\n    for u, v in edges:\n        adj[u].append(v)\n        adj[v].append(u)\n    if len(adj[1]) != 1:\n        return \"No\"\n    queue = deque([1])\n    visited = [False] * (N * K + 1)\n    visited[1] = True\n    while queue:\n        u = queue.popleft()\n        for v in adj[u]:\n            if not visited[v]:\n                visited[v] = True\n                queue.append(v)\n    if any(not v for v in visited[1:]):\n        return \"No\"\n    return \"Yes\"",
  "model": "mistral-3.2-24b",
  "task_description": "You are given a tree with NK vertices. The vertices are numbered 1,2,\\dots,NK, and the i-th edge (i=1,2,\\dots,NK-1) connects vertices u_i and v_i bidirectionally.\nDetermine whether this tree can be decomposed into N paths, each of length K. More precisely, determine whether there exists an N \\times K matrix P satisfying the following:\n\n- P_{1,1}, \\dots, P_{1,K}, P_{2,1}, \\dots, P_{N,K} is a permutation of 1,2,\\dots,NK.\n- For each i=1,2,\\dots,N and j=1,2,\\dots,K-1, there is an edge connecting vertices P_{i,j} and P_{i,j+1}.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\r\nu_1 v_1\r\nu_2 v_2\r\n\\vdots\r\nu_{NK-1} v_{NK-1}\n\nOutput\n\nIf it is possible to decompose the tree into N paths each of length K, print Yes. Otherwise, print No.\n\nConstraints\n\n\n- 1 \\leq N\n- 1 \\leq K\n- NK \\leq 2 \\times 10^5\n- 1 \\leq u_i < v_i \\leq NK\n- The given graph is a tree.\n- All input values are integers.\n\nSample Input 1\n\n3 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n5 6\n\nSample Output 1\n\nYes\r\n\nIt can be decomposed into a path with vertices 1,2, a path with vertices 3,4, and a path with vertices 5,6.\n\nSample Input 2\n\n3 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n3 6\n\nSample Output 2\n\nNo"
}