{
  "task_id": "3751",
  "llm_response": "def maxFrequency(nums, k):\n    n = len(nums)\n    max_freq = nums.count(k)\n    \n    for i in range(n):\n        for j in range(i, n):\n            freq_map = {}\n            for idx in range(n):\n                if i <= idx <= j:\n                    val = k\n                else:\n                    val = nums[idx]\n                freq_map[val] = freq_map.get(val, 0) + 1\n            max_freq = max(max_freq, freq_map.get(k, 0))\n    \n    return max_freq",
  "model": "claude-sonnet-4",
  "task_description": "You are given an array nums of length n. You are also given an integer k.\nYou perform the following operation on nums once:\n\nSelect a subarray nums[i..j] where 0 <= i <= j <= n - 1.\nSelect an integer x and add x to all the elements in nums[i..j].\n\nFind the maximum frequency of the value k after the operation.\n \nExample 1:\n\nInput: nums = [1,2,3,4,5,6], k = 1\nOutput: 2\nExplanation:\nAfter adding -5 to nums[2..5], 1 has a frequency of 2 in [1, 2, -2, -1, 0, 1].\n\nExample 2:\n\nInput: nums = [10,2,3,4,5,5,4,3,2,2], k = 10\nOutput: 4\nExplanation:\nAfter adding 8 to nums[1..9], 10 has a frequency of 4 in [10, 10, 11, 12, 13, 13, 12, 11, 10, 10].\n\n \nConstraints:\n\n1 <= n == nums.length <= 10^5\n1 <= nums[i] <= 50\n1 <= k <= 50"
}