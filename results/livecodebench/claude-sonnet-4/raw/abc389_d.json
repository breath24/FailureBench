{
  "task_id": "abc389_d",
  "llm_response": "import math\n\ndef candidate_func(input_str):\n    R = int(input_str.strip())\n    \n    count = 0\n    max_coord = R + 1\n    \n    for i in range(-max_coord, max_coord + 1):\n        for j in range(-max_coord, max_coord + 1):\n            corners = [\n                (i + 0.5, j + 0.5),\n                (i + 0.5, j - 0.5),\n                (i - 0.5, j + 0.5),\n                (i - 0.5, j - 0.5)\n            ]\n            \n            all_inside = True\n            for x, y in corners:\n                if x*x + y*y > R*R:\n                    all_inside = False\n                    break\n            \n            if all_inside:\n                count += 1\n    \n    return str(count)",
  "model": "claude-sonnet-4",
  "task_description": "On the two-dimensional coordinate plane, there is an infinite tiling of 1 \\times 1 squares.\nConsider drawing a circle of radius R centered at the center of one of these squares. How many of these squares are completely contained inside the circle?\nMore precisely, find the number of integer pairs (i,j) such that all four points (i+0.5,j+0.5), (i+0.5,j-0.5), (i-0.5,j+0.5), and (i-0.5,j-0.5) are at a distance of at most R from the origin.\n\nInput\n\nThe input is given from Standard Input in the following format:\nR\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq R \\leq 10^{6}\n- All input values are integers.\n\nSample Input 1\n\n2\n\nSample Output 1\n\n5\r\n\nThere are a total of five squares completely contained in the circle: the square whose center matches the circle\u2019s center, plus the four squares adjacent to it.\n\nSample Input 2\n\n4\n\nSample Output 2\n\n37\n\nSample Input 3\n\n26\n\nSample Output 3\n\n2025"
}