{
  "task_id": "3725",
  "llm_response": "from collections import deque\n\ndef minMaxSubarraySum(nums, k):\n    n = len(nums)\n    total = 0\n    \n    # For each subarray length from 1 to k\n    for length in range(1, min(k + 1, n + 1)):\n        # Use deques to maintain min and max in sliding window\n        min_deque = deque()  # indices of elements in increasing order of values\n        max_deque = deque()  # indices of elements in decreasing order of values\n        \n        for i in range(n):\n            # Remove indices that are out of current window\n            while min_deque and min_deque[0] <= i - length:\n                min_deque.popleft()\n            while max_deque and max_deque[0] <= i - length:\n                max_deque.popleft()\n            \n            # Remove indices whose corresponding values are not useful\n            while min_deque and nums[min_deque[-1]] >= nums[i]:\n                min_deque.pop()\n            while max_deque and nums[max_deque[-1]] <= nums[i]:\n                max_deque.pop()\n            \n            # Add current element index\n            min_deque.append(i)\n            max_deque.append(i)\n            \n            # If we have a complete window of size 'length'\n            if i >= length - 1:\n                min_val = nums[min_deque[0]]\n                max_val = nums[max_deque[0]]\n                total += min_val + max_val\n    \n    return total",
  "model": "qwen3-coder",
  "task_description": "You are given an integer array nums and a positive integer k. Return the sum of the maximum and minimum elements of all subarrays with at most k elements.\n \nExample 1:\n\nInput: nums = [1,2,3], k = 2\nOutput: 20\nExplanation:\nThe subarrays of nums with at most 2 elements are:\n\n\n\nSubarray\nMinimum\nMaximum\nSum\n\n\n[1]\n1\n1\n2\n\n\n[2]\n2\n2\n4\n\n\n[3]\n3\n3\n6\n\n\n[1, 2]\n1\n2\n3\n\n\n[2, 3]\n2\n3\n5\n\n\nFinal Total\n \n \n20\n\n\n\nThe output would be 20.\n\nExample 2:\n\nInput: nums = [1,-3,1], k = 2\nOutput: -6\nExplanation:\nThe subarrays of nums with at most 2 elements are:\n\n\n\nSubarray\nMinimum\nMaximum\nSum\n\n\n[1]\n1\n1\n2\n\n\n[-3]\n-3\n-3\n-6\n\n\n[1]\n1\n1\n2\n\n\n[1, -3]\n-3\n1\n-2\n\n\n[-3, 1]\n-3\n1\n-2\n\n\nFinal Total\n \n \n-6\n\n\n\nThe output would be -6.\n\n \nConstraints:\n\n1 <= nums.length <= 80000\n1 <= k <= nums.length\n-10^6 <= nums[i] <= 10^6"
}