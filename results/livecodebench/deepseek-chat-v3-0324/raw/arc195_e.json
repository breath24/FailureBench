{
  "task_id": "arc195_e",
  "llm_response": "import sys\nMOD = 998244353\n\ndef candidate_func(input_str):\n    data = input_str.split()\n    ptr = 0\n    N, Q = map(int, data[ptr:ptr+2])\n    ptr +=2\n    A = list(map(int, data[ptr:ptr+N-1]))\n    ptr += N-1\n    queries = []\n    for _ in range(Q):\n        u, v = map(int, data[ptr:ptr+2])\n        queries.append((u, v))\n        ptr +=2\n    \n    fact = [1]*(N+1)\n    for i in range(1, N+1):\n        fact[i] = fact[i-1] * i % MOD\n    \n    inv = [1]*(N+1)\n    inv[N] = pow(fact[N], MOD-2, MOD)\n    for i in range(N-1, -1, -1):\n        inv[i] = inv[i+1] * (i+1) % MOD\n    \n    prefix = [0]*(N+2)\n    for i in range(2, N+1):\n        prefix[i] = (prefix[i-1] + A[i-2] * inv[i] % MOD * fact[i-1] % MOD) % MOD\n    \n    res = []\n    for u, v in queries:\n        if u > v:\n            u, v = v, u\n        term = (prefix[v] - prefix[u]) * fact[v] % MOD\n        res.append(term)\n    return '\\n'.join(map(str, res))",
  "model": "deepseek-chat-v3-0324",
  "task_description": "There is an integer sequence A = (A_2,A_3,\\ldots,A_N). Also, for an integer sequence P=(P_2, P_3, \\ldots ,P_N) where 1 \\leq P_i \\leq i-1 for each i (2 \\leq i \\leq N), define the weighted tree T(P) with N vertices, rooted at vertex 1, as follows:\n\n- A rooted tree where, for each i (2 \\leq i \\leq N), the parent of i is P_i, and the weight of the edge between i and P_i is A_i.\n\nYou are given Q queries. Process them in order. The i-th query is as follows:\n\n- You are given integers u_i and v_i, each between 1 and N. For each of the possible (N-1)! sequences P, take the tree T(P) and consider the distance between vertices u_i and v_i in this tree. Output the sum, modulo 998244353, of these distances over all T(P). Here, the distance between two vertices u_i and v_i is the sum of the weights of the edges on the unique path (not visiting the same vertex more than once) that connects them.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN Q\nA_2 A_3 \\ldots A_N\nu_1 v_1\nu_2 v_2\n\\vdots\nu_Q v_Q\n\nOutput\n\nPrint Q lines. The i-th line should contain the answer to the i-th query.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2 \\times 10^5\n- 1 \\leq Q \\leq 2 \\times 10^5\n- 1 \\leq A_i \\leq 10^9\n- 1 \\leq u_i < v_i \\leq N\n- All input values are integers.\n\nSample Input 1\n\n3 2\n1 1\n1 2\n1 3\n\nSample Output 1\n\n2\n3\n\n\n- If P = (1,1), then in the tree T(P), the distance between vertices 1 and 2 is 1, and the distance between vertices 1 and 3 is 1.\n- If P = (1,2), then in the tree T(P), the distance between vertices 1 and 2 is 1, and the distance between vertices 1 and 3 is 2.\n\nTherefore, the total distance between vertices 1 and 2 over all T(P) is 2, and the total distance between vertices 1 and 3 over all T(P) is 3.\n\nSample Input 2\n\n2 1\n100\n1 2\n\nSample Output 2\n\n100\n\nSample Input 3\n\n9 6\n765689282 93267307 563699854 951829154 801512848 389123318 924504746 596035433\n3 8\n2 5\n5 8\n2 9\n8 9\n5 7\n\nSample Output 3\n\n55973424\n496202632\n903509579\n343265517\n550981449\n68482696\n\nRemember to take the sum modulo 998244353."
}