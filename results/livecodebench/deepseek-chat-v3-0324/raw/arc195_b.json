{
  "task_id": "arc195_b",
  "llm_response": "import sys\n\ndef candidate_func(input_str):\n    lines = input_str.split('\\n')\n    N = int(lines[0])\n    A = list(map(int, lines[1].split()))\n    B = list(map(int, lines[2].split()))\n    fixed_a = []\n    fixed_b = []\n    for a, b in zip(A, B):\n        if a != -1 and b != -1:\n            fixed_a.append(a)\n            fixed_b.append(b)\n    if fixed_a:\n        target = fixed_a[0] + fixed_b[0]\n        for a, b in zip(fixed_a, fixed_b):\n            if a + b != target:\n                return \"No\"\n    a_unknown = []\n    b_unknown = []\n    for a, b in zip(A, B):\n        if a == -1 and b != -1:\n            a_unknown.append(b)\n        elif a != -1 and b == -1:\n            b_unknown.append(a)\n    if fixed_a:\n        a_unknown_sorted = sorted(a_unknown, reverse=True)\n        b_unknown_sorted = sorted(b_unknown)\n        for a, b in zip(a_unknown_sorted, b_unknown_sorted):\n            if a + b > target:\n                return \"No\"\n        remaining = N - len(fixed_a) - len(a_unknown) - len(b_unknown)\n        if remaining > 0:\n            max_possible = min(a_unknown_sorted) + min(b_unknown_sorted) if a_unknown_sorted and b_unknown_sorted else None\n            if max_possible is not None and max_possible > target:\n                return \"No\"\n    else:\n        a_unknown_sorted = sorted(a_unknown, reverse=True)\n        b_unknown_sorted = sorted(b_unknown)\n        if len(a_unknown_sorted) != len(b_unknown_sorted):\n            return \"No\"\n        possible = True\n        for a, b in zip(a_unknown_sorted, b_unknown_sorted):\n            if a + b < 0:\n                possible = False\n                break\n        if not possible:\n            return \"No\"\n    return \"Yes\"",
  "model": "deepseek-chat-v3-0324",
  "task_description": "There are two sequences A=(A_1,\\dots,A_N) and B=(B_1,\\dots,B_N). You can perform the following three types of operations any number of times in any order:\n\n- Choose an index i such that A_i = -1, and replace A_i with any non-negative integer.\n- Choose an index i such that B_i = -1, and replace B_i with any non-negative integer.\n- Rearrange the elements of sequence A in any order.\n\nDetermine whether it is possible, after these operations, for all elements of A and B to be non-negative and satisfy A_1 + B_1 = A_2 + B_2 = \\dots = A_N + B_N.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_N\n\nOutput\n\nIf it is possible, after the operations, for all elements of A and B to be non-negative and satisfy A_1 + B_1 = A_2 + B_2 = \\dots = A_N + B_N, print Yes. Otherwise, print No.\n\nConstraints\n\n\n- 2 \\leq N \\leq 2000\n- -1 \\leq A_i \\leq 10^9\n- -1 \\leq B_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4\n2 0 -1 3\n3 -1 4 2\n\nSample Output 1\n\nYes\n\nConsider the following operations:\n\n- Replace A_3 with 1.\n- Replace B_2 with 1.\n- Rearrange A to (1,3,0,2).\n\nAfter these operations, A = (1,3,0,2) and B = (3,1,4,2): all elements of A and B are non-negative, and A_1+B_1 = A_2+B_2 = A_3+B_3 = A_4+B_4 = 4 is satisfied.\n\nSample Input 2\n\n3\n1 2 3\n1 2 4\n\nSample Output 2\n\nNo\n\nNo matter how you perform the operations, it is impossible to satisfy A_1+B_1 = A_2+B_2 = A_3+B_3.\n\nSample Input 3\n\n3\n1 2 -1\n1 2 4\n\nSample Output 3\n\nNo"
}