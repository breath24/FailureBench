{
  "task_id": "abc391_f",
  "llm_response": "import sys\nimport heapq\n\ndef candidate_func(input_str):\n    lines = input_str.split('\\n')\n    N, K = map(int, lines[0].split())\n    A = list(map(int, lines[1].split()))\n    B = list(map(int, lines[2].split()))\n    C = list(map(int, lines[3].split()))\n    \n    A_sorted = sorted(A, reverse=True)\n    B_sorted = sorted(B, reverse=True)\n    C_sorted = sorted(C, reverse=True)\n    \n    max_heap = []\n    visited = set()\n    \n    heapq.heappush(max_heap, (-(A_sorted[0] * B_sorted[0] + B_sorted[0] * C_sorted[0] + C_sorted[0] * A_sorted[0]), 0, 0, 0))\n    visited.add((0, 0, 0))\n    \n    result = 0\n    for _ in range(K):\n        current = heapq.heappop(max_heap)\n        val = -current[0]\n        i, j, k = current[1], current[2], current[3]\n        result = val\n        \n        if i + 1 < N and (i + 1, j, k) not in visited:\n            new_val = A_sorted[i + 1] * B_sorted[j] + B_sorted[j] * C_sorted[k] + C_sorted[k] * A_sorted[i + 1]\n            heapq.heappush(max_heap, (-new_val, i + 1, j, k))\n            visited.add((i + 1, j, k))\n        \n        if j + 1 < N and (i, j + 1, k) not in visited:\n            new_val = A_sorted[i] * B_sorted[j + 1] + B_sorted[j + 1] * C_sorted[k] + C_sorted[k] * A_sorted[i]\n            heapq.heappush(max_heap, (-new_val, i, j + 1, k))\n            visited.add((i, j + 1, k))\n        \n        if k + 1 < N and (i, j, k + 1) not in visited:\n            new_val = A_sorted[i] * B_sorted[j] + B_sorted[j] * C_sorted[k + 1] + C_sorted[k + 1] * A_sorted[i]\n            heapq.heappush(max_heap, (-new_val, i, j, k + 1))\n            visited.add((i, j, k + 1))\n    \n    return str(result)",
  "model": "deepseek-chat-v3-0324",
  "task_description": "You are given three integer sequences of length N, namely A=(A_1,A_2,\\ldots,A_N), B=(B_1,B_2,\\ldots,B_N), and C=(C_1,C_2,\\ldots,C_N), and an integer K.\nFor each of the N^3 choices of integers i,j,k (1\\leq i,j,k\\leq N), compute the value A_iB_j + B_jC_k + C_kA_i. Among all these values, find the K-th largest value.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_N\nC_1 C_2 \\ldots C_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1\\leq N \\leq 2\\times 10^5\n- 1\\leq K \\leq \\min(N^3,5\\times 10^5)\n- 1\\leq A_i,B_i,C_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n2 5\n1 2\n3 4\n5 6\n\nSample Output 1\n\n31\n\nThe N^3=8 values are computed as follows:\n\n- For (i,j,k)=(1,1,1): A_1B_1+B_1C_1+C_1A_1=1\\times 3+3\\times 5+5\\times 1=23\n- For (i,j,k)=(1,1,2): A_1B_1+B_1C_2+C_2A_1=1\\times 3+3\\times 6+6\\times 1=27\n- For (i,j,k)=(1,2,1): A_1B_2+B_2C_1+C_1A_1=1\\times 4+4\\times 5+5\\times 1=29\n- For (i,j,k)=(1,2,2): A_1B_2+B_2C_2+C_2A_1=1\\times 4+4\\times 6+6\\times 1=34\n- For (i,j,k)=(2,1,1): A_2B_1+B_1C_1+C_1A_2=2\\times 3+3\\times 5+5\\times 2=31\n- For (i,j,k)=(2,1,2): A_2B_1+B_1C_2+C_2A_2=2\\times 3+3\\times 6+6\\times 2=36\n- For (i,j,k)=(2,2,1): A_2B_2+B_2C_1+C_1A_2=2\\times 4+4\\times 5+5\\times 2=38\n- For (i,j,k)=(2,2,2): A_2B_2+B_2C_2+C_2A_2=2\\times 4+4\\times 6+6\\times 2=44\n\nSorting these values in descending order, we have (44,38,36,34,31,29,27,23), so the 5th largest value is 31.\n\nSample Input 2\n\n3 10\n100 100 100\n100 100 100\n100 100 100\n\nSample Output 2\n\n30000\n\nSample Input 3\n\n5 54\n800516877 573289179 26509423 168629803 696409999\n656737335 915059758 201458890 931198638 185928366\n140174496 254538849 830992027 305186313 322164559\n\nSample Output 3\n\n689589940713840351"
}