{
  "task_id": "abc400_e",
  "llm_response": "import sys\nimport math\n\ndef candidate_func(input_str):\n    input_lines = input_str.splitlines()\n    Q = int(input_lines[0])\n    queries = list(map(int, input_lines[1:Q+1]))\n    max_A = max(queries)\n    max_sqrt = int(math.isqrt(max_A)) + 2\n    sieve = [True] * (max_sqrt + 1)\n    sieve[0] = sieve[1] = False\n    for i in range(2, int(math.isqrt(max_sqrt)) + 1):\n        if sieve[i]:\n            for j in range(i*i, max_sqrt + 1, i):\n                sieve[j] = False\n    primes = [i for i, is_prime in enumerate(sieve) if is_prime]\n    candidates = set()\n    for i in range(len(primes)):\n        p = primes[i]\n        if p * p > max_A:\n            break\n        for j in range(i + 1, len(primes)):\n            q = primes[j]\n            if p * p * q * q > max_A:\n                break\n            candidates.add(p * p * q * q)\n    for p in primes:\n        if p * p * p * p > max_A:\n            break\n        candidates.add(p * p * p * p)\n    candidates = sorted(candidates)\n    results = []\n    for A in queries:\n        left, right = 0, len(candidates) - 1\n        best = 0\n        while left <= right:\n            mid = (left + right) // 2\n            if candidates[mid] <= A:\n                best = candidates[mid]\n                left = mid + 1\n            else:\n                right = mid - 1\n        results.append(str(best))\n    return '\\n'.join(results)",
  "model": "deepseek-chat-v3-0324",
  "task_description": "A positive integer N is a 400 number if and only if it satisfies both of the following two conditions:\n\n- N has exactly 2 distinct prime factors.\n- For each prime factor p of N, p divides N an even number of times. More formally, the maximum non-negative integer k such that p^k divides N is even.\n\nProcess Q queries. Each query gives you an integer A, so find the largest 400 number not exceeding A. Under the constraints of this problem, a 400 number not exceeding A always exists.\n\nInput\n\nThe input is given from Standard Input in the following format:\nQ\r\n\\text{query}_1\r\n\\text{query}_2\r\n\\vdots\r\n\\text{query}_Q\r\n\nHere, \\text{query}_i is the i-th query, given in the following format:\nA\n\nOutput\n\nPrint Q lines. The i-th line should contain the answer to the i-th query.\n\nConstraints\n\n\n- 1 \\leq Q \\leq 2 \\times 10^5\n- For each query, 36 \\leq A \\leq 10^{12}.\n- All input values are integers.\n\nSample Input 1\n\n5\r\n404\r\n36\r\n60\r\n1000000000000\r\n123456789\n\nSample Output 1\n\n400\r\n36\r\n36\r\n1000000000000\r\n123454321\r\n\nLet us explain the first query.\nThere are exactly 2 prime factors of 400: 2 and 5. Also, 2 divides 400 four times and 5 divides it twice, so 400 is a 400 number. None of 401, 402, 403, and 404 is a 400 number, so the answer is 400."
}