{
  "task_id": "BigCodeBench/592",
  "instruct_prompt": "Create sensor data for the specified number of hours and save it in a CSV file with coloumns 'Time', 'Temperature', 'Humidity' and 'Pressure'.\nThe function should output with:\n    hours (int): Number of hours to generate data for.\nYou should write self-contained code starting with:\n```\nimport csv\nimport os\nfrom datetime import datetime\nfrom random import randint\n# Constants\nSENSORS = ['Temperature', 'Humidity', 'Pressure']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n```",
  "llm_response": "import csv\nimport os\nfrom datetime import datetime, timedelta\nfrom random import randint\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n    \"\"\"\n    Generate sensor data for the specified number of hours and save it in a CSV file.\n\n    Args:\n        hours (int): Number of hours to generate data for.\n        output_dir (str, optional): Directory to save the output CSV file. Defaults to './output'.\n\n    Returns:\n        None\n    \"\"\"\n    # Create output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Define the output CSV file path\n    output_file = os.path.join(output_dir, 'sensor_data.csv')\n\n    # Define the header row\n    header = ['Time', 'Temperature', 'Humidity', 'Pressure']\n\n    # Initialize the current time\n    current_time = datetime.now()\n\n    # Open the output CSV file and write the header row\n    with open(output_file, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(header)\n\n        # Generate data for the specified number of hours\n        for i in range(hours * 60):  # 60 minutes per hour\n            # Generate random sensor values\n            temperature = randint(0, 100)\n            humidity = randint(0, 100)\n            pressure = randint(900, 1100)\n\n            # Write the data row\n            writer.writerow([\n                (current_time + timedelta(minutes=i)).strftime('%Y-%m-%d %H:%M'),\n                temperature,\n                humidity,\n                pressure\n            ])",
  "model": "llama-3.3-70b"
}