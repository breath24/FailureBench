{
  "task_id": "BigCodeBench/657",
  "instruct_prompt": "Generate word vectors from a list of texts using the gensim Word2Vec model and nltk.corpus.stopwords. The texts are first cleaned by removing all non-alphanumeric characters except space, lowercased, and stop words are removed.\nThe function should output with:\n    Word2Vec: A trained Word2Vec model.\nYou should write self-contained code starting with:\n```\nimport re\nimport nltk\nfrom gensim.models import Word2Vec\n# Constants\nALPHANUMERIC = re.compile('[\\W_]+')\ndef task_func(texts, stopwords=None):\n```",
  "llm_response": "import re\nimport nltk\nfrom gensim.models import Word2Vec\nfrom nltk.corpus import stopwords\nALPHANUMERIC = re.compile('[\\W_]+')\ndef task_func(texts, stopwords=None):\n    \"\"\"\n    Generate word vectors from a list of texts using Word2Vec.\n    \n    Args:\n        texts (list): List of text strings\n        stopwords (set, optional): Set of stopwords to remove. Defaults to nltk english stopwords.\n    \n    Returns:\n        Word2Vec: A trained Word2Vec model\n    \"\"\"\n    if stopwords is None:\n        stopwords_set = stop_words\n    else:\n        stopwords_set = set(stopwords)\n    \n    # Process texts\n    processed_texts = []\n    for text in texts:\n        # Remove non-alphanumeric characters except space and convert to lowercase\n        cleaned_text = ALPHANUMERIC.sub(' ', text.lower())\n        # Split into words and remove stopwords\n        words = [word for word in cleaned_text.split() if word not in stopwords_set]\n        if words:  # Only add non-empty texts\n            processed_texts.append(words)\n    \n    # Train Word2Vec model\n    model = Word2Vec(\n        sentences=processed_texts,\n        vector_size=100,\n        window=5,\n        min_count=1,\n        workers=4,\n        sg=0  # CBOW model\n    )\n    \n    return model",
  "model": "qwen3-coder"
}