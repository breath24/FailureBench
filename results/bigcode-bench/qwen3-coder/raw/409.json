{
  "task_id": "BigCodeBench/409",
  "instruct_prompt": "Calculate the mean, median, and standard deviation of the data from a specific column in an Excel file.\nThe function should raise the exception for: FileNotFoundError: If the Excel file does not exist at the specified path. ValueError: If the specified column is not found in the Excel file.\nThe function should output with:\n    dict: A dictionary with the mean, median, and standard deviation.\nYou should write self-contained code starting with:\n```\nimport os\nimport pandas as pd\nimport numpy as np\ndef task_func(excel_file_path, file_name, column_name):\n```",
  "llm_response": "import os\nimport pandas as pd\nimport numpy as np\ndef task_func(excel_file_path, file_name, column_name):\n    \"\"\"\n    Calculate the mean, median, and standard deviation of the data from a specific column in an Excel file.\n    \n    Args:\n        excel_file_path (str): Path to the directory containing the Excel file\n        file_name (str): Name of the Excel file\n        column_name (str): Name of the column to analyze\n        \n    Returns:\n        dict: A dictionary with the mean, median, and standard deviation\n        \n    Raises:\n        FileNotFoundError: If the Excel file does not exist at the specified path\n        ValueError: If the specified column is not found in the Excel file\n    \"\"\"\n    # Construct full file path\n    full_path = os.path.join(excel_file_path, file_name)\n    \n    # Check if file exists\n    if not os.path.exists(full_path):\n        raise FileNotFoundError(f\"Excel file not found at path: {full_path}\")\n    \n    # Read the Excel file\n    try:\n        df = pd.read_excel(full_path)\n    except Exception as e:\n        raise FileNotFoundError(f\"Could not read Excel file: {full_path}\")\n    \n    # Check if column exists\n    if column_name not in df.columns:\n        raise ValueError(f\"Column '{column_name}' not found in the Excel file. Available columns: {list(df.columns)}\")\n    \n    # Extract column data and remove NaN values\n    column_data = df[column_name].dropna()\n    \n    # Check if column has any data\n    if len(column_data) == 0:\n        raise ValueError(f\"Column '{column_name}' contains no valid data.\")\n    \n    # Calculate statistics\n    mean_val = float(np.mean(column_data))\n    median_val = float(np.median(column_data))\n    std_val = float(np.std(column_data, ddof=1))  # Using sample standard deviation\n    \n    # Return results as dictionary\n    return {\n        'mean': mean_val,\n        'median': median_val,\n        'standard_deviation': std_val\n    }",
  "model": "qwen3-coder"
}