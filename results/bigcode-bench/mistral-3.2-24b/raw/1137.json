{
  "task_id": "BigCodeBench/1137",
  "instruct_prompt": "Extracts phone numbers from a given URL or local file and saves them to a specified file in JSON format.\nThe function should output with:\n    list: A list of strings, each representing a found phone number.\nYou should write self-contained code starting with:\n```\nimport bs4\nimport requests\nimport re\nimport json\ndef task_func(url: str, output_path: str) -> list:\n```",
  "llm_response": "import bs4\nimport requests\nimport re\nimport json\ndef task_func(url: str, output_path: str) -> list:\n    \"\"\"\n    Extracts phone numbers from a given URL or local file and saves them to a specified file in JSON format.\n\n    Args:\n        url: URL or local file path to extract phone numbers from\n        output_path: Path to save the JSON output file\n\n    Returns:\n        list: A list of strings, each representing a found phone number.\n    \"\"\"\n    # Regular expression pattern for phone number matching\n    phone_pattern = re.compile(\n        r'(\\+?\\d{1,3}[-.\\s]?)?\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}\\b'\n    )\n\n    phone_numbers = []\n\n    try:\n        # Check if the input is a URL or local file\n        if url.startswith(('http://', 'https://')):\n            # Fetch content from URL\n            response = requests.get(url)\n            response.raise_for_status()\n            soup = bs4.BeautifulSoup(response.text, 'html.parser')\n            text = soup.get_text()\n        else:\n            # Read content from local file\n            with open(url, 'r', encoding='utf-8') as file:\n                text = file.read()\n\n        # Find all phone numbers in the text\n        matches = phone_pattern.finditer(text)\n        for match in matches:\n            phone_numbers.append(match.group())\n\n        # Remove duplicates while preserving order\n        seen = set()\n        unique_phone_numbers = []\n        for num in phone_numbers:\n            if num not in seen:\n                seen.add(num)\n                unique_phone_numbers.append(num)\n\n        # Save to JSON file\n        with open(output_path, 'w', encoding='utf-8') as json_file:\n            json.dump(unique_phone_numbers, json_file, indent=2)\n\n        return unique_phone_numbers\n\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return []",
  "model": "mistral-3.2-24b"
}