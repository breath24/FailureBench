{
  "task_id": "BigCodeBench/287",
  "instruct_prompt": "Count the number of words in .txt files within a specified directory, export the counts to a JSON file, and then return the total number of words.\nThe function should output with:\n    int: total number of words in .txt files\nYou should write self-contained code starting with:\n```\nfrom collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n```",
  "llm_response": "from collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n    \"\"\"\n    Counts the number of words in .txt files within a specified directory,\n    exports the counts to a JSON file, and returns the total number of words.\n\n    Args:\n        filename (str): Name of the output JSON file\n        directory (str): Path to the directory containing .txt files\n\n    Returns:\n        int: total number of words in .txt files\n    \"\"\"\n    word_counts = Counter()\n    total_words = 0\n\n    # Process each .txt file in the directory\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if file.endswith('.txt'):\n                filepath = os.path.join(root, file)\n                try:\n                    with open(filepath, 'r', encoding='utf-8') as f:\n                        content = f.read()\n                        words = content.split()\n                        word_counts[file] = len(words)\n                        total_words += len(words)\n                except (IOError, UnicodeDecodeError) as e:\n                    print(f\"Error processing {filepath}: {e}\")\n\n    # Export the counts to JSON\n    with open(filename, 'w', encoding='utf-8') as f:\n        json.dump(word_counts, f, indent=4)\n\n    return total_words",
  "model": "mistral-3.2-24b"
}