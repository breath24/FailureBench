{
  "task_id": "BigCodeBench/399",
  "instruct_prompt": "Create a diagram of a sine wave and cosine wave with a given frequency and return the plot.\nThe function should raise the exception for: ValueError: If the frequency is negative. ValueError: If the sample size is non-positive.\nThe function should output with:\n    matplotlib.figure.Figure: The figure object containing the plot.\n    matplotlib.axes.Axes: The axes object of the plot.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport math\ndef task_func(frequency, sample_size=10000):\n```",
  "llm_response": "import numpy as np\nimport matplotlib.pyplot as plt\nimport math\ndef task_func(frequency, sample_size=10000):\n    \"\"\"\n    Create a diagram of a sine wave and cosine wave with a given frequency.\n    \n    Parameters:\n    frequency (float): The frequency of the waves in Hz\n    sample_size (int): Number of sample points (default: 10000)\n    \n    Returns:\n    tuple: (matplotlib.figure.Figure, matplotlib.axes.Axes)\n        - The figure object containing the plot\n        - The axes object of the plot\n    \n    Raises:\n    ValueError: If the frequency is negative\n    ValueError: If the sample size is non-positive\n    \"\"\"\n    # Validate inputs\n    if frequency < 0:\n        raise ValueError(\"Frequency cannot be negative\")\n    \n    if sample_size <= 0:\n        raise ValueError(\"Sample size must be positive\")\n    \n    # Create time array for one complete period\n    # For proper visualization, we'll show 2 complete cycles\n    period = 1 / frequency if frequency > 0 else 1\n    t = np.linspace(0, 2 * period, sample_size)\n    \n    # Calculate sine and cosine waves\n    sine_wave = np.sin(2 * math.pi * frequency * t)\n    cosine_wave = np.cos(2 * math.pi * frequency * t)\n    \n    # Create the plot\n    fig, ax = plt.subplots(figsize=(10, 6))\n    \n    # Plot both waves\n    ax.plot(t, sine_wave, label='Sine Wave', color='blue', linewidth=2)\n    ax.plot(t, cosine_wave, label='Cosine Wave', color='red', linewidth=2)\n    \n    # Customize the plot\n    ax.set_xlabel('Time (s)')\n    ax.set_ylabel('Amplitude')\n    ax.set_title(f'Sine and Cosine Waves (Frequency: {frequency} Hz)')\n    ax.legend()\n    ax.grid(True, alpha=0.3)\n    ax.set_ylim(-1.1, 1.1)\n    \n    # Add some styling\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    \n    return fig, ax",
  "model": "claude-sonnet-4"
}