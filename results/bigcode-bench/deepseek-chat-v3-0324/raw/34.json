{
  "task_id": "BigCodeBench/34",
  "instruct_prompt": "Create a word cloud from text after removing URLs and plot it.\nThe function should raise the exception for: ValueError(\"No words available to generate a word cloud after removing URLs.\"): If there are no words available to generate a word cloud after removing URLs.\nThe function should output with:\n    WordCloud object: The generated word cloud.\nYou should write self-contained code starting with:\n```\nimport re\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\ndef task_func(text):\n```",
  "llm_response": "import re\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\ndef task_func(text):\n    \"\"\"\n    Create a word cloud from text after removing URLs.\n    \n    Parameters:\n    text (str): The input text from which to generate the word cloud.\n    \n    Returns:\n    WordCloud: The generated word cloud object.\n    \n    Raises:\n    ValueError: If there are no words available to generate a word cloud after removing URLs.\n    \"\"\"\n    # Remove URLs from the text\n    url_pattern = re.compile(r'https?://\\S+|www\\.\\S+')\n    cleaned_text = url_pattern.sub('', text)\n    \n    # Check if there are any words left after cleaning\n    words = re.findall(r'\\b\\w+\\b', cleaned_text)\n    if not words:\n        raise ValueError(\"No words available to generate a word cloud after removing URLs.\")\n    \n    # Generate word cloud\n    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(cleaned_text)\n    \n    # Plot the word cloud\n    plt.figure(figsize=(10, 5))\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis('off')\n    plt.show()\n    \n    return wordcloud",
  "model": "deepseek-chat-v3-0324"
}