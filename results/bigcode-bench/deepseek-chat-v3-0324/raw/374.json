{
  "task_id": "BigCodeBench/374",
  "instruct_prompt": "Protects all double quotes in all Excel (.xlsx) files in the specified directory by prefixing them with a double backslash.\nThe function should output with:\n    int: The number of Excel files processed.\nYou should write self-contained code starting with:\n```\nimport regex as re\nimport glob\nimport os\nfrom openpyxl import load_workbook\ndef task_func(directory_path='./xlsx_files/'):\n```",
  "llm_response": "import re\nimport glob\nimport os\nfrom openpyxl import load_workbook\ndef task_func(directory_path='./xlsx_files/'):\n    \"\"\"\n    Protects all double quotes in all Excel (.xlsx) files in the specified directory by prefixing them with a double backslash.\n    The function returns the number of Excel files processed.\n\n    Parameters:\n    - directory_path (str): The path to the directory containing the Excel files. Default is './xlsx_files/'.\n\n    Returns:\n    - int: The number of Excel files processed.\n\n    Notes:\n    - The function processes all .xlsx files in the specified directory, including subdirectories.\n    - For each cell in each worksheet of the Excel files, if the cell contains a string, all double quotes (\") are replaced with \\\\\".\n    - The modified files are saved in place, overwriting the original files.\n    \"\"\"\n    if not os.path.isdir(directory_path):\n        return 0\n    xlsx_files = glob.glob(os.path.join(directory_path, '**', '*.xlsx'), recursive=True)\n    count = 0\n    for file_path in xlsx_files:\n        try:\n            workbook = load_workbook(filename=file_path)\n            modified = False\n            for sheet in workbook.worksheets:\n                for row in sheet.iter_rows():\n                    for cell in row:\n                        if cell.data_type == 's' and '\"' in str(cell.value):\n                            cell.value = re.sub(r'\"', r'\\\\\"', str(cell.value))\n                            modified = True\n            if modified:\n                workbook.save(filename=file_path)\n                count += 1\n        except Exception as e:\n            print(f\"Error processing file {file_path}: {e}\")\n    return count",
  "model": "deepseek-chat-v3-0324"
}