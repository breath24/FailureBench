{
  "task_id": "abc397_e",
  "llm_response": "from collections import defaultdict, deque\n\ndef candidate_func(input_str):\n    lines = input_str.strip().split('\\n')\n    n, k = map(int, lines[0].split())\n    \n    if k == 1:\n        return \"Yes\"\n    \n    graph = defaultdict(list)\n    degree = [0] * (n * k + 1)\n    \n    for i in range(1, n * k):\n        u, v = map(int, lines[i].split())\n        graph[u].append(v)\n        graph[v].append(u)\n        degree[u] += 1\n        degree[v] += 1\n    \n    leaves = []\n    for i in range(1, n * k + 1):\n        if degree[i] == 1:\n            leaves.append(i)\n    \n    if len(leaves) != 2 * n:\n        return \"No\"\n    \n    visited = [False] * (n * k + 1)\n    paths = []\n    \n    for leaf in leaves:\n        if visited[leaf]:\n            continue\n        \n        path = []\n        current = leaf\n        path.append(current)\n        visited[current] = True\n        \n        while True:\n            next_node = None\n            for neighbor in graph[current]:\n                if not visited[neighbor]:\n                    next_node = neighbor\n                    break\n            \n            if next_node is None:\n                break\n            \n            path.append(next_node)\n            visited[next_node] = True\n            current = next_node\n        \n        if len(path) == k:\n            paths.append(path)\n        else:\n            return \"No\"\n    \n    if len(paths) == n:\n        return \"Yes\"\n    else:\n        return \"No\"",
  "model": "claude-sonnet-4",
  "task_description": "You are given a tree with NK vertices. The vertices are numbered 1,2,\\dots,NK, and the i-th edge (i=1,2,\\dots,NK-1) connects vertices u_i and v_i bidirectionally.\nDetermine whether this tree can be decomposed into N paths, each of length K. More precisely, determine whether there exists an N \\times K matrix P satisfying the following:\n\n- P_{1,1}, \\dots, P_{1,K}, P_{2,1}, \\dots, P_{N,K} is a permutation of 1,2,\\dots,NK.\n- For each i=1,2,\\dots,N and j=1,2,\\dots,K-1, there is an edge connecting vertices P_{i,j} and P_{i,j+1}.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\r\nu_1 v_1\r\nu_2 v_2\r\n\\vdots\r\nu_{NK-1} v_{NK-1}\n\nOutput\n\nIf it is possible to decompose the tree into N paths each of length K, print Yes. Otherwise, print No.\n\nConstraints\n\n\n- 1 \\leq N\n- 1 \\leq K\n- NK \\leq 2 \\times 10^5\n- 1 \\leq u_i < v_i \\leq NK\n- The given graph is a tree.\n- All input values are integers.\n\nSample Input 1\n\n3 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n5 6\n\nSample Output 1\n\nYes\r\n\nIt can be decomposed into a path with vertices 1,2, a path with vertices 3,4, and a path with vertices 5,6.\n\nSample Input 2\n\n3 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n3 6\n\nSample Output 2\n\nNo"
}