{
  "task_id": "abc389_e",
  "llm_response": "import heapq\n\ndef candidate_func(input_str):\n    lines = input_str.strip().split('\\n')\n    n, m = map(int, lines[0].split())\n    prices = list(map(int, lines[1].split()))\n    \n    def can_buy_k_units(k):\n        costs = []\n        for p in prices:\n            for units in range(1, min(k + 1, int((m / p) ** 0.5) + 2)):\n                cost = units * units * p\n                if cost <= m:\n                    costs.append(-cost)\n        \n        if len(costs) < k:\n            return False\n        \n        heapq.heapify(costs)\n        total_cost = 0\n        for _ in range(k):\n            total_cost += -heapq.heappop(costs)\n            if total_cost > m:\n                return False\n        \n        return True\n    \n    left, right = 0, int((m / min(prices)) ** 0.5) + 1\n    \n    while right - left > 1:\n        mid = (left + right) // 2\n        if can_buy_k_units(mid):\n            left = mid\n        else:\n            right = mid\n    \n    return str(left)",
  "model": "claude-sonnet-4",
  "task_description": "There are N types of products, each having 10^{100} units in stock.\nYou can buy any non-negative number of units of each product. To buy k units of the i-th product, it costs k^2 P_i yen.\nIf your total purchase cost is at most M yen, what is the maximum number of units you can buy in total?\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nP_1 \\ldots P_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^{5}\n- 1 \\leq M \\leq 10^{18}\n- 1 \\leq P_i \\leq 2 \\times 10^{9}\n- All input values are integers.\n\nSample Input 1\n\n3 9\r\n4 1 9\n\nSample Output 1\n\n3\r\n\nIf you buy one unit of the 1st product and two units of the 2nd product, the total purchase cost is 1^2 \\times 4 + 2^2 \\times 1 = 8. It is impossible to buy four or more units in total with a total cost of at most 9 yen, so the answer is 3.\n\nSample Input 2\n\n10 1000\r\n2 15 6 5 12 1 7 9 17 2\n\nSample Output 2\n\n53"
}