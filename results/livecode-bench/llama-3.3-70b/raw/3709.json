{
  "task_id": "3709",
  "llm_response": "def hasSpecialSubstring(s: str, k: int) -> bool:\n    for i in range(len(s) - k + 1):\n        substring = s[i:i+k]\n        if len(set(substring)) == 1:\n            if i == 0 or s[i-1] != substring[0]:\n                if i + k == len(s) or s[i+k] != substring[0]:\n                    return True\n    return False",
  "model": "llama-3.3-70b",
  "task_description": "You are given a string s and an integer k.\nDetermine if there exists a substring of length exactly k in s that satisfies the following conditions:\n\nThe substring consists of only one distinct character (e.g., \"aaa\" or \"bbb\").\nIf there is a character immediately before the substring, it must be different from the character in the substring.\nIf there is a character immediately after the substring, it must also be different from the character in the substring.\n\nReturn true if such a substring exists. Otherwise, return false.\n \nExample 1:\n\nInput: s = \"aaabaaa\", k = 3\nOutput: true\nExplanation:\nThe substring s[4..6] == \"aaa\" satisfies the conditions.\n\nIt has a length of 3.\nAll characters are the same.\nThe character before \"aaa\" is 'b', which is different from 'a'.\nThere is no character after \"aaa\".\n\n\nExample 2:\n\nInput: s = \"abc\", k = 2\nOutput: false\nExplanation:\nThere is no substring of length 2 that consists of one distinct character and satisfies the conditions.\n\n \nConstraints:\n\n1 <= k <= s.length <= 100\ns consists of lowercase English letters only."
}