{
  "task_id": "abc394_f",
  "llm_response": "from collections import deque\n\ndef candidate_func(s):\n    lines = s.strip().split('\\n')\n    N = int(lines[0])\n    edges = [tuple(map(int, line.split())) for line in lines[1:]]\n\n    adj = [[] for _ in range(N + 1)]\n    for a, b in edges:\n        adj[a].append(b)\n        adj[b].append(a)\n\n    degrees = [0] * (N + 1)\n    for a, b in edges:\n        degrees[a] += 1\n        degrees[b] += 1\n\n    if not any(d == 4 for d in degrees[1:]):\n        return \"-1\"\n\n    parent = [0] * (N + 1)\n    depth = [0] * (N + 1)\n    size = [0] * (N + 1)\n    q = deque()\n    q.append(1)\n    parent[1] = 1\n    depth[1] = 0\n    size[1] = 1\n\n    while q:\n        u = q.popleft()\n        for v in adj[u]:\n            if v != parent[u]:\n                parent[v] = u\n                depth[v] = depth[u] + 1\n                size[v] = 1\n                q.append(v)\n\n    max_size = 0\n    for u in range(1, N + 1):\n        if degrees[u] == 4:\n            current = u\n            count = 0\n            while current != 1 and degrees[current] == 1:\n                count += 1\n                current = parent[current]\n            if degrees[current] == 4:\n                count += 1\n                while current != 1 and degrees[current] == 1:\n                    count += 1\n                    current = parent[current]\n            if count > max_size:\n                max_size = count\n\n    if max_size == 0:\n        return \"-1\"\n    else:\n        return str(max_size)",
  "model": "mistral-3.2-24b",
  "task_description": "You are given an undirected tree T with N vertices, numbered 1, 2, \\ldots, N. The i-th edge is an undirected edge connecting vertices A_i and B_i.\nA graph is defined to be an alkane if and only if it satisfies the following conditions:\n\n- The graph is an undirected tree.\n- Every vertex has degree 1 or 4, and there is at least one vertex of degree 4.\n\nDetermine whether there exists a subgraph of T that is an alkane, and if so, find the maximum number of vertices in such a subgraph.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 B_1\r\nA_2 B_2\r\n\\vdots\r\nA_{N - 1} B_{N - 1}\n\nOutput\n\nIf there exists a subgraph of T that is an alkane, print the maximum number of vertices in such a subgraph. Otherwise, print -1.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- 1 \\leq A_i, B_i \\leq N\n- The given graph is an undirected tree.\n- All input values are integers.\n\nSample Input 1\n\n9\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n2 6\r\n2 7\r\n3 8\r\n3 9\n\nSample Output 1\n\n8\r\n\nLet (u, v) denote an undirected edge between vertices u and v.\nA subgraph consisting of vertices 1,2,3,4,6,7,8,9 and edges (1,2),(2,3),(3,4),(2,6),(2,7),(3,8),(3,9) is an alkane.\n\nSample Input 2\n\n7\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\n\nSample Output 2\n\n-1\n\nSample Input 3\n\n15\r\n8 5\r\n2 9\r\n1 12\r\n6 11\r\n9 3\r\n15 1\r\n7 12\r\n7 13\r\n10 5\r\n6 9\r\n5 1\r\n1 9\r\n4 5\r\n6 14\n\nSample Output 3\n\n11"
}