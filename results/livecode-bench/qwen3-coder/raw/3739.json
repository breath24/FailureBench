{
  "task_id": "3739",
  "llm_response": "def distanceSum(m, n, k):\n    MOD = 10**9 + 7\n    \n    # Precompute factorials and inverse factorials\n    max_val = m * n\n    fact = [1] * (max_val + 1)\n    for i in range(1, max_val + 1):\n        fact[i] = (fact[i-1] * i) % MOD\n    \n    def modinv(x):\n        return pow(x, MOD - 2, MOD)\n    \n    inv_fact = [1] * (max_val + 1)\n    inv_fact[max_val] = modinv(fact[max_val])\n    for i in range(max_val - 1, -1, -1):\n        inv_fact[i] = (inv_fact[i + 1] * (i + 1)) % MOD\n    \n    def comb(n, r):\n        if r > n or r < 0:\n            return 0\n        return (fact[n] * inv_fact[r] % MOD) * inv_fact[n - r] % MOD\n    \n    total_ways = comb(m * n, k)\n    \n    # Calculate sum of Manhattan distances over all pairs and all arrangements\n    # For each pair of cells, count how many arrangements include both cells\n    \n    # Contribution from row differences\n    row_sum = 0\n    for i in range(m):\n        for j in range(m):\n            if i != j:\n                dist = abs(i - j)\n                # Number of ways to choose k-2 cells from remaining (m*n - 2) cells\n                ways = comb(m * n - 2, k - 2)\n                row_sum = (row_sum + dist * ways) % MOD\n    \n    # Contribution from column differences\n    col_sum = 0\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                dist = abs(i - j)\n                # Number of ways to choose k-2 cells from remaining (m*n - 2) cells\n                ways = comb(m * n - 2, k - 2)\n                col_sum = (col_sum + dist * ways) % MOD\n    \n    result = (row_sum * n * n + col_sum * m * m) % MOD\n    return result",
  "model": "qwen3-coder",
  "task_description": "You are given three integers m, n, and k.\nThere is a rectangular grid of size m \u00d7 n containing k identical pieces. Return the sum of Manhattan distances between every pair of pieces over all valid arrangements of pieces.\nA valid arrangement is a placement of all k pieces on the grid with at most one piece per cell.\nSince the answer may be very large, return it modulo 10^9 + 7.\nThe Manhattan Distance between two cells (x_i, y_i) and (x_j, y_j) is |x_i - x_j| + |y_i - y_j|.\n \nExample 1:\n\nInput: m = 2, n = 2, k = 2\nOutput: 8\nExplanation:\nThe valid arrangements of pieces on the board are:\n\n\nIn the first 4 arrangements, the Manhattan distance between the two pieces is 1.\nIn the last 2 arrangements, the Manhattan distance between the two pieces is 2.\n\nThus, the total Manhattan distance across all valid arrangements is 1 + 1 + 1 + 1 + 2 + 2 = 8.\n\nExample 2:\n\nInput: m = 1, n = 4, k = 3\nOutput: 20\nExplanation:\nThe valid arrangements of pieces on the board are:\n\n\nThe first and last arrangements have a total Manhattan distance of 1 + 1 + 2 = 4.\nThe middle two arrangements have a total Manhattan distance of 1 + 2 + 3 = 6.\n\nThe total Manhattan distance between all pairs of pieces across all arrangements is 4 + 6 + 6 + 4 = 20.\n\n \nConstraints:\n\n1 <= m, n <= 10^5\n2 <= m * n <= 10^5\n2 <= k <= m * n"
}