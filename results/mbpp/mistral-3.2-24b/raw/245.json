{
  "task_id": "Mbpp/245",
  "llm_response": "def max_sum(arr):\n    n = len(arr)\n    if n == 0:\n        return 0\n\n    # Forward pass to calculate the maximum sum of increasing subsequence ending at each index\n    inc = [0] * n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i-1] + arr[i])\n\n    # Backward pass to calculate the maximum sum of decreasing subsequence starting at each index\n    dec = [0] * n\n    dec[-1] = arr[-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(arr[i], dec[i+1] + arr[i])\n\n    # Combine the results to find the maximum sum of bitonic subsequence\n    max_sum = 0\n    for i in range(n):\n        if i == 0:\n            max_sum = max(max_sum, dec[i+1])\n        elif i == n-1:\n            max_sum = max(max_sum, inc[i-1])\n        else:\n            max_sum = max(max_sum, inc[i-1] + dec[i+1])\n\n    return max_sum",
  "model": "mistral-3.2-24b",
  "task_description": "Write a function to find the maximum sum of bi-tonic sub-sequence for the given array."
}