{
  "task_id": "BigCodeBench/765",
  "instruct_prompt": "Process files from a dictionary by checking if the file exists, and if it has content, then copies it to a target directory.\nThe function should output with:\n    copied_files (list): A list of full file paths that were copied.\nYou should write self-contained code starting with:\n```\nimport os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n```",
  "llm_response": "import os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n    \"\"\"\n    Process files from a dictionary by checking if the file exists, and if it has content,\n    then copies it to a target directory.\n\n    Parameters:\n    - kwargs (dict): A dictionary where keys are identifiers and values are file paths.\n    - target_dir (str): The directory where non-empty files will be copied. Defaults to \"non_none_files\".\n\n    Returns:\n    - copied_files (list): A list of full file paths that were copied.\n    \"\"\"\n    # Ensure the target directory exists\n    target_path = Path(target_dir)\n    target_path.mkdir(parents=True, exist_ok=True)\n\n    copied_files = []\n\n    for identifier, file_path in kwargs.items():\n        file_path = Path(file_path)\n        \n        # Check if the file exists and is not empty\n        if file_path.is_file() and file_path.stat().st_size > 0:\n            # Define the destination path\n            destination = target_path / file_path.name\n            \n            # Copy the file to the target directory\n            shutil.copy(file_path, destination)\n            \n            # Add the copied file's path to the list\n            copied_files.append(str(destination))\n\n    return copied_files",
  "model": "gpt-4o"
}