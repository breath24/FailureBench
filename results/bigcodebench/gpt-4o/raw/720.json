{
  "task_id": "BigCodeBench/720",
  "instruct_prompt": "Create and delete a CSV file \"task_func_data/Output.txt\" with sensor data for temperature and humidity. The data is generated randomly, written in append mode, and the file is deleted after use.\nThe function should output with:\n    Returns the path to the CSV file \"task_func_data/Output.txt\" before deletion.\nYou should write self-contained code starting with:\n```\nimport os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n```",
  "llm_response": "import os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n    # Define the directory and file path\n    directory = \"task_func_data\"\n    file_name = \"Output.txt\"\n    file_path = os.path.join(directory, file_name)\n    \n    # Create the directory if it doesn't exist\n    if not os.path.exists(directory):\n        os.makedirs(directory)\n    \n    # Generate random sensor data and write to the file\n    with open(file_path, mode='a', newline='') as file:\n        writer = csv.writer(file)\n        # Write header if the file is empty\n        if file.tell() == 0:\n            writer.writerow([\"Timestamp\", \"Temperature\", \"Humidity\"])\n        \n        # Generate and write 10 rows of random data\n        for _ in range(10):\n            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n            temperature = round(random.uniform(15.0, 30.0), 2)  # Random temperature between 15 and 30\n            humidity = round(random.uniform(30.0, 70.0), 2)     # Random humidity between 30 and 70\n            writer.writerow([timestamp, temperature, humidity])\n    \n    # Return the file path before deletion\n    print(f\"File created at: {file_path}\")\n    \n    # Delete the file after use\n    if os.path.exists(file_path):\n        os.remove(file_path)\n        print(f\"File deleted: {file_path}\")\n    \n    return file_path",
  "model": "gpt-4o"
}