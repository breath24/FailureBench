{
  "task_id": "BigCodeBench/592",
  "instruct_prompt": "Create sensor data for the specified number of hours and save it in a CSV file with coloumns 'Time', 'Temperature', 'Humidity' and 'Pressure'.\nThe function should output with:\n    hours (int): Number of hours to generate data for.\nYou should write self-contained code starting with:\n```\nimport csv\nimport os\nfrom datetime import datetime\nfrom random import randint\n# Constants\nSENSORS = ['Temperature', 'Humidity', 'Pressure']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n```",
  "llm_response": "import csv\nimport os\nfrom datetime import datetime, timedelta\nfrom random import randint\nSENSORS = ['Temperature', 'Humidity', 'Pressure']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n    # Ensure the output directory exists\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n    \n    # Define the start time\n    start_time = datetime.now()\n    \n    # Prepare the data\n    data = []\n    for hour in range(hours):\n        current_time = start_time + timedelta(hours=hour)\n        temperature = randint(-10, 35)  # Random temperature in Celsius\n        humidity = randint(20, 100)     # Random humidity percentage\n        pressure = randint(950, 1050)   # Random pressure in hPa\n        data.append([current_time.strftime('%Y-%m-%d %H:%M:%S'), temperature, humidity, pressure])\n    \n    # Define the CSV file path\n    csv_file_path = os.path.join(output_dir, 'sensor_data.csv')\n    \n    # Write data to CSV\n    with open(csv_file_path, mode='w', newline='') as file:\n        writer = csv.writer(file)\n        # Write the header\n        writer.writerow(['Time'] + SENSORS)\n        # Write the data rows\n        writer.writerows(data)\n    \n    print(f\"Data for {hours} hours has been written to {csv_file_path}\")",
  "model": "gpt-4o"
}