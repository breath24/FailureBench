{
  "task_id": "BigCodeBench/678",
  "instruct_prompt": "Processes JSON files in a directory. The function reads each JSON file alphabetically into a DataFrame and inserts a \"Source\" column that specifies the filename. The processed files are then moved to a \"processed\" subdirectory. The path may not exist initially.\nThe function should output with:\n    df (pandas.DataFrame): A DataFrame containing the data from all processed files.\nYou should write self-contained code starting with:\n```\nimport pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n```",
  "llm_response": "import pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n    # Ensure the path exists\n    if not os.path.exists(path):\n        raise FileNotFoundError(f\"The directory {path} does not exist.\")\n    \n    # Create a 'processed' subdirectory if it doesn't exist\n    processed_dir = os.path.join(path, 'processed')\n    if not os.path.exists(processed_dir):\n        os.makedirs(processed_dir)\n    \n    # List all JSON files in the directory\n    json_files = [f for f in os.listdir(path) if f.endswith('.json')]\n    json_files.sort()  # Sort files alphabetically\n    \n    # Initialize an empty DataFrame\n    df = pd.DataFrame()\n    \n    # Process each JSON file\n    for json_file in json_files:\n        file_path = os.path.join(path, json_file)\n        \n        # Read the JSON file\n        with open(file_path, 'r') as f:\n            data = json.load(f)\n        \n        # Convert JSON data to a DataFrame\n        temp_df = pd.DataFrame(data)\n        \n        # Add a 'Source' column with the filename\n        temp_df['Source'] = json_file\n        \n        # Append to the main DataFrame\n        df = pd.concat([df, temp_df], ignore_index=True)\n        \n        # Move the processed file to the 'processed' directory\n        shutil.move(file_path, os.path.join(processed_dir, json_file))\n    \n    return df",
  "model": "gpt-4o"
}