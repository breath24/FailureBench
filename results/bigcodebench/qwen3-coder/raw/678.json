{
  "task_id": "BigCodeBench/678",
  "instruct_prompt": "Processes JSON files in a directory. The function reads each JSON file alphabetically into a DataFrame and inserts a \"Source\" column that specifies the filename. The processed files are then moved to a \"processed\" subdirectory. The path may not exist initially.\nThe function should output with:\n    df (pandas.DataFrame): A DataFrame containing the data from all processed files.\nYou should write self-contained code starting with:\n```\nimport pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n```",
  "llm_response": "import pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n    \"\"\"\n    Processes JSON files in a directory. Reads each JSON file alphabetically into a DataFrame,\n    inserts a \"Source\" column with the filename, and moves processed files to a \"processed\" subdirectory.\n    \n    Args:\n        path (str): Path to the directory containing JSON files\n        \n    Returns:\n        df (pandas.DataFrame): A DataFrame containing the data from all processed files\n    \"\"\"\n    # Create processed directory if it doesn't exist\n    processed_dir = os.path.join(path, \"processed\")\n    os.makedirs(processed_dir, exist_ok=True)\n    \n    # Get all JSON files in the directory and sort them alphabetically\n    json_files = sorted([f for f in os.listdir(path) \n                        if f.endswith('.json') and os.path.isfile(os.path.join(path, f))])\n    \n    # List to store DataFrames\n    dataframes = []\n    \n    # Process each JSON file\n    for filename in json_files:\n        file_path = os.path.join(path, filename)\n        \n        # Read JSON file\n        with open(file_path, 'r') as file:\n            data = json.load(file)\n        \n        # Convert to DataFrame\n        if isinstance(data, list):\n            # If data is a list of dictionaries\n            df = pd.DataFrame(data)\n        else:\n            # If data is a single dictionary, convert to single-row DataFrame\n            df = pd.DataFrame([data])\n        \n        # Add Source column\n        df['Source'] = filename\n        \n        # Append to list of DataFrames\n        dataframes.append(df)\n        \n        # Move file to processed directory\n        shutil.move(file_path, os.path.join(processed_dir, filename))\n    \n    # Combine all DataFrames\n    if dataframes:\n        result_df = pd.concat(dataframes, ignore_index=True)\n    else:\n        # Return empty DataFrame with Source column if no files were processed\n        result_df = pd.DataFrame(columns=['Source'])\n    \n    return result_df",
  "model": "qwen3-coder"
}