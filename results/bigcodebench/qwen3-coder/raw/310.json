{
  "task_id": "BigCodeBench/310",
  "instruct_prompt": "Generates a CSV file containing simulated data for 100 people, including name, age, height, and weight. It also calculates and appends the average age, height, and weight at the end of the file.\nThe function should output with:\n    str: The path of the created CSV file.\nYou should write self-contained code starting with:\n```\nimport os\nimport csv\nimport random\nfrom statistics import mean\n# Constants\nCOLUMNS = ['Name', 'Age', 'Height', 'Weight']\nPEOPLE_COUNT = 100\ndef task_func(filename):\n```",
  "llm_response": "import os\nimport csv\nimport random\nfrom statistics import mean\nCOLUMNS = ['Name', 'Age', 'Height', 'Weight']\nPEOPLE_COUNT = 100\ndef task_func(filename):\n    \"\"\"\n    Generates a CSV file containing simulated data for 100 people, including name, age, height, and weight.\n    It also calculates and appends the average age, height, and weight at the end of the file.\n    \n    Args:\n        filename (str): The name of the CSV file to create\n        \n    Returns:\n        str: The path of the created CSV file\n    \"\"\"\n    # Generate simulated data\n    data = []\n    for i in range(PEOPLE_COUNT):\n        name = f\"Person_{i+1}\"\n        age = random.randint(18, 80)\n        height = random.randint(150, 200)  # in cm\n        weight = random.randint(50, 120)   # in kg\n        data.append([name, age, height, weight])\n    \n    # Calculate averages\n    ages = [row[1] for row in data]\n    heights = [row[2] for row in data]\n    weights = [row[3] for row in data]\n    \n    avg_age = mean(ages)\n    avg_height = mean(heights)\n    avg_weight = mean(weights)\n    \n    # Write data to CSV file\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        \n        # Write header\n        writer.writerow(COLUMNS)\n        \n        # Write person data\n        writer.writerows(data)\n        \n        # Write averages\n        writer.writerow(['Average', round(avg_age, 2), round(avg_height, 2), round(avg_weight, 2)])\n    \n    # Return the absolute path of the created file\n    return os.path.abspath(filename)",
  "model": "qwen3-coder"
}