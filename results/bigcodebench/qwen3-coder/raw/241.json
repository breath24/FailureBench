{
  "task_id": "BigCodeBench/241",
  "instruct_prompt": "Create a numeric array from the \"original\" list, normalize the array, and draw the original and normalized arrays. The function will plot the original and normalized arrays with a title of 'Original vs. Normalized Data'.\nThe function should output with:\n    np.array: A numpy array for the original data.\n    np.array: Normalized array.\n    matplotlib.axes.Axes: Axes object with the plotted data.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing\ndef task_func(original):\n```",
  "llm_response": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import preprocessing\ndef task_func(original):\n    \"\"\"\n    Create a numeric array from the original list, normalize it, and plot both arrays.\n    \n    Parameters:\n    original (list): List of numeric values\n    \n    Returns:\n    tuple: (original_array, normalized_array, axes)\n        - np.array: A numpy array for the original data\n        - np.array: Normalized array\n        - matplotlib.axes.Axes: Axes object with the plotted data\n    \"\"\"\n    # Convert original list to numpy array\n    original_array = np.array(original)\n    \n    # Normalize the array using sklearn's MinMaxScaler to range [0, 1]\n    scaler = preprocessing.MinMaxScaler()\n    normalized_array = scaler.fit_transform(original_array.reshape(-1, 1)).flatten()\n    \n    # Create the plot\n    fig, ax = plt.subplots(figsize=(10, 6))\n    \n    # Plot both arrays\n    x_indices = range(len(original_array))\n    ax.plot(x_indices, original_array, marker='o', label='Original', linewidth=2)\n    ax.plot(x_indices, normalized_array, marker='s', label='Normalized', linewidth=2)\n    \n    # Set title and labels\n    ax.set_title('Original vs. Normalized Data')\n    ax.set_xlabel('Index')\n    ax.set_ylabel('Value')\n    ax.legend()\n    ax.grid(True, alpha=0.3)\n    \n    return original_array, normalized_array, ax",
  "model": "qwen3-coder"
}