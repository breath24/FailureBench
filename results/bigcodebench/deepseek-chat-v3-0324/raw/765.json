{
  "task_id": "BigCodeBench/765",
  "instruct_prompt": "Process files from a dictionary by checking if the file exists, and if it has content, then copies it to a target directory.\nThe function should output with:\n    copied_files (list): A list of full file paths that were copied.\nYou should write self-contained code starting with:\n```\nimport os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n```",
  "llm_response": "import os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n    \"\"\"\n    Processes files from a dictionary by checking if the file exists and has content, then copies it to a target directory.\n    \n    Parameters:\n    - kwargs (dict): A dictionary where keys are file paths and values are the content to be checked.\n    - target_dir (str): The target directory where non-empty files will be copied. Defaults to \"non_none_files\".\n    \n    Returns:\n    - list: A list of full file paths that were copied.\n    \n    Example:\n    >>> kwargs = {'/path/to/file1.txt': 'content', '/path/to/nonexistent.txt': None}\n    >>> copied_files = task_func(kwargs)\n    >>> print(copied_files)\n    ['/path/to/file1.txt']\n    \"\"\"\n    copied_files = []\n    # Ensure the target directory exists\n    Path(target_dir).mkdir(parents=True, exist_ok=True)\n    for file_path, content in kwargs.items():\n        if content is not None and os.path.exists(file_path):\n            # Check if the file has content by reading it\n            with open(file_path, 'r') as file:\n                file_content = file.read().strip()\n                if file_content:  # Only proceed if the file has non-whitespace content\n                    target_path = os.path.join(target_dir, os.path.basename(file_path))\n                    shutil.copy2(file_path, target_path)\n                    copied_files.append(target_path)\n    return copied_files",
  "model": "deepseek-chat-v3-0324"
}