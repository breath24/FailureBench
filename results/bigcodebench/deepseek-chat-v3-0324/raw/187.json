{
  "task_id": "BigCodeBench/187",
  "instruct_prompt": "Create a GeoPandas DataFrame for a list of cities with randomly generated coordinates based on specified ranges.\nThe function should raise the exception for: ValueError: If 'Lon' or 'Lat' keys are missing in the dictionary, or if their values are not tuples.\nThe function should output with:\n    GeoDataFrame: A GeoPandas DataFrame containing 'City' and 'Coordinates' (Point objects).\nYou should write self-contained code starting with:\n```\nimport numpy as np\nimport geopandas as gpd\nfrom shapely.geometry import Point\ndef task_func(dic={'Lon': (-180, 180), 'Lat': (-90, 90)}, cities=['New York', 'London', 'Beijing', 'Tokyo', 'Sydney']):\n```",
  "llm_response": "import numpy as np\nimport geopandas as gpd\nfrom shapely.geometry import Point\ndef task_func(dic={'Lon': (-180, 180), 'Lat': (-90, 90)}, cities=['New York', 'London', 'Beijing', 'Tokyo', 'Sydney']):\n    \"\"\"\n    Creates a GeoPandas DataFrame for a list of cities with randomly generated coordinates based on specified ranges.\n\n    Parameters:\n    - dic (dict): A dictionary with keys 'Lon' and 'Lat' where values are tuples specifying the range for longitude and latitude.\n                  Default is {'Lon': (-180, 180), 'Lat': (-90, 90)}.\n    - cities (list): A list of city names. Default is ['New York', 'London', 'Beijing', 'Tokyo', 'Sydney'].\n\n    Returns:\n    - GeoDataFrame: A GeoPandas DataFrame containing 'City' and 'Coordinates' (Point objects).\n\n    Raises:\n    - ValueError: If 'Lon' or 'Lat' keys are missing in the dictionary, or if their values are not tuples.\n    \"\"\"\n    # Check if 'Lon' and 'Lat' are present in the dictionary and their values are tuples\n    if 'Lon' not in dic or 'Lat' not in dic:\n        raise ValueError(\"Dictionary must contain 'Lon' and 'Lat' keys.\")\n    if not isinstance(dic['Lon'], tuple) or not isinstance(dic['Lat'], tuple):\n        raise ValueError(\"Values for 'Lon' and 'Lat' must be tuples.\")\n    \n    # Generate random coordinates within the specified ranges\n    lon_min, lon_max = dic['Lon']\n    lat_min, lat_max = dic['Lat']\n    np.random.seed(42)  # For reproducibility\n    longitudes = np.random.uniform(lon_min, lon_max, len(cities))\n    latitudes = np.random.uniform(lat_min, lat_max, len(cities))\n    \n    # Create Point objects for each city\n    geometry = [Point(lon, lat) for lon, lat in zip(longitudes, latitudes)]\n    \n    # Create a GeoDataFrame\n    gdf = gpd.GeoDataFrame({'City': cities, 'Coordinates': geometry}, geometry='Coordinates')\n    \n    return gdf",
  "model": "deepseek-chat-v3-0324"
}