{
  "task_id": "BigCodeBench/857",
  "instruct_prompt": "Transfer files from one directory (SOURCE_DIR) to another (DEST_DIR) based on the specified file extensions (EXTENSIONS). It also issues warnings for files that could not be transferred due to any issues.\nThe function should output with:\n    transferred_files (list): A list containing the names of files that were successfully transferred.\nYou should write self-contained code starting with:\n```\nimport warnings\nimport os\nimport glob\nimport shutil\nimport time\ndef task_func(SOURCE_DIR, DEST_DIR, EXTENSIONS):\n```",
  "llm_response": "import warnings\nimport os\nimport glob\nimport shutil\nimport time\ndef task_func(SOURCE_DIR, DEST_DIR, EXTENSIONS):\n    \"\"\"\n    Transfers files from SOURCE_DIR to DEST_DIR based on specified file extensions.\n    \n    Args:\n    SOURCE_DIR (str): The source directory path from which files are to be transferred.\n    DEST_DIR (str): The destination directory path to which files are to be transferred.\n    EXTENSIONS (list): A list of file extensions (e.g., ['.txt', '.jpg']) to be transferred.\n    \n    Returns:\n    list: A list of filenames that were successfully transferred.\n    \n    Raises:\n    ValueError: If SOURCE_DIR or DEST_DIR does not exist.\n    \"\"\"\n    transferred_files = []\n    # Check if source and destination directories exist\n    if not os.path.exists(SOURCE_DIR):\n        raise ValueError(f\"Source directory does not exist: {SOURCE_DIR}\")\n    if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n    # Iterate over each extension and move matching files\n    for extension in EXTENSIONS:\n        pattern = os.path.join(SOURCE_DIR, '*' + extension)\n        for file_path in glob.glob(pattern):\n            try:\n                file_name = os.path.basename(file_path)\n                dest_path = os.path.join(DEST_DIR, file_name)\n                shutil.move(file_path, dest_path)\n                transferred_files.append(file_name)\n            except Exception as e:\n                warnings.warn(f\"Failed to transfer {file_path}: {str(e)}\")\n    return transferred_files",
  "model": "deepseek-chat-v3-0324"
}