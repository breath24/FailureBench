{
  "task_id": "BigCodeBench/324",
  "instruct_prompt": "Run files from list of files as subprocesses at the same time.\nThe function should output with:\n    list: The exit codes of the subprocesses.\nYou should write self-contained code starting with:\n```\nimport subprocess\nimport time\nimport threading\ndef task_func(file_list):\n```",
  "llm_response": "import subprocess\nimport time\nimport threading\ndef task_func(file_list):\n    \"\"\"\n    Run multiple files as subprocesses concurrently and return their exit codes.\n    \n    Args:\n        file_list (list): A list of file paths to be executed as subprocesses.\n        \n    Returns:\n        list: A list of exit codes corresponding to each subprocess in the input file_list.\n    \"\"\"\n    exit_codes = [None] * len(file_list)\n    \n    def run_subprocess(index, file_path):\n        try:\n            process = subprocess.run(file_path, shell=True)\n            exit_codes[index] = process.returncode\n        except Exception as e:\n            exit_codes[index] = -1  # Using -1 to indicate execution failure\n    \n    threads = []\n    for i, file_path in enumerate(file_list):\n        thread = threading.Thread(target=run_subprocess, args=(i, file_path))\n        thread.start()\n        threads.append(thread)\n    \n    for thread in threads:\n        thread.join()\n    \n    return exit_codes",
  "model": "deepseek-chat-v3-0324"
}