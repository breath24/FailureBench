{
  "task_id": "BigCodeBench/654",
  "instruct_prompt": "Fit an exponential decay function to the indices in the array where the first column matches the target value.\nThe function should output with:\n    tuple: Containing the optimized parameters of the fitting function (popt) and the matplotlib Axes object.\nYou should write self-contained code starting with:\n```\nimport matplotlib.pyplot as plt\nimport scipy.optimize as optimize\nimport numpy as np\ndef task_func(array, target_value):\n```",
  "llm_response": "import matplotlib.pyplot as plt\nimport scipy.optimize as optimize\nimport numpy as np\ndef task_func(array, target_value):\n    \"\"\"\n    Fit an exponential decay function to the indices in the array where the first column matches the target value.\n    \n    Parameters:\n    - array (numpy.ndarray): A 2D numpy array where the first column contains the target values.\n    - target_value (float): The value to match in the first column of the array.\n    \n    Returns:\n    - tuple: A tuple containing:\n        - popt (numpy.ndarray): Optimized parameters of the fitting function (a, b, c for a * exp(-b * x) + c).\n        - ax (matplotlib.axes.Axes): The matplotlib Axes object with the plot of data and fitted curve.\n    \"\"\"\n    # Filter rows where the first column matches the target value\n    matched_rows = array[array[:, 0] == target_value]\n    y_data = matched_rows[:, 1] if matched_rows.size > 0 else np.array([])\n    x_data = np.arange(len(y_data))\n    \n    if len(y_data) == 0:\n        raise ValueError(\"No data points match the target value.\")\n    \n    # Define the exponential decay function\n    def exp_decay(x, a, b, c):\n        return a * np.exp(-b * x) + c\n    \n    # Initial guess for the parameters [a, b, c]\n    initial_guess = [1.0, 0.1, 0.0]\n    \n    # Fit the curve\n    popt, _ = optimize.curve_fit(exp_decay, x_data, y_data, p0=initial_guess)\n    \n    # Create the plot\n    fig, ax = plt.subplots()\n    ax.scatter(x_data, y_data, label='Data')\n    ax.plot(x_data, exp_decay(x_data, *popt), 'r-', label='Fit: a=%5.3f, b=%5.3f, c=%5.3f' % tuple(popt))\n    ax.set_xlabel('Index')\n    ax.set_ylabel('Value')\n    ax.set_title('Exponential Decay Fit')\n    ax.legend()\n    \n    return popt, ax",
  "model": "deepseek-chat-v3-0324"
}