{
  "task_id": "BigCodeBench/720",
  "instruct_prompt": "Create and delete a CSV file \"task_func_data/Output.txt\" with sensor data for temperature and humidity. The data is generated randomly, written in append mode, and the file is deleted after use.\nThe function should output with:\n    Returns the path to the CSV file \"task_func_data/Output.txt\" before deletion.\nYou should write self-contained code starting with:\n```\nimport os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n```",
  "llm_response": "import os\nimport csv\nimport random\nfrom datetime import datetime\ndef task_func():\n    \"\"\"\n    Creates a CSV file 'task_func_data/Output.txt' with randomly generated temperature and humidity data,\n    appends the data to the file, returns the file path, and then deletes the file.\n\n    Returns:\n        str: The path to the CSV file 'task_func_data/Output.txt' before deletion.\n    \"\"\"\n    # Ensure the directory exists\n    os.makedirs('task_func_data', exist_ok=True)\n    file_path = os.path.join('task_func_data', 'Output.txt')\n    \n    # Generate random sensor data\n    temperature = round(random.uniform(20.0, 30.0), 2)\n    humidity = round(random.uniform(40.0, 60.0), 2)\n    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    \n    # Write data to the CSV file in append mode\n    with open(file_path, 'a', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow([timestamp, temperature, humidity])\n    \n    # Return the file path before deletion\n    result = file_path\n    \n    # Delete the file after use\n    if os.path.exists(file_path):\n        os.remove(file_path)\n    \n    return result",
  "model": "deepseek-chat-v3-0324"
}