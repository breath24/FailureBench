{
  "task_id": "BigCodeBench/678",
  "instruct_prompt": "Processes JSON files in a directory. The function reads each JSON file alphabetically into a DataFrame and inserts a \"Source\" column that specifies the filename. The processed files are then moved to a \"processed\" subdirectory. The path may not exist initially.\nThe function should output with:\n    df (pandas.DataFrame): A DataFrame containing the data from all processed files.\nYou should write self-contained code starting with:\n```\nimport pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n```",
  "llm_response": "import pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n    \"\"\"\n    Processes all JSON files in the specified directory by reading them into a DataFrame,\n    adding a 'Source' column with the filename, and moving processed files to a 'processed' subdirectory.\n    \n    Parameters:\n    path (str): The path to the directory containing JSON files to process.\n    \n    Returns:\n    pandas.DataFrame: A DataFrame containing the combined data from all JSON files with an added 'Source' column.\n    \n    Requirements:\n    - pandas\n    - json\n    - os\n    - shutil\n    \n    Example:\n    >>> df = task_func('/path/to/json/files')\n    >>> print(df.head())\n    \"\"\"\n    # Create the processed directory if it doesn't exist\n    processed_dir = os.path.join(path, 'processed')\n    if not os.path.exists(processed_dir):\n        os.makedirs(processed_dir)\n    \n    # Initialize an empty list to hold all data\n    all_data = []\n    \n    # Get all JSON files in the directory and sort them alphabetically\n    json_files = sorted([f for f in os.listdir(path) if f.endswith('.json')])\n    \n    for json_file in json_files:\n        file_path = os.path.join(path, json_file)\n        \n        # Read JSON file\n        with open(file_path, 'r') as f:\n            data = json.load(f)\n        \n        # Convert to DataFrame and add Source column\n        if isinstance(data, list):\n            df = pd.DataFrame(data)\n        else:  # handle case where JSON is a single dictionary\n            df = pd.DataFrame([data])\n        df['Source'] = json_file\n        \n        # Append to the list\n        all_data.append(df)\n        \n        # Move the processed file\n        shutil.move(file_path, os.path.join(processed_dir, json_file))\n    \n    # Combine all DataFrames if any files were processed\n    if all_data:\n        result_df = pd.concat(all_data, ignore_index=True)\n    else:\n        result_df = pd.DataFrame()\n    \n    return result_df",
  "model": "deepseek-chat-v3-0324"
}