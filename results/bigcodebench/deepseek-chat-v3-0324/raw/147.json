{
  "task_id": "BigCodeBench/147",
  "instruct_prompt": "Scans a specified IP address range and checks if a specified port is open on each IP. The function returns a dictionary with IP addresses as keys and a boolean indicating the port's status (True if open, False otherwise).\nThe function should output with:\n    dict: A dictionary mapping IP addresses to their port status (True if open).\nYou should write self-contained code starting with:\n```\nimport socket\nfrom ipaddress import IPv4Network\nfrom threading import Thread\ndef task_func(ip_range, port):\n```",
  "llm_response": "import socket\nfrom ipaddress import IPv4Network\nfrom threading import Thread\nimport threading\ndef task_func(ip_range, port):\n    \"\"\"\n    Scans a range of IP addresses to check if a specified port is open on each IP.\n    \n    Parameters\n    ----------\n    ip_range : str\n        The IP range in CIDR notation (e.g., '192.168.1.0/24').\n    port : int\n        The port number to check.\n        \n    Returns\n    -------\n    dict\n        A dictionary where keys are IP addresses (str) and values are booleans indicating if the port is open (True) or not (False).\n        \n    Notes\n    -----\n    The function uses threading to parallelize the scan for efficiency.\n    \"\"\"\n    result = {}\n    threads = []\n    lock = threading.Lock()\n    \n    def check_port(ip, port):\n        try:\n            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n                s.settimeout(1)\n                if s.connect_ex((str(ip), port)) == 0:\n                    with lock:\n                        result[str(ip)] = True\n                else:\n                    with lock:\n                        result[str(ip)] = False\n        except:\n            with lock:\n                result[str(ip)] = False\n    \n    for ip in IPv4Network(ip_range):\n        thread = Thread(target=check_port, args=(ip, port))\n        threads.append(thread)\n        thread.start()\n    \n    for thread in threads:\n        thread.join()\n    \n    return result",
  "model": "deepseek-chat-v3-0324"
}