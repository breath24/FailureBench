{
  "task_id": "BigCodeBench/326",
  "instruct_prompt": "Find and run all .bat files in a given directory, returning their file names and exit codes.\nThe function should output with:\n    list of tuples: A list where each tuple contains the file name and its exit code.\n    The exit code is None if the file could not be executed.\nYou should write self-contained code starting with:\n```\nimport subprocess\nimport os\nimport sys\nimport glob\ndef task_func(directory_path):\n```",
  "llm_response": "import subprocess\nimport os\nimport sys\nimport glob\ndef task_func(directory_path):\n    \"\"\"\n    Find and run all .bat files in a given directory, returning their file names and exit codes.\n\n    Parameters:\n    - directory_path (str): The path to the directory to search for .bat files.\n\n    Returns:\n    - list of tuples: A list where each tuple contains the file name and its exit code.\n                      The exit code is None if the file could not be executed.\n    \"\"\"\n    if not os.path.isdir(directory_path):\n        raise ValueError(f\"The directory {directory_path} does not exist.\")\n    bat_files = glob.glob(os.path.join(directory_path, '*.bat'))\n    results = []\n    for bat_file in bat_files:\n        try:\n            process = subprocess.Popen(bat_file, shell=True)\n            process.communicate()  # Wait for the process to complete\n            exit_code = process.returncode\n        except Exception as e:\n            exit_code = None\n        results.append((os.path.basename(bat_file), exit_code))\n    return results",
  "model": "deepseek-chat-v3-0324"
}