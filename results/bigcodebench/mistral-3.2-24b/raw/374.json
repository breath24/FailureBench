{
  "task_id": "BigCodeBench/374",
  "instruct_prompt": "Protects all double quotes in all Excel (.xlsx) files in the specified directory by prefixing them with a double backslash.\nThe function should output with:\n    int: The number of Excel files processed.\nYou should write self-contained code starting with:\n```\nimport regex as re\nimport glob\nimport os\nfrom openpyxl import load_workbook\ndef task_func(directory_path='./xlsx_files/'):\n```",
  "llm_response": "import regex as re\nimport glob\nimport os\nfrom openpyxl import load_workbook\ndef task_func(directory_path='./xlsx_files/'):\n    \"\"\"\n    Protects all double quotes in all Excel (.xlsx) files in the specified directory\n    by prefixing them with a double backslash.\n\n    Args:\n        directory_path (str): Path to the directory containing .xlsx files.\n                             Defaults to './xlsx_files/'.\n\n    Returns:\n        int: The number of Excel files processed.\n    \"\"\"\n    # Count of processed files\n    processed_files = 0\n\n    # Ensure the directory exists\n    if not os.path.isdir(directory_path):\n        os.makedirs(directory_path)\n        return 0\n\n    # Find all .xlsx files in the directory\n    xlsx_files = glob.glob(os.path.join(directory_path, '*.xlsx'))\n\n    for file_path in xlsx_files:\n        try:\n            # Load the workbook\n            wb = load_workbook(filename=file_path)\n\n            # Iterate through all sheets\n            for sheet in wb.worksheets:\n                # Iterate through all cells in the sheet\n                for row in sheet.iter_rows():\n                    for cell in row:\n                        if cell.value is not None:\n                            # Replace double quotes with escaped double quotes\n                            if isinstance(cell.value, str):\n                                new_value = re.sub(r'(?<!\\\\)\"', r'\\\\\"', cell.value)\n                                if new_value != cell.value:\n                                    cell.value = new_value\n\n            # Save the modified workbook\n            wb.save(filename=file_path)\n            processed_files += 1\n\n        except Exception as e:\n            print(f\"Error processing file {file_path}: {str(e)}\")\n\n    return processed_files",
  "model": "mistral-3.2-24b"
}