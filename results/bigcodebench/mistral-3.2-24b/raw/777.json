{
  "task_id": "BigCodeBench/777",
  "instruct_prompt": "Unzip all zip files in a directory whose name matches a certain pattern by splitting the filename the last time \"-\" occurs and using the prefix part of the filename as the directory to extract.\nThe function should output with:\n    list: A list of directories where the files were extracted.\nYou should write self-contained code starting with:\n```\nimport re\nimport os\nimport zipfile\ndef task_func(directory, pattern=r'^(.*?)-\\d+\\.zip$'):\n```",
  "llm_response": "import re\nimport os\nimport zipfile\ndef task_func(directory, pattern=r'^(.*?)-\\d+\\.zip$'):\n    \"\"\"\n    Unzip all zip files in a directory whose name matches a certain pattern.\n    The files are extracted into directories named after the prefix part of the filename\n    (split at the last occurrence of '-').\n\n    Args:\n        directory (str): Path to the directory containing zip files\n        pattern (str): Regular expression pattern to match zip filenames\n\n    Returns:\n        list: A list of directories where the files were extracted\n    \"\"\"\n    extracted_dirs = []\n\n    # Verify the directory exists\n    if not os.path.isdir(directory):\n        raise ValueError(f\"Directory does not exist: {directory}\")\n\n    # Compile the pattern for matching\n    regex = re.compile(pattern)\n\n    # Iterate through all files in the directory\n    for filename in os.listdir(directory):\n        filepath = os.path.join(directory, filename)\n\n        # Skip directories and non-zip files\n        if not os.path.isfile(filepath) or not zipfile.is_zipfile(filepath):\n            continue\n\n        # Check if filename matches the pattern\n        match = regex.match(filename)\n        if not match:\n            continue\n\n        # Extract the prefix part of the filename\n        prefix = match.group(1)\n        extract_dir = os.path.join(directory, prefix)\n\n        # Create the extraction directory if it doesn't exist\n        os.makedirs(extract_dir, exist_ok=True)\n\n        # Extract the zip file\n        with zipfile.ZipFile(filepath, 'r') as zip_ref:\n            zip_ref.extractall(extract_dir)\n\n        # Add to the list of extracted directories\n        extracted_dirs.append(extract_dir)\n\n    return extracted_dirs",
  "model": "mistral-3.2-24b"
}