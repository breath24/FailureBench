{
  "task_id": "BigCodeBench/592",
  "instruct_prompt": "Create sensor data for the specified number of hours and save it in a CSV file with coloumns 'Time', 'Temperature', 'Humidity' and 'Pressure'.\nThe function should output with:\n    hours (int): Number of hours to generate data for.\nYou should write self-contained code starting with:\n```\nimport csv\nimport os\nfrom datetime import datetime\nfrom random import randint\n# Constants\nSENSORS = ['Temperature', 'Humidity', 'Pressure']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n```",
  "llm_response": "import csv\nimport os\nfrom datetime import datetime, timedelta\nfrom random import randint, uniform\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n    \"\"\"\n    Generate sensor data for a specified number of hours and save to CSV.\n\n    Args:\n        hours (int): Number of hours to generate data for.\n        output_dir (str): Directory to save the output file (default: './output').\n    \"\"\"\n    # Create output directory if it doesn't exist\n    os.makedirs(output_dir, exist_ok=True)\n\n    # Generate a timestamp for the filename\n    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n    filename = os.path.join(output_dir, f\"sensor_data_{timestamp}.csv\")\n\n    # Calculate the number of data points (one per minute)\n    num_points = hours * 60\n\n    # Generate data\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n\n        # Write header\n        writer.writerow(['Time', 'Temperature', 'Humidity', 'Pressure'])\n\n        # Start time\n        start_time = datetime.now()\n\n        for i in range(num_points):\n            # Calculate current time\n            current_time = start_time + timedelta(minutes=i)\n\n            # Generate random sensor values with some realistic variation\n            temperature = round(20 + uniform(-1.5, 1.5), 2)  # 20\u00b0C \u00b11.5\u00b0C\n            humidity = round(50 + uniform(-5, 5), 2)        # 50% \u00b15%\n            pressure = round(1013 + uniform(-5, 5), 2)      # 1013 hPa \u00b15 hPa\n\n            # Write row\n            writer.writerow([\n                current_time.strftime(\"%Y-%m-%d %H:%M:%S\"),\n                temperature,\n                humidity,\n                pressure\n            ])\n\n    print(f\"Successfully generated {num_points} data points in {filename}\")",
  "model": "mistral-3.2-24b"
}