{
  "task_id": "BigCodeBench/657",
  "instruct_prompt": "Generate word vectors from a list of texts using the gensim Word2Vec model and nltk.corpus.stopwords. The texts are first cleaned by removing all non-alphanumeric characters except space, lowercased, and stop words are removed.\nThe function should output with:\n    Word2Vec: A trained Word2Vec model.\nYou should write self-contained code starting with:\n```\nimport re\nimport nltk\nfrom gensim.models import Word2Vec\n# Constants\nALPHANUMERIC = re.compile('[\\W_]+')\ndef task_func(texts, stopwords=None):\n```",
  "llm_response": "import re\nimport nltk\nfrom gensim.models import Word2Vec\nALPHANUMERIC = re.compile('[\\W_]+')\ndef task_func(texts, stopwords=None):\n    \"\"\"\n    Generate word vectors from a list of texts using Word2Vec model.\n\n    Args:\n        texts: List of text strings to process\n        stopwords: Optional list of stopwords to remove. If None, uses nltk.corpus.stopwords\n\n    Returns:\n        A trained Word2Vec model\n    \"\"\"\n    # Download NLTK stopwords if not already present\n    try:\n        nltk.data.find('corpora/stopwords')\n    except LookupError:\n        nltk.download('stopwords')\n\n    # Use provided stopwords or default to English stopwords\n    if stopwords is None:\n        stopwords = set(nltk.corpus.stopwords.words('english'))\n\n    # Preprocess each text\n    processed_texts = []\n    for text in texts:\n        # Remove non-alphanumeric characters (keep spaces)\n        cleaned = ALPHANUMERIC.sub(' ', text)\n        # Lowercase and split into words\n        words = cleaned.lower().split()\n        # Remove stopwords\n        filtered_words = [word for word in words if word not in stopwords]\n        processed_texts.append(filtered_words)\n\n    # Train Word2Vec model\n    model = Word2Vec(\n        sentences=processed_texts,\n        vector_size=100,  # Dimension of word vectors\n        window=5,        # Context window size\n        min_count=1,     # Ignore words with frequency lower than this\n        workers=4        # Number of worker threads\n    )\n\n    return model",
  "model": "mistral-3.2-24b"
}