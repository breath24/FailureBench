{
  "task_id": "BigCodeBench/678",
  "instruct_prompt": "Processes JSON files in a directory. The function reads each JSON file alphabetically into a DataFrame and inserts a \"Source\" column that specifies the filename. The processed files are then moved to a \"processed\" subdirectory. The path may not exist initially.\nThe function should output with:\n    df (pandas.DataFrame): A DataFrame containing the data from all processed files.\nYou should write self-contained code starting with:\n```\nimport pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n```",
  "llm_response": "import pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n    \"\"\"\n    Processes JSON files in a directory. Reads each JSON file alphabetically into a DataFrame \n    and inserts a \"Source\" column that specifies the filename. The processed files are then \n    moved to a \"processed\" subdirectory.\n    \n    Args:\n        path (str): The directory path containing JSON files to process\n        \n    Returns:\n        pandas.DataFrame: A DataFrame containing the data from all processed files\n    \"\"\"\n    # Check if the path exists\n    if not os.path.exists(path):\n        return pd.DataFrame()\n    \n    # Create processed subdirectory if it doesn't exist\n    processed_dir = os.path.join(path, \"processed\")\n    os.makedirs(processed_dir, exist_ok=True)\n    \n    # Get all JSON files in the directory and sort them alphabetically\n    json_files = [f for f in os.listdir(path) if f.endswith('.json')]\n    json_files.sort()\n    \n    # List to store all DataFrames\n    all_dataframes = []\n    \n    # Process each JSON file\n    for filename in json_files:\n        file_path = os.path.join(path, filename)\n        \n        try:\n            # Read JSON file\n            with open(file_path, 'r', encoding='utf-8') as file:\n                data = json.load(file)\n            \n            # Convert to DataFrame\n            if isinstance(data, list):\n                df = pd.DataFrame(data)\n            elif isinstance(data, dict):\n                df = pd.DataFrame([data])\n            else:\n                # Handle other data types by creating a single-row DataFrame\n                df = pd.DataFrame([{'data': data}])\n            \n            # Add Source column with filename\n            df['Source'] = filename\n            \n            # Add to list of DataFrames\n            all_dataframes.append(df)\n            \n            # Move file to processed directory\n            destination = os.path.join(processed_dir, filename)\n            shutil.move(file_path, destination)\n            \n        except (json.JSONDecodeError, IOError, Exception) as e:\n            # Skip files that can't be processed\n            print(f\"Warning: Could not process file {filename}: {e}\")\n            continue\n    \n    # Combine all DataFrames\n    if all_dataframes:\n        result_df = pd.concat(all_dataframes, ignore_index=True)\n    else:\n        result_df = pd.DataFrame()\n    \n    return result_df",
  "model": "claude-sonnet-4"
}