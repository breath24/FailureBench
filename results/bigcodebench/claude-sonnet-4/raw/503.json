{
  "task_id": "BigCodeBench/503",
  "instruct_prompt": "Create a DataFrame of stock prices for a specified number of days in the past using random data.\nThe function should output with:\n    DataFrame: A pandas DataFrame containing random stock prices for the specified number of days.\n    Prices are floats in [0.0,1.0).\nYou should write self-contained code starting with:\n```\nimport numpy as np\nimport pandas as pd\nfrom datetime import datetime\ndef task_func(\n    days_in_past=7, stock_names=[\"AAPL\", \"GOOGL\", \"MSFT\", \"AMZN\", \"FB\"], random_seed=0\n):\n```",
  "llm_response": "import numpy as np\nimport pandas as pd\nfrom datetime import datetime, timedelta\ndef task_func(\n    days_in_past=7, stock_names=[\"AAPL\", \"GOOGL\", \"MSFT\", \"AMZN\", \"FB\"], random_seed=0\n):\n    \"\"\"\n    Create a DataFrame of stock prices for a specified number of days in the past using random data.\n    \n    Parameters:\n    days_in_past (int): Number of days in the past to generate data for\n    stock_names (list): List of stock symbols to generate prices for\n    random_seed (int): Seed for random number generation for reproducibility\n    \n    Returns:\n    DataFrame: A pandas DataFrame containing random stock prices for the specified number of days.\n               Prices are floats in [0.0,1.0).\n    \"\"\"\n    # Set random seed for reproducibility\n    np.random.seed(random_seed)\n    \n    # Generate date range for the past days\n    end_date = datetime.now().date()\n    start_date = end_date - timedelta(days=days_in_past - 1)\n    date_range = pd.date_range(start=start_date, end=end_date, freq='D')\n    \n    # Generate random stock prices in range [0.0, 1.0)\n    num_stocks = len(stock_names)\n    num_days = len(date_range)\n    \n    # Create random price data\n    price_data = np.random.random((num_days, num_stocks))\n    \n    # Create DataFrame\n    df = pd.DataFrame(price_data, columns=stock_names, index=date_range)\n    df.index.name = 'Date'\n    \n    return df",
  "model": "claude-sonnet-4"
}