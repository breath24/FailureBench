{
  "task_id": "BigCodeBench/287",
  "instruct_prompt": "Count the number of words in .txt files within a specified directory, export the counts to a JSON file, and then return the total number of words.\nThe function should output with:\n    int: total number of words in .txt files\nYou should write self-contained code starting with:\n```\nfrom collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n```",
  "llm_response": "from collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n    \"\"\"\n    Count the number of words in .txt files within a specified directory,\n    export the counts to a JSON file, and return the total number of words.\n    \n    Args:\n        filename (str): The name of the JSON file to export word counts to\n        directory (str): The directory path to search for .txt files\n    \n    Returns:\n        int: total number of words in .txt files\n    \"\"\"\n    word_counts = {}\n    total_words = 0\n    \n    # Check if directory exists\n    if not os.path.exists(directory):\n        # Export empty results to JSON file\n        with open(filename, 'w') as json_file:\n            json.dump(word_counts, json_file, indent=2)\n        return 0\n    \n    # Iterate through all files in the directory\n    for file in os.listdir(directory):\n        if file.endswith('.txt'):\n            file_path = os.path.join(directory, file)\n            try:\n                with open(file_path, 'r', encoding='utf-8') as txt_file:\n                    content = txt_file.read()\n                    # Split content into words and count them\n                    words = content.split()\n                    word_count = len(words)\n                    word_counts[file] = word_count\n                    total_words += word_count\n            except (IOError, UnicodeDecodeError):\n                # Handle file reading errors by setting count to 0\n                word_counts[file] = 0\n    \n    # Export word counts to JSON file\n    with open(filename, 'w') as json_file:\n        json.dump(word_counts, json_file, indent=2)\n    \n    return total_words",
  "model": "claude-sonnet-4"
}