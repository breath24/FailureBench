{
  "task_id": "BigCodeBench/177",
  "instruct_prompt": "Extracts articles whose titles contain specific case-insensitive keywords (\"like\" or \"what\") from a DataFrame and analyzes the frequency of each word in the content of these articles, excluding punctuation.\nThe function should raise the exception for: ValueError: If the DataFrame is empty or does not contain the necessary columns 'Title' and 'Content'.\nThe function should output with:\n    dict: A dictionary with keys as words and values as their corresponding frequency, excluding any punctuation marks.\nYou should write self-contained code starting with:\n```\nimport re\nimport nltk\nfrom string import punctuation\ndef task_func(df):\n```",
  "llm_response": "import re\nimport nltk\nfrom string import punctuation\nimport pandas as pd\ndef task_func(df):\n    \"\"\"\n    Extracts articles whose titles contain specific case-insensitive keywords (\"like\" or \"what\") \n    from a DataFrame and analyzes the frequency of each word in the content of these articles, \n    excluding punctuation.\n    \n    Args:\n        df (pandas.DataFrame): DataFrame containing articles with 'Title' and 'Content' columns\n        \n    Returns:\n        dict: A dictionary with keys as words and values as their corresponding frequency, \n              excluding any punctuation marks.\n              \n    Raises:\n        ValueError: If the DataFrame is empty or does not contain the necessary columns \n                   'Title' and 'Content'.\n    \"\"\"\n    # Check if DataFrame is empty\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    \n    # Check if required columns exist\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        raise ValueError(\"DataFrame does not contain the necessary columns 'Title' and 'Content'\")\n    \n    # Filter articles whose titles contain \"like\" or \"what\" (case-insensitive)\n    pattern = r'\\b(?:like|what)\\b'\n    filtered_df = df[df['Title'].str.contains(pattern, case=False, regex=True, na=False)]\n    \n    # Initialize word frequency dictionary\n    word_freq = {}\n    \n    # Process content of filtered articles\n    for content in filtered_df['Content']:\n        if pd.isna(content):\n            continue\n            \n        # Convert to lowercase and remove punctuation\n        content_clean = content.lower()\n        \n        # Remove punctuation using regex\n        content_clean = re.sub(r'[^\\w\\s]', ' ', content_clean)\n        \n        # Split into words\n        words = content_clean.split()\n        \n        # Count word frequencies\n        for word in words:\n            word = word.strip()\n            if word:  # Skip empty strings\n                word_freq[word] = word_freq.get(word, 0) + 1\n    \n    return word_freq",
  "model": "claude-sonnet-4"
}