{
  "task_id": "BigCodeBench/765",
  "instruct_prompt": "Process files from a dictionary by checking if the file exists, and if it has content, then copies it to a target directory.\nThe function should output with:\n    copied_files (list): A list of full file paths that were copied.\nYou should write self-contained code starting with:\n```\nimport os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n```",
  "llm_response": "import os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n    \"\"\"\n    Process files from a dictionary by checking if the file exists, and if it has content, \n    then copies it to a target directory.\n    \n    Args:\n        kwargs (dict): Dictionary containing file paths as values\n        target_dir (str): Target directory to copy files to\n    \n    Returns:\n        copied_files (list): A list of full file paths that were copied\n    \"\"\"\n    copied_files = []\n    \n    # Create target directory if it doesn't exist\n    target_path = Path(target_dir)\n    target_path.mkdir(parents=True, exist_ok=True)\n    \n    # Process each file path in the dictionary\n    for key, file_path in kwargs.items():\n        if file_path is None:\n            continue\n            \n        source_path = Path(file_path)\n        \n        # Check if file exists\n        if not source_path.exists() or not source_path.is_file():\n            continue\n            \n        # Check if file has content (size > 0)\n        if source_path.stat().st_size == 0:\n            continue\n            \n        # Copy file to target directory\n        try:\n            destination_path = target_path / source_path.name\n            shutil.copy2(source_path, destination_path)\n            copied_files.append(str(destination_path.absolute()))\n        except Exception as e:\n            # Skip files that can't be copied\n            continue\n    \n    return copied_files",
  "model": "claude-sonnet-4"
}