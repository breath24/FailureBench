{
  "task_id": "BigCodeBench/763",
  "instruct_prompt": "Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\nThe function should output with:\n    dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n# Constants\ndef task_func(input_file, output_file):\n```",
  "llm_response": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\ndef task_func(input_file, output_file):\n    \"\"\"\n    Read a list of dictionaries from a JSON file, calculate the mean and median for each key,\n    and write the results to a CSV file.\n    \n    Args:\n        input_file (str): Path to the input JSON file\n        output_file (str): Path to the output CSV file\n    \n    Returns:\n        dict: A dictionary where each key is a field from the input JSON and each value is \n              another dictionary with the mean and median of that field.\n    \"\"\"\n    # Read JSON data\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    \n    # Group values by key\n    key_values = defaultdict(list)\n    \n    # Extract all numeric values for each key\n    for item in data:\n        for key, value in item.items():\n            # Only process numeric values\n            if isinstance(value, (int, float)):\n                key_values[key].append(value)\n    \n    # Calculate statistics\n    results = {}\n    for key, values in key_values.items():\n        if values:  # Only calculate if we have values\n            mean_val = np.mean(values)\n            median_val = np.median(values)\n            results[key] = {\n                'mean': mean_val,\n                'median': median_val\n            }\n    \n    # Write results to CSV\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        # Write header\n        writer.writerow(['field', 'mean', 'median'])\n        # Write data\n        for key, stats in results.items():\n            writer.writerow([key, stats['mean'], stats['median']])\n    \n    return results",
  "model": "claude-sonnet-4"
}