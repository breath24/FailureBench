{
  "task_id": "BigCodeBench/1085",
  "instruct_prompt": "Analyzes the frequency of words in a given text after lowercasing, removing punctuation, splitting into words, and plots the top 10 most common words.\nThe function should output with:\n    list: A list of tuples containing the 10 most common words and their counts.\n    Axes: The matplotlib Axes object of the bar chart.\nYou should write self-contained code starting with:\n```\nimport re\nfrom collections import Counter\nimport matplotlib.pyplot as plt\ndef task_func(text):\n```",
  "llm_response": "import re\nfrom collections import Counter\nimport matplotlib.pyplot as plt\ndef task_func(text):\n    \"\"\"\n    Analyzes the frequency of words in a given text after lowercasing, removing punctuation, \n    splitting into words, and plots the top 10 most common words.\n    \n    Args:\n        text (str): The input text to analyze\n        \n    Returns:\n        tuple: A tuple containing:\n            - list: A list of tuples containing the 10 most common words and their counts\n            - Axes: The matplotlib Axes object of the bar chart\n    \"\"\"\n    # Convert to lowercase\n    text = text.lower()\n    \n    # Remove punctuation using regex (keep only letters, numbers, and spaces)\n    text = re.sub(r'[^a-zA-Z0-9\\s]', '', text)\n    \n    # Split into words\n    words = text.split()\n    \n    # Count word frequencies\n    word_counts = Counter(words)\n    \n    # Get top 10 most common words\n    top_10 = word_counts.most_common(10)\n    \n    # Create the plot\n    if top_10:  # Only plot if there are words\n        words_list = [word for word, count in top_10]\n        counts_list = [count for word, count in top_10]\n        \n        fig, ax = plt.subplots(figsize=(12, 6))\n        bars = ax.bar(words_list, counts_list)\n        \n        # Customize the plot\n        ax.set_xlabel('Words')\n        ax.set_ylabel('Frequency')\n        ax.set_title('Top 10 Most Common Words')\n        ax.tick_params(axis='x', rotation=45)\n        \n        # Add value labels on top of bars\n        for bar, count in zip(bars, counts_list):\n            ax.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 0.1,\n                   str(count), ha='center', va='bottom')\n        \n        plt.tight_layout()\n    else:\n        # Create empty plot if no words found\n        fig, ax = plt.subplots(figsize=(12, 6))\n        ax.set_xlabel('Words')\n        ax.set_ylabel('Frequency')\n        ax.set_title('Top 10 Most Common Words (No words found)')\n    \n    return top_10, ax",
  "model": "claude-sonnet-4"
}