{
  "task_id": "BigCodeBench/368",
  "instruct_prompt": "Moves a random file from the source directory to the specified destination directory.\nThe function should output with:\n    str: The name of the file moved. Format: 'filename.extension' (e.g., 'file1.txt').\nYou should write self-contained code starting with:\n```\nimport os\nimport shutil\nimport random\ndef task_func(src_dir: str, dest_dir: str, seed:int = 100) -> str:\n```",
  "llm_response": "import os\nimport shutil\nimport random\ndef task_func(src_dir: str, dest_dir: str, seed: int = 100) -> str:\n    \"\"\"\n    Moves a random file from the source directory to the specified destination directory.\n    \n    Args:\n        src_dir (str): Path to the source directory\n        dest_dir (str): Path to the destination directory\n        seed (int): Random seed for reproducible results (default: 100)\n    \n    Returns:\n        str: The name of the file moved. Format: 'filename.extension' (e.g., 'file1.txt').\n    \n    Raises:\n        ValueError: If source directory doesn't exist or contains no files\n        OSError: If destination directory cannot be created or file cannot be moved\n    \"\"\"\n    # Set random seed for reproducible results\n    random.seed(seed)\n    \n    # Check if source directory exists\n    if not os.path.exists(src_dir):\n        raise ValueError(f\"Source directory '{src_dir}' does not exist\")\n    \n    # Get list of files (not directories) in source directory\n    files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    \n    # Check if there are any files to move\n    if not files:\n        raise ValueError(f\"No files found in source directory '{src_dir}'\")\n    \n    # Create destination directory if it doesn't exist\n    os.makedirs(dest_dir, exist_ok=True)\n    \n    # Select a random file\n    selected_file = random.choice(files)\n    \n    # Construct full paths\n    src_path = os.path.join(src_dir, selected_file)\n    dest_path = os.path.join(dest_dir, selected_file)\n    \n    # Move the file\n    shutil.move(src_path, dest_path)\n    \n    return selected_file",
  "model": "claude-sonnet-4"
}