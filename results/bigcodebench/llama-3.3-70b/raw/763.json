{
  "task_id": "BigCodeBench/763",
  "instruct_prompt": "Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\nThe function should output with:\n    dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n# Constants\ndef task_func(input_file, output_file):\n```",
  "llm_response": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\ndef task_func(input_file, output_file):\n    \"\"\"\n    This function reads a list of dictionaries from a JSON file, calculates the mean and median for each key, \n    and writes the results to a CSV file.\n\n    Args:\n        input_file (str): The path to the input JSON file.\n        output_file (str): The path to the output CSV file.\n\n    Returns:\n        dict: A dictionary where each key is a field from the input JSON and each value is another dictionary \n              with the mean and median of that field.\n    \"\"\"\n\n    # Initialize an empty dictionary to store the results\n    result = defaultdict(list)\n\n    # Read the JSON file\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n\n    # Iterate over each dictionary in the list\n    for item in data:\n        # Iterate over each key-value pair in the dictionary\n        for key, value in item.items():\n            # Try to convert the value to a float (in case it's a string)\n            try:\n                value = float(value)\n            except ValueError:\n                # If the value can't be converted to a float, skip it\n                continue\n            # Add the value to the result dictionary\n            result[key].append(value)\n\n    # Calculate the mean and median for each key\n    stats = {}\n    for key, values in result.items():\n        mean = np.mean(values)\n        median = np.median(values)\n        stats[key] = {'mean': mean, 'median': median}\n\n    # Write the results to a CSV file\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writerow(['Field', 'Mean', 'Median'])\n        for key, values in stats.items():\n            writer.writerow([key, values['mean'], values['median']])\n\n    return stats\ninput_file = 'input.json'\noutput_file = 'output.csv'",
  "model": "llama-3.3-70b"
}