{
  "task_id": "BigCodeBench/771",
  "instruct_prompt": "Processes CSV files in a directory based on a specified pattern and creates new files with altered names while preserving the content, you've laid out a solid foundation with your initial tests.\nThe function should output with:\n    new_files (list): A list of strings, where each string is the filename of a new CSV file created by the function.\nYou should write self-contained code starting with:\n```\nimport re\nimport os\nfrom pathlib import Path\nimport csv\ndef task_func(directory: str, pattern: str = r'^(.*?)-\\d+\\.csv$') -> list:\n```",
  "llm_response": "import re\nimport os\nfrom pathlib import Path\nimport csv\ndef task_func(directory: str, pattern: str = r'^(.*?)-\\d+\\.csv$') -> list:\n    \"\"\"\n    Processes CSV files in a directory based on a specified pattern and creates new files with altered names while preserving the content.\n\n    Args:\n    directory (str): The path to the directory containing the CSV files.\n    pattern (str): A regular expression pattern to match the CSV filenames. Defaults to r'^(.*?)-\\d+\\.csv$'.\n\n    Returns:\n    list: A list of strings, where each string is the filename of a new CSV file created by the function.\n    \"\"\"\n    # Initialize an empty list to store the new filenames\n    new_files = []\n\n    # Compile the regular expression pattern\n    regex = re.compile(pattern)\n\n    # Iterate over each file in the directory\n    for filename in os.listdir(directory):\n        # Check if the file is a CSV file and matches the pattern\n        if filename.endswith('.csv') and regex.match(filename):\n            # Extract the base filename without the numeric suffix\n            base_filename = regex.sub(r'\\1.csv', filename)\n\n            # Construct the full path to the new file\n            new_filename = os.path.join(directory, base_filename)\n\n            # Check if the new filename already exists\n            if os.path.exists(new_filename):\n                # If it exists, append a numeric suffix to the new filename\n                base, extension = os.path.splitext(base_filename)\n                i = 1\n                while os.path.exists(new_filename):\n                    new_filename = os.path.join(directory, f'{base}_{i}{extension}')\n                    i += 1\n\n            # Copy the content of the original file to the new file\n            with open(os.path.join(directory, filename), 'r') as original_file, open(new_filename, 'w', newline='') as new_file:\n                csv_writer = csv.writer(new_file)\n                csv_reader = csv.reader(original_file)\n                for row in csv_reader:\n                    csv_writer.writerow(row)\n\n            # Add the new filename to the list\n            new_files.append(os.path.basename(new_filename))\n\n    return new_files",
  "model": "llama-3.3-70b"
}