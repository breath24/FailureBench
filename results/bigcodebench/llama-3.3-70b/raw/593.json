{
  "task_id": "BigCodeBench/593",
  "instruct_prompt": "Generates traffic data for different vehicle types over a specified number of hours, saves the data to a CSV file with coloumns 'Time', 'Car', 'Bus', 'Truck', and 'Bike', and plots the data in a line chart with 'Time' on x-axis and 'Vehicle Count' on y-axis.\nThe function should output with:\n    tuple: Path to the CSV file and the matplotlib axes object of the line plot.\nYou should write self-contained code starting with:\n```\nimport csv\nimport os\nfrom datetime import datetime\nfrom random import randint\nimport matplotlib.pyplot as plt\nimport pandas as pd\n# Constants\nVEHICLE_TYPES = ['Car', 'Bus', 'Truck', 'Bike']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n```",
  "llm_response": "import csv\nimport os\nfrom datetime import datetime, timedelta\nfrom random import randint\nimport matplotlib.pyplot as plt\nimport pandas as pd\nVEHICLE_TYPES = ['Car', 'Bus', 'Truck', 'Bike']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n    \"\"\"\n    Generates traffic data for different vehicle types over a specified number of hours,\n    saves the data to a CSV file, and plots the data in a line chart.\n\n    Args:\n        hours (int): The number of hours to generate traffic data for.\n        output_dir (str, optional): The directory to save the CSV file and plot. Defaults to './output'.\n\n    Returns:\n        tuple: Path to the CSV file and the matplotlib axes object of the line plot.\n    \"\"\"\n\n    # Create the output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Generate traffic data\n    data = {\n        'Time': [],\n        'Car': [],\n        'Bus': [],\n        'Truck': [],\n        'Bike': []\n    }\n    start_time = datetime.now()\n    for i in range(hours):\n        current_time = start_time + timedelta(hours=i)\n        data['Time'].append(current_time.strftime('%Y-%m-%d %H:%M:%S'))\n        data['Car'].append(randint(0, 100))\n        data['Bus'].append(randint(0, 20))\n        data['Truck'].append(randint(0, 50))\n        data['Bike'].append(randint(0, 50))\n\n    # Save the data to a CSV file\n    csv_file_path = os.path.join(output_dir, 'traffic_data.csv')\n    with open(csv_file_path, 'w', newline='') as csvfile:\n        fieldnames = ['Time', 'Car', 'Bus', 'Truck', 'Bike']\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n        writer.writeheader()\n        for i in range(hours):\n            writer.writerow({\n                'Time': data['Time'][i],\n                'Car': data['Car'][i],\n                'Bus': data['Bus'][i],\n                'Truck': data['Truck'][i],\n                'Bike': data['Bike'][i]\n            })\n\n    # Plot the data\n    df = pd.read_csv(csv_file_path)\n    fig, ax = plt.subplots()\n    for vehicle_type in VEHICLE_TYPES:\n        ax.plot(df['Time'], df[vehicle_type], label=vehicle_type)\n    ax.set_xlabel('Time')\n    ax.set_ylabel('Vehicle Count')\n    ax.set_title('Traffic Data')\n    ax.legend()\n    plt.xticks(rotation=90)\n\n    # Save the plot\n    plot_file_path = os.path.join(output_dir, 'traffic_plot.png')\n    plt.savefig(plot_file_path, bbox_inches='tight')\n\n    return csv_file_path, ax",
  "model": "llama-3.3-70b"
}