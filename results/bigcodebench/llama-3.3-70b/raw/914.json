{
  "task_id": "BigCodeBench/914",
  "instruct_prompt": "Predicts the stock closing prices for the next 7 days using simple linear regression and plots the data. Constants: - The function uses a constant time step of 24*60*60 seconds to generate future timestamps.\nThe function should output with:\n    tuple: A tuple containing:\n    list: A list with predicted prices for the next 7 days.\n    Axes: The matplotlib Axes object containing the plot.\nYou should write self-contained code starting with:\n```\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\ndef task_func(df):\n```",
  "llm_response": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\ndef task_func(df):\n    \"\"\"\n    Predicts the stock closing prices for the next 7 days using simple linear regression and plots the data.\n\n    Args:\n    df (pd.DataFrame): A pandas DataFrame containing the historical stock prices with a 'Date' column and a 'Close' column.\n\n    Returns:\n    tuple: A tuple containing a list with predicted prices for the next 7 days and the matplotlib Axes object containing the plot.\n    \"\"\"\n\n    # Ensure the 'Date' column is of datetime type\n    df['Date'] = pd.to_datetime(df['Date'])\n\n    # Set the 'Date' column as the index\n    df.set_index('Date', inplace=True)\n\n    # Create a new column 'Day' which represents the day number\n    df['Day'] = np.arange(len(df))\n\n    # Create a linear regression model\n    model = LinearRegression()\n\n    # Fit the model to the data\n    model.fit(df[['Day']], df['Close'])\n\n    # Generate future timestamps\n    future_days = np.arange(len(df), len(df) + 7)\n\n    # Predict the stock closing prices for the next 7 days\n    predicted_prices = model.predict(future_days.reshape(-1, 1)).tolist()\n\n    # Create a new figure and axis\n    fig, ax = plt.subplots()\n\n    # Plot the historical data\n    ax.plot(df.index, df['Close'], label='Historical Data')\n\n    # Plot the predicted data\n    future_dates = pd.date_range(start=df.index[-1] + pd.Timedelta(seconds=24*60*60), periods=7)\n    ax.plot(future_dates, predicted_prices, label='Predicted Data', linestyle='--')\n\n    # Set the title and labels\n    ax.set_title('Stock Closing Prices')\n    ax.set_xlabel('Date')\n    ax.set_ylabel('Price')\n\n    # Add a legend\n    ax.legend()\n\n    # Return the predicted prices and the axis\n    return predicted_prices, ax",
  "model": "llama-3.3-70b"
}