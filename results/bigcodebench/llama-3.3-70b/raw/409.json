{
  "task_id": "BigCodeBench/409",
  "instruct_prompt": "Calculate the mean, median, and standard deviation of the data from a specific column in an Excel file.\nThe function should raise the exception for: FileNotFoundError: If the Excel file does not exist at the specified path. ValueError: If the specified column is not found in the Excel file.\nThe function should output with:\n    dict: A dictionary with the mean, median, and standard deviation.\nYou should write self-contained code starting with:\n```\nimport os\nimport pandas as pd\nimport numpy as np\ndef task_func(excel_file_path, file_name, column_name):\n```",
  "llm_response": "import os\nimport pandas as pd\nimport numpy as np\ndef task_func(excel_file_path, file_name, column_name):\n    \"\"\"\n    Calculate the mean, median, and standard deviation of the data from a specific column in an Excel file.\n\n    Args:\n        excel_file_path (str): The path to the Excel file.\n        file_name (str): The name of the Excel file.\n        column_name (str): The name of the column to calculate statistics from.\n\n    Returns:\n        dict: A dictionary with the mean, median, and standard deviation.\n\n    Raises:\n        FileNotFoundError: If the Excel file does not exist at the specified path.\n        ValueError: If the specified column is not found in the Excel file.\n    \"\"\"\n\n    # Check if the Excel file exists at the specified path\n    if not os.path.isfile(os.path.join(excel_file_path, file_name)):\n        raise FileNotFoundError(f\"The Excel file {file_name} does not exist at the specified path {excel_file_path}\")\n\n    # Read the Excel file into a pandas DataFrame\n    try:\n        df = pd.read_excel(os.path.join(excel_file_path, file_name))\n    except Exception as e:\n        raise Exception(f\"Failed to read the Excel file: {str(e)}\")\n\n    # Check if the specified column exists in the DataFrame\n    if column_name not in df.columns:\n        raise ValueError(f\"The column {column_name} is not found in the Excel file {file_name}\")\n\n    # Calculate the mean, median, and standard deviation of the data in the specified column\n    mean = np.mean(df[column_name])\n    median = np.median(df[column_name])\n    std_dev = np.std(df[column_name])\n\n    # Return the results as a dictionary\n    return {\n        \"mean\": mean,\n        \"median\": median,\n        \"standard_deviation\": std_dev\n    }",
  "model": "llama-3.3-70b"
}