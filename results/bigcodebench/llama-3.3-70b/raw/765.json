{
  "task_id": "BigCodeBench/765",
  "instruct_prompt": "Process files from a dictionary by checking if the file exists, and if it has content, then copies it to a target directory.\nThe function should output with:\n    copied_files (list): A list of full file paths that were copied.\nYou should write self-contained code starting with:\n```\nimport os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n```",
  "llm_response": "import os\nfrom pathlib import Path\nimport shutil\ndef task_func(kwargs, target_dir=\"non_none_files\"):\n    \"\"\"\n    Process files from a dictionary by checking if the file exists, \n    and if it has content, then copies it to a target directory.\n\n    Args:\n        kwargs (dict): A dictionary containing file paths as values.\n        target_dir (str, optional): The target directory to copy files to. Defaults to \"non_none_files\".\n\n    Returns:\n        list: A list of full file paths that were copied.\n    \"\"\"\n    # Create the target directory if it doesn't exist\n    target_dir_path = Path(target_dir)\n    target_dir_path.mkdir(parents=True, exist_ok=True)\n\n    copied_files = []\n    for file_path in kwargs.values():\n        # Check if the file exists and has content\n        file_path_obj = Path(file_path)\n        if file_path_obj.exists() and file_path_obj.stat().st_size > 0:\n            # Copy the file to the target directory\n            filename = file_path_obj.name\n            target_file_path = target_dir_path / filename\n            shutil.copy2(file_path, target_file_path)\n            copied_files.append(str(target_file_path))\n\n    return copied_files",
  "model": "llama-3.3-70b"
}