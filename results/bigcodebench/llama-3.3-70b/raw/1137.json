{
  "task_id": "BigCodeBench/1137",
  "instruct_prompt": "Extracts phone numbers from a given URL or local file and saves them to a specified file in JSON format.\nThe function should output with:\n    list: A list of strings, each representing a found phone number.\nYou should write self-contained code starting with:\n```\nimport bs4\nimport requests\nimport re\nimport json\ndef task_func(url: str, output_path: str) -> list:\n```",
  "llm_response": "import bs4\nimport requests\nimport re\nimport json\ndef task_func(url: str, output_path: str) -> list:\n    \"\"\"\n    Extracts phone numbers from a given URL or local file and saves them to a specified file in JSON format.\n\n    Args:\n        url (str): The URL or local file path to extract phone numbers from.\n        output_path (str): The file path to save the extracted phone numbers in JSON format.\n\n    Returns:\n        list: A list of strings, each representing a found phone number.\n    \"\"\"\n\n    # Check if the URL is a local file\n    if not url.startswith('http'):\n        try:\n            # Open the local file and read its content\n            with open(url, 'r') as file:\n                content = file.read()\n        except FileNotFoundError:\n            print(f\"File {url} not found.\")\n            return []\n    else:\n        try:\n            # Send a GET request to the URL and get its content\n            response = requests.get(url)\n            content = response.text\n        except requests.exceptions.RequestException as e:\n            print(f\"An error occurred: {e}\")\n            return []\n\n    # Use regular expression to find phone numbers in the content\n    phone_numbers = re.findall(r'(\\d{3}[-\\.\\s]??\\d{3}[-\\.\\s]??\\d{4}|\\(\\d{3}\\)\\s*\\d{3}[-\\.\\s]??\\d{4}|\\d{3}[-\\.\\s]??\\d{4})', content)\n\n    # Save the phone numbers to a file in JSON format\n    with open(output_path, 'w') as file:\n        json.dump(phone_numbers, file)\n\n    return phone_numbers\nurl = 'https://www.example.com'\noutput_path = 'phone_numbers.json'",
  "model": "llama-3.3-70b"
}