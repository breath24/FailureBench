{
  "task_id": "BigCodeBench/399",
  "instruct_prompt": "Create a diagram of a sine wave and cosine wave with a given frequency and return the plot.\nThe function should raise the exception for: ValueError: If the frequency is negative. ValueError: If the sample size is non-positive.\nThe function should output with:\n    matplotlib.figure.Figure: The figure object containing the plot.\n    matplotlib.axes.Axes: The axes object of the plot.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport math\ndef task_func(frequency, sample_size=10000):\n```",
  "llm_response": "import numpy as np\nimport matplotlib.pyplot as plt\nimport math\ndef task_func(frequency, sample_size=10000):\n    \"\"\"\n    This function generates a plot of a sine wave and a cosine wave with a given frequency.\n\n    Args:\n        frequency (float): The frequency of the sine and cosine waves.\n        sample_size (int, optional): The number of samples to generate. Defaults to 10000.\n\n    Returns:\n        matplotlib.figure.Figure: The figure object containing the plot.\n        matplotlib.axes.Axes: The axes object of the plot.\n\n    Raises:\n        ValueError: If the frequency is negative.\n        ValueError: If the sample size is non-positive.\n    \"\"\"\n\n    # Check if the frequency is negative\n    if frequency < 0:\n        raise ValueError(\"Frequency cannot be negative.\")\n\n    # Check if the sample size is non-positive\n    if sample_size <= 0:\n        raise ValueError(\"Sample size must be positive.\")\n\n    # Generate x values\n    x = np.linspace(0, 1, sample_size)\n\n    # Generate y values for sine and cosine waves\n    y_sin = np.sin(2 * np.pi * frequency * x)\n    y_cos = np.cos(2 * np.pi * frequency * x)\n\n    # Create a figure and axis object\n    fig, ax = plt.subplots()\n\n    # Plot the sine and cosine waves\n    ax.plot(x, y_sin, label='Sine Wave')\n    ax.plot(x, y_cos, label='Cosine Wave')\n\n    # Set title and labels\n    ax.set_title(f'Sine and Cosine Waves with Frequency {frequency}')\n    ax.set_xlabel('Time')\n    ax.set_ylabel('Amplitude')\n\n    # Add legend\n    ax.legend()\n\n    # Return the figure and axis objects\n    return fig, ax",
  "model": "llama-3.3-70b"
}