{
  "task_id": "BigCodeBench/678",
  "instruct_prompt": "Processes JSON files in a directory. The function reads each JSON file alphabetically into a DataFrame and inserts a \"Source\" column that specifies the filename. The processed files are then moved to a \"processed\" subdirectory. The path may not exist initially.\nThe function should output with:\n    df (pandas.DataFrame): A DataFrame containing the data from all processed files.\nYou should write self-contained code starting with:\n```\nimport pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n```",
  "llm_response": "import pandas as pd\nimport json\nimport os\nimport shutil\ndef task_func(path):\n    \"\"\"\n    This function processes JSON files in a specified directory, reads each file into a DataFrame, \n    adds a 'Source' column with the filename, and moves the processed files to a 'processed' subdirectory.\n\n    Args:\n        path (str): The path to the directory containing the JSON files.\n\n    Returns:\n        pd.DataFrame: A DataFrame containing the data from all processed files.\n    \"\"\"\n\n    # Check if the path exists, if not create it\n    if not os.path.exists(path):\n        os.makedirs(path)\n\n    # Create a 'processed' subdirectory if it does not exist\n    processed_path = os.path.join(path, 'processed')\n    if not os.path.exists(processed_path):\n        os.makedirs(processed_path)\n\n    # Initialize an empty list to store the DataFrames\n    dfs = []\n\n    # Get a list of JSON files in the directory, sorted alphabetically\n    json_files = sorted([f for f in os.listdir(path) if f.endswith('.json')])\n\n    # Process each JSON file\n    for file in json_files:\n        # Construct the full path to the file\n        file_path = os.path.join(path, file)\n\n        # Read the JSON file into a DataFrame\n        df = pd.read_json(file_path)\n\n        # Add a 'Source' column with the filename\n        df['Source'] = file\n\n        # Append the DataFrame to the list\n        dfs.append(df)\n\n        # Move the processed file to the 'processed' subdirectory\n        shutil.move(file_path, processed_path)\n\n    # Concatenate the DataFrames into a single DataFrame\n    df = pd.concat(dfs, ignore_index=True)\n\n    return df",
  "model": "llama-3.3-70b"
}