{
  "task_id": "HumanEval/86",
  "llm_response": "import re\n\ndef anti_shuffle(s):\n    def sort_word(word):\n        if re.match('^[a-zA-Z]+$', word):\n            return ''.join(sorted(word, key=lambda x: (x.lower(), x)))\n        else:\n            return ''.join(sorted(word, key=lambda x: ord(x)))\n\n    return ' '.join(sort_word(word) for word in s.split(' '))",
  "model": "llama-3.3-70b",
  "task_description": "\ndef anti_shuffle(s):\n    \"\"\"\n    Write a function that takes a string and returns an ordered version of it.\n    Ordered version of string, is a string where all words (separated by space)\n    are replaced by a new word where all the characters arranged in\n    ascending order based on ascii value.\n    Note: You should keep the order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\n"
}