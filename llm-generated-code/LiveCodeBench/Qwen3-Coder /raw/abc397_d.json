{
  "task_id": "abc397_d",
  "task_description": "You are given a positive integer N. Determine whether there exists a pair of positive integers (x,y) such that x^3 - y^3 = N. If such a pair exists, print one such pair (x,y).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nIf there is no pair of positive integers (x,y) satisfying x^3 - y^3 = N, print -1.\r\nIf there is such a pair, print x and y in this order separated by a space. If there are multiple solutions, printing any one of them is accepted as correct.\n\nConstraints\n\n\n- 1 \\leq N \\leq 10^{18}\n- All input values are integers.\n\nSample Input 1\n\n397\n\nSample Output 1\n\n12 11\r\n\nWe have 12^3 - 11^3 = 397, so (x,y) = (12,11) is a solution.\n\nSample Input 2\n\n1\n\nSample Output 2\n\n-1\r\n\nNo pair of positive integers (x,y) satisfies x^3 - y^3 = 1. Thus, print -1.\n\nSample Input 3\n\n39977273855577088\n\nSample Output 3\n\n342756 66212",
  "llm_response": "import math\n\ndef candidate_func(input_str):\n    N = int(input_str.strip())\n    \n    if N == 1:\n        return \"-1\"\n    \n    # x^3 - y^3 = (x-y)(x^2 + xy + y^2) = N\n    # Let d = x - y, then x = y + d\n    # N = d((y+d)^2 + (y+d)y + y^2) = d(y^2 + 2dy + d^2 + y^2 + dy + y^2) = d(3y^2 + 3dy + d^2)\n    # N = d(3y^2 + 3dy + d^2)\n    # So 3y^2 + 3dy + d^2 = N/d\n    \n    # Since x,y are positive integers and x > y, we have d >= 1\n    # Also, since y >= 1, we have 3y^2 + 3dy + d^2 >= 3 + 3d + d^2\n    # So N/d >= 3 + 3d + d^2, which means N >= d(3 + 3d + d^2) = 3d + 3d^2 + d^3\n    # For large d, this gives us an upper bound on d\n    \n    max_d = int(N**(1/3)) + 100\n    \n    for d in range(1, min(max_d, int(N**(1/3)) + 100)):\n        if N % d == 0:\n            # Check if we can find integer y\n            # 3y^2 + 3dy + d^2 = N/d\n            # 3y^2 + 3dy + (d^2 - N/d) = 0\n            # Using quadratic formula: y = (-3d ± sqrt(9d^2 - 12(d^2 - N/d))) / 6\n            # y = (-3d ± sqrt(9d^2 - 12d^2 + 12N/d)) / 6\n            # y = (-3d ± sqrt(12N/d - 3d^2)) / 6\n            \n            discriminant = 12 * N // d - 3 * d * d\n            if discriminant < 0:\n                continue\n                \n            sqrt_discriminant = int(math.sqrt(discriminant))\n            if sqrt_discriminant * sqrt_discriminant != discriminant:\n                continue\n                \n            # Check both roots\n            if (-3 * d + sqrt_discriminant) % 6 == 0:\n                y = (-3 * d + sqrt_discriminant) // 6\n                if y > 0:\n                    x = y + d\n                    if x * x * x - y * y * y == N:\n                        return f\"{x} {y}\"\n            \n            if (-3 * d - sqrt_discriminant) % 6 == 0:\n                y = (-3 * d - sqrt_discriminant) // 6\n                if y > 0:\n                    x = y + d\n                    if x * x * x - y * y * y == N:\n                        return f\"{x} {y}\"\n    \n    return \"-1\"",
  "model": "qwen3-coder"
}