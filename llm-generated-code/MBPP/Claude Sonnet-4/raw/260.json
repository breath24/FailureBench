{
  "task_id": "Mbpp/260",
  "task_description": "Write a function to find the nth newman–shanks–williams prime number.",
  "llm_response": "def is_prime(n):\n    if n < 2:\n        return False\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef newman_prime(n):\n    def nsw_sequence(k):\n        if k == 0:\n            return 1\n        elif k == 1:\n            return 1\n        else:\n            a, b = 1, 1\n            for i in range(2, k + 1):\n                a, b = b, 2 * b + a\n            return b\n    \n    count = 0\n    k = 1\n    while count < n:\n        nsw_num = nsw_sequence(k)\n        if is_prime(nsw_num):\n            count += 1\n            if count == n:\n                return nsw_num\n        k += 1",
  "model": "claude-sonnet-4"
}