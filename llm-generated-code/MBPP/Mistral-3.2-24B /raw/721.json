{
  "task_id": "Mbpp/721",
  "task_description": "Write a function to find a path with the maximum average over all existing paths for the given square matrix of size n*n.",
  "llm_response": "def maxAverageOfPath(matrix):\n    if not matrix or not matrix[0]:\n        return 0.0\n\n    n = len(matrix)\n    dp = [[0] * n for _ in range(n)]\n    dp[0][0] = matrix[0][0]\n\n    for i in range(1, n):\n        dp[0][i] = dp[0][i-1] + matrix[0][i]\n        dp[i][0] = dp[i-1][0] + matrix[i][0]\n\n    for i in range(1, n):\n        for j in range(1, n):\n            dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + matrix[i][j]\n\n    max_avg = dp[n-1][n-1] / (2 * n - 1)\n    return max_avg",
  "model": "mistral-3.2-24b"
}