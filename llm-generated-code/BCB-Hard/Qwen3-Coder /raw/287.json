{
  "task_id": "BigCodeBench/287",
  "instruct_prompt": "Count the number of words in .txt files within a specified directory, export the counts to a JSON file, and then return the total number of words.\nThe function should output with:\n    int: total number of words in .txt files\nYou should write self-contained code starting with:\n```\nfrom collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n```",
  "llm_response": "from collections import Counter\nimport os\nimport json\ndef task_func(filename, directory):\n    \"\"\"\n    Count the number of words in .txt files within a specified directory,\n    export the counts to a JSON file, and return the total number of words.\n    \n    Args:\n        filename (str): Name of the JSON file to export word counts\n        directory (str): Directory path to search for .txt files\n    \n    Returns:\n        int: Total number of words in .txt files\n    \"\"\"\n    word_counts = Counter()\n    \n    # Walk through all files in the directory\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            # Process only .txt files\n            if file.endswith('.txt'):\n                file_path = os.path.join(root, file)\n                \n                try:\n                    # Read and process the file\n                    with open(file_path, 'r', encoding='utf-8') as f:\n                        content = f.read()\n                        # Split by whitespace and filter out empty strings\n                        words = [word for word in content.split() if word]\n                        word_counts.update(words)\n                except Exception as e:\n                    # Skip files that can't be read\n                    print(f\"Warning: Could not read file {file_path}: {e}\")\n    \n    # Export to JSON file\n    with open(filename, 'w', encoding='utf-8') as f:\n        json.dump(dict(word_counts), f, indent=2)\n    \n    # Return total word count\n    return sum(word_counts.values())",
  "model": "qwen3-coder"
}