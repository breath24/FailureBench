{
  "task_id": "BigCodeBench/310",
  "instruct_prompt": "Generates a CSV file containing simulated data for 100 people, including name, age, height, and weight. It also calculates and appends the average age, height, and weight at the end of the file.\nThe function should output with:\n    str: The path of the created CSV file.\nYou should write self-contained code starting with:\n```\nimport os\nimport csv\nimport random\nfrom statistics import mean\n# Constants\nCOLUMNS = ['Name', 'Age', 'Height', 'Weight']\nPEOPLE_COUNT = 100\ndef task_func(filename):\n```",
  "llm_response": "import os\nimport csv\nimport random\nfrom statistics import mean\nCOLUMNS = ['Name', 'Age', 'Height', 'Weight']\nPEOPLE_COUNT = 100\ndef task_func(filename):\n    # Create a list to store all the data\n    data = []\n\n    # Generate random data for 100 people\n    for i in range(PEOPLE_COUNT):\n        # Generate random name (first and last)\n        first_names = ['James', 'Mary', 'John', 'Patricia', 'Robert', 'Jennifer', 'Michael', 'Linda', 'William', 'Elizabeth']\n        last_names = ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Miller', 'Davis', 'Garcia', 'Rodriguez', 'Wilson']\n        name = f\"{random.choice(first_names)} {random.choice(last_names)}\"\n\n        # Generate random age (18-80)\n        age = random.randint(18, 80)\n\n        # Generate random height (150-200 cm)\n        height = round(random.uniform(150, 200), 1)\n\n        # Generate random weight (40-120 kg)\n        weight = round(random.uniform(40, 120), 1)\n\n        data.append([name, age, height, weight])\n\n    # Calculate averages\n    ages = [person[1] for person in data]\n    heights = [person[2] for person in data]\n    weights = [person[3] for person in data]\n\n    avg_age = mean(ages)\n    avg_height = mean(heights)\n    avg_weight = mean(weights)\n\n    # Append averages to the data\n    data.append(['Average', avg_age, avg_height, avg_weight])\n\n    # Write to CSV file\n    with open(filename, 'w', newline='') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(COLUMNS)\n        writer.writerows(data)\n\n    return filename",
  "model": "mistral-3.2-24b"
}