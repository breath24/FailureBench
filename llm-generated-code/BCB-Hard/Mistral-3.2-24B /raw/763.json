{
  "task_id": "BigCodeBench/763",
  "instruct_prompt": "Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\nThe function should output with:\n    dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n# Constants\ndef task_func(input_file, output_file):\n```",
  "llm_response": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\ndef task_func(input_file, output_file):\n    \"\"\"\n    Reads a list of dictionaries from a JSON file, calculates mean and median for each key,\n    and writes the results to a CSV file.\n\n    Args:\n        input_file (str): Path to the input JSON file\n        output_file (str): Path to the output CSV file\n\n    Returns:\n        dict: A dictionary where each key is a field from the input JSON and each value\n              is another dictionary with the mean and median of that field.\n    \"\"\"\n    # Read JSON file\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n\n    # Initialize result dictionary\n    results = {}\n\n    # Calculate statistics for each key\n    for entry in data:\n        for key, value in entry.items():\n            if key not in results:\n                results[key] = {'values': []}\n            # Convert value to float if possible (for numeric calculations)\n            try:\n                results[key]['values'].append(float(value))\n            except (ValueError, TypeError):\n                # Skip non-numeric values\n                continue\n\n    # Calculate mean and median for each key\n    final_results = {}\n    for key, values_dict in results.items():\n        values = values_dict['values']\n        if len(values) == 0:\n            final_results[key] = {'mean': None, 'median': None}\n            continue\n\n        mean = np.mean(values)\n        median = np.median(values)\n        final_results[key] = {'mean': mean, 'median': median}\n\n    # Write to CSV\n    with open(output_file, 'w', newline='') as csvfile:\n        fieldnames = ['key', 'mean', 'median']\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n\n        writer.writeheader()\n        for key, stats in final_results.items():\n            writer.writerow({\n                'key': key,\n                'mean': stats['mean'],\n                'median': stats['median']\n            })\n\n    return final_results",
  "model": "mistral-3.2-24b"
}