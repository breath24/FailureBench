{
  "task_id": "BigCodeBench/1137",
  "instruct_prompt": "Extracts phone numbers from a given URL or local file and saves them to a specified file in JSON format.\nThe function should output with:\n    list: A list of strings, each representing a found phone number.\nYou should write self-contained code starting with:\n```\nimport bs4\nimport requests\nimport re\nimport json\ndef task_func(url: str, output_path: str) -> list:\n```",
  "llm_response": "import bs4\nimport requests\nimport re\nimport json\ndef task_func(url: str, output_path: str) -> list:\n    # Regular expression pattern for matching phone numbers\n    phone_pattern = re.compile(r'\\+?\\d[\\d\\s\\-\\(\\)]{7,}\\d')\n\n    def extract_phone_numbers(text: str) -> list:\n        \"\"\"Extract phone numbers from the given text.\"\"\"\n        return phone_pattern.findall(text)\n\n    def fetch_content(url: str) -> str:\n        \"\"\"Fetch content from a URL or read from a local file.\"\"\"\n        try:\n            if url.startswith('http://') or url.startswith('https://'):\n                response = requests.get(url)\n                response.raise_for_status()\n                return response.text\n            else:\n                with open(url, 'r', encoding='utf-8') as file:\n                    return file.read()\n        except Exception as e:\n            print(f\"Error fetching content: {e}\")\n            return \"\"\n\n    # Fetch the content from the URL or file\n    content = fetch_content(url)\n\n    # Parse the content with BeautifulSoup\n    soup = bs4.BeautifulSoup(content, 'html.parser')\n\n    # Extract text from the parsed HTML\n    text_content = soup.get_text()\n\n    # Extract phone numbers from the text content\n    phone_numbers = extract_phone_numbers(text_content)\n\n    # Save the phone numbers to a JSON file\n    try:\n        with open(output_path, 'w', encoding='utf-8') as json_file:\n            json.dump(phone_numbers, json_file, ensure_ascii=False, indent=4)\n    except Exception as e:\n        print(f\"Error writing to file: {e}\")\n\n    return phone_numbers",
  "model": "gpt-4o"
}