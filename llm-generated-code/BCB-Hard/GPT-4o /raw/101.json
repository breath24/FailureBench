{
  "task_id": "BigCodeBench/101",
  "instruct_prompt": "Draw the correlation heatmap of the Boston Housing dataset using Seaborn, with an option to save it to a specified file.\nThe function should raise the exception for: ValueError: If an error occurs in generating or saving the plot.\nThe function should output with:\n    matplotlib.axes.Axes: The Axes object containing the heatmap plot.\nYou should write self-contained code starting with:\n```\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\ndef task_func(data_url=\"http://lib.stat.cmu.edu/datasets/boston\", seed=42):\n```",
  "llm_response": "import matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\ndef task_func(data_url=\"http://lib.stat.cmu.edu/datasets/boston\", seed=42, save_path=None):\n    try:\n        # Load the dataset\n        raw_df = pd.read_csv(data_url, sep=\"\\s+\", skiprows=22, header=None)\n        data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])\n        columns = [\n            \"CRIM\", \"ZN\", \"INDUS\", \"CHAS\", \"NOX\", \"RM\", \"AGE\", \"DIS\", \"RAD\", \n            \"TAX\", \"PTRATIO\", \"B\", \"LSTAT\", \"MEDV\"\n        ]\n        df = pd.DataFrame(data, columns=columns)\n\n        # Calculate the correlation matrix\n        corr = df.corr()\n\n        # Set the random seed for reproducibility\n        np.random.seed(seed)\n\n        # Create the heatmap\n        plt.figure(figsize=(10, 8))\n        ax = sns.heatmap(corr, annot=True, fmt=\".2f\", cmap=\"coolwarm\", cbar=True, square=True)\n        plt.title(\"Correlation Heatmap of Boston Housing Dataset\")\n\n        # Save the plot if a save path is provided\n        if save_path:\n            plt.savefig(save_path)\n\n        # Return the Axes object\n        return ax\n\n    except Exception as e:\n        raise ValueError(f\"An error occurred in generating or saving the plot: {e}\")",
  "model": "gpt-4o"
}