{
  "task_id": "BigCodeBench/368",
  "instruct_prompt": "Moves a random file from the source directory to the specified destination directory.\nThe function should output with:\n    str: The name of the file moved. Format: 'filename.extension' (e.g., 'file1.txt').\nYou should write self-contained code starting with:\n```\nimport os\nimport shutil\nimport random\ndef task_func(src_dir: str, dest_dir: str, seed:int = 100) -> str:\n```",
  "llm_response": "import os\nimport shutil\nimport random\ndef task_func(src_dir: str, dest_dir: str, seed: int = 100) -> str:\n    \"\"\"\n    Moves a random file from the source directory to the destination directory.\n    \n    Parameters:\n    - src_dir (str): The path to the source directory.\n    - dest_dir (str): The path to the destination directory.\n    - seed (int, optional): The seed for the random number generator. Defaults to 100.\n    \n    Returns:\n    - str: The name of the file moved. Format: 'filename.extension' (e.g., 'file1.txt').\n    \n    Raises:\n    - ValueError: If the source directory is empty or does not exist.\n    \"\"\"\n    random.seed(seed)\n    if not os.path.exists(src_dir):\n        raise ValueError(f\"Source directory does not exist: {src_dir}\")\n    files = [f for f in os.listdir(src_dir) if os.path.isfile(os.path.join(src_dir, f))]\n    if not files:\n        raise ValueError(f\"No files found in source directory: {src_dir}\")\n    selected_file = random.choice(files)\n    src_path = os.path.join(src_dir, selected_file)\n    dest_path = os.path.join(dest_dir, selected_file)\n    shutil.move(src_path, dest_path)\n    return selected_file",
  "model": "deepseek-chat-v3-0324"
}