{
  "task_id": "BigCodeBench/771",
  "instruct_prompt": "Processes CSV files in a directory based on a specified pattern and creates new files with altered names while preserving the content, you've laid out a solid foundation with your initial tests.\nThe function should output with:\n    new_files (list): A list of strings, where each string is the filename of a new CSV file created by the function.\nYou should write self-contained code starting with:\n```\nimport re\nimport os\nfrom pathlib import Path\nimport csv\ndef task_func(directory: str, pattern: str = r'^(.*?)-\\d+\\.csv$') -> list:\n```",
  "llm_response": "import re\nimport os\nfrom pathlib import Path\nimport csv\nimport shutil\ndef task_func(directory: str, pattern: str = r'^(.*?)-\\d+\\.csv$') -> list:\n    \"\"\"\n    Processes CSV files in a directory matching a specified pattern, creates new files with altered names,\n    and returns a list of the new filenames. The new filenames are created by removing the numeric part from\n    the original filename (as matched by the pattern). The content of the files is preserved.\n\n    Parameters:\n    - directory (str): The path to the directory containing the CSV files to process.\n    - pattern (str): A regular expression pattern to match the filenames. The default pattern looks for\n                    filenames in the format 'text-number.csv' and captures the 'text' part.\n\n    Returns:\n    - list: A list of strings, where each string is the filename of a new CSV file created by the function.\n\n    Example:\n    >>> new_files = task_func('/path/to/csv_files')\n    >>> print(new_files)\n    ['/path/to/csv_files/example.csv', '/path/to/csv_files/sample.csv']\n    \"\"\"\n    new_files = []\n    directory_path = Path(directory)\n    for file_path in directory_path.glob('*.csv'):\n        match = re.match(pattern, file_path.name)\n        if match:\n            new_filename = f\"{match.group(1)}.csv\"\n            new_filepath = file_path.parent / new_filename\n            shutil.copy2(file_path, new_filepath)\n            new_files.append(str(new_filepath))\n    return new_files",
  "model": "deepseek-chat-v3-0324"
}