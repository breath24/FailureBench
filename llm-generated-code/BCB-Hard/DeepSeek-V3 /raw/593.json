{
  "task_id": "BigCodeBench/593",
  "instruct_prompt": "Generates traffic data for different vehicle types over a specified number of hours, saves the data to a CSV file with coloumns 'Time', 'Car', 'Bus', 'Truck', and 'Bike', and plots the data in a line chart with 'Time' on x-axis and 'Vehicle Count' on y-axis.\nThe function should output with:\n    tuple: Path to the CSV file and the matplotlib axes object of the line plot.\nYou should write self-contained code starting with:\n```\nimport csv\nimport os\nfrom datetime import datetime\nfrom random import randint\nimport matplotlib.pyplot as plt\nimport pandas as pd\n# Constants\nVEHICLE_TYPES = ['Car', 'Bus', 'Truck', 'Bike']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n```",
  "llm_response": "import csv\nimport os\nfrom datetime import datetime\nfrom random import randint\nimport matplotlib.pyplot as plt\nimport pandas as pd\nVEHICLE_TYPES = ['Car', 'Bus', 'Truck', 'Bike']\nOUTPUT_DIR = './output'\ndef task_func(hours, output_dir=OUTPUT_DIR):\n    \"\"\"\n    Generates traffic data for different vehicle types over specified hours,\n    saves to CSV, and plots the data.\n\n    Parameters:\n    - hours (int): Number of hours to generate data for.\n    - output_dir (str): Directory to save output files. Default is './output'.\n\n    Returns:\n    - tuple: (csv_path, ax) where csv_path is the path to the CSV file and ax is the matplotlib axes object.\n\n    The CSV file has columns: Time, Car, Bus, Truck, Bike.\n    The plot displays vehicle counts over time.\n    \"\"\"\n    # Create output directory if it doesn't exist\n    os.makedirs(output_dir, exist_ok=True)\n    \n    # Generate timestamps and random traffic data\n    timestamps = []\n    car_counts = []\n    bus_counts = []\n    truck_counts = []\n    bike_counts = []\n    \n    current_time = datetime.now()\n    for _ in range(hours):\n        timestamps.append(current_time.strftime('%Y-%m-%d %H:%M:%S'))\n        car_counts.append(randint(50, 200))\n        bus_counts.append(randint(5, 30))\n        truck_counts.append(randint(10, 50))\n        bike_counts.append(randint(20, 100))\n        current_time = current_time.replace(hour=current_time.hour + 1)\n    \n    # Create DataFrame and save to CSV\n    data = {\n        'Time': timestamps,\n        'Car': car_counts,\n        'Bus': bus_counts,\n        'Truck': truck_counts,\n        'Bike': bike_counts\n    }\n    df = pd.DataFrame(data)\n    \n    csv_path = os.path.join(output_dir, 'traffic_data.csv')\n    df.to_csv(csv_path, index=False)\n    \n    # Plot the data\n    fig, ax = plt.subplots(figsize=(10, 6))\n    for vehicle in VEHICLE_TYPES:\n        ax.plot(timestamps, df[vehicle], label=vehicle, marker='o')\n    \n    ax.set_title('Vehicle Traffic Over Time')\n    ax.set_xlabel('Time')\n    ax.set_ylabel('Vehicle Count')\n    ax.legend()\n    ax.grid(True)\n    \n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n    plt.tight_layout()\n    \n    # Save the plot\n    plot_path = os.path.join(output_dir, 'traffic_plot.png')\n    plt.savefig(plot_path)\n    \n    return (csv_path, ax)",
  "model": "deepseek-chat-v3-0324"
}