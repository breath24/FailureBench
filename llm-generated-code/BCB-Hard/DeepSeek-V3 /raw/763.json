{
  "task_id": "BigCodeBench/763",
  "instruct_prompt": "Read a list of dictionaries from a JSON file, calculate the mean and median for each key, and write the results to a CSV file.\nThe function should output with:\n    dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\nYou should write self-contained code starting with:\n```\nimport numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\n# Constants\ndef task_func(input_file, output_file):\n```",
  "llm_response": "import numpy as np\nfrom collections import defaultdict\nimport json\nimport csv\nimport os\ndef task_func(input_file, output_file):\n    \"\"\"\n    Reads a list of dictionaries from a JSON file, calculates the mean and median for each key,\n    and writes the results to a CSV file.\n\n    Parameters:\n    - input_file (str): Path to the input JSON file.\n    - output_file (str): Path to the output CSV file.\n\n    Returns:\n    - dict: A dictionary where each key is a field from the input JSON and each value is another dictionary with the mean and median of that field.\n    \"\"\"\n    # Read the JSON file\n    with open(input_file, 'r') as f:\n        data = json.load(f)\n    \n    if not data:\n        return {}\n    \n    # Initialize a defaultdict to store values for each key\n    key_values = defaultdict(list)\n    \n    # Collect all values for each key\n    for item in data:\n        for key, value in item.items():\n            if isinstance(value, (int, float)):\n                key_values[key].append(value)\n    \n    # Calculate mean and median for each key\n    results = {}\n    for key, values in key_values.items():\n        mean = np.mean(values)\n        median = np.median(values)\n        results[key] = {'mean': mean, 'median': median}\n    \n    # Write results to CSV\n    with open(output_file, 'w', newline='') as f:\n        writer = csv.writer(f)\n        writer.writerow(['Key', 'Mean', 'Median'])\n        for key, stats in results.items():\n            writer.writerow([key, stats['mean'], stats['median']])\n    \n    return results",
  "model": "deepseek-chat-v3-0324"
}